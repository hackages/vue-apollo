{"version":3,"sources":["webpack:///./node_modules/ramda/src/internal/_isFunction.js","webpack:///./node_modules/ramda/src/dissoc.js","webpack:///./node_modules/ramda/src/defaultTo.js","webpack:///./node_modules/ramda/src/forEach.js","webpack:///./node_modules/ramda/src/mergeWithKey.js","webpack:///./node_modules/ramda/src/internal/_functionName.js","webpack:///./node_modules/ramda/src/until.js","webpack:///./node_modules/ramda/src/all.js","webpack:///./node_modules/ramda/src/uncurryN.js","webpack:///./node_modules/ramda/src/internal/_checkForMethod.js","webpack:///./node_modules/ramda/src/internal/_isTransformer.js","webpack:///./node_modules/ramda/src/transpose.js","webpack:///./node_modules/ramda/src/internal/_isRegExp.js","webpack:///./node_modules/ramda/src/internal/_concat.js","webpack:///./node_modules/ramda/src/internal/_indexOf.js","webpack:///./node_modules/ramda/src/scan.js","webpack:///./node_modules/ramda/src/reject.js","webpack:///./node_modules/ramda/src/groupBy.js","webpack:///./node_modules/ramda/src/binary.js","webpack:///./node_modules/ramda/src/pipe.js","webpack:///./node_modules/ramda/src/both.js","webpack:///./node_modules/ramda/src/lensProp.js","webpack:///./node_modules/ramda/src/internal/_cloneRegExp.js","webpack:///./node_modules/ramda/src/equals.js","webpack:///./node_modules/ramda/src/reduceWhile.js","webpack:///./node_modules/ramda/src/last.js","webpack:///./node_modules/ramda/src/mergeDeepWith.js","webpack:///./node_modules/ramda/src/mergeDeepRight.js","webpack:///./node_modules/ramda/src/comparator.js","webpack:///./node_modules/ramda/src/reduceBy.js","webpack:///./node_modules/ramda/src/uniqBy.js","webpack:///./node_modules/ramda/src/internal/_dropLastWhile.js","webpack:///./node_modules/ramda/src/internal/_pipeP.js","webpack:///./node_modules/ramda/src/mergeAll.js","webpack:///./node_modules/ramda/src/match.js","webpack:///./node_modules/ramda/src/isNil.js","webpack:///./node_modules/ramda/src/evolve.js","webpack:///./node_modules/ramda/src/mathMod.js","webpack:///./node_modules/ramda/src/internal/_forceReduced.js","webpack:///./node_modules/ramda/src/internal/_objectAssign.js","webpack:///./node_modules/ramda/src/flatten.js","webpack:///./node_modules/ramda/src/internal/_pipe.js","webpack:///./node_modules/ramda/src/internal/_isNumber.js","webpack:///./node_modules/ramda/src/internal/_clone.js","webpack:///./node_modules/ramda/src/partial.js","webpack:///./node_modules/ramda/src/startsWith.js","webpack:///./node_modules/ramda/src/descend.js","webpack:///./node_modules/ramda/src/construct.js","webpack:///./node_modules/ramda/src/internal/_isObject.js","webpack:///./node_modules/ramda/src/composeK.js","webpack:///./node_modules/ramda/src/useWith.js","webpack:///./node_modules/ramda/src/internal/_xfilter.js","webpack:///./node_modules/ramda/src/keys.js","webpack:///./node_modules/ramda/src/internal/_of.js","webpack:///./node_modules/ramda/src/reduced.js","webpack:///./node_modules/ramda/src/zipWith.js","webpack:///./node_modules/ramda/src/internal/_xtakeWhile.js","webpack:///./node_modules/ramda/src/project.js","webpack:///./node_modules/ramda/src/when.js","webpack:///./node_modules/ramda/src/invert.js","webpack:///./node_modules/ramda/src/bind.js","webpack:///./node_modules/ramda/src/takeLastWhile.js","webpack:///./node_modules/ramda/src/once.js","webpack:///./node_modules/ramda/src/internal/_xfind.js","webpack:///./node_modules/ramda/src/lensPath.js","webpack:///./node_modules/ramda/src/mergeDeepLeft.js","webpack:///./node_modules/ramda/src/applySpec.js","webpack:///./node_modules/ramda/src/internal/_dropLast.js","webpack:///./node_modules/ramda/src/internal/_dispatchable.js","webpack:///./node_modules/ramda/src/subtract.js","webpack:///./node_modules/ramda/src/internal/_Set.js","webpack:///./node_modules/ramda/src/internal/_isPlaceholder.js","webpack:///./node_modules/ramda/src/internal/_xfindLastIndex.js","webpack:///./node_modules/ramda/src/internal/_arity.js","webpack:///./node_modules/ramda/src/findLastIndex.js","webpack:///./node_modules/ramda/src/maxBy.js","webpack:///./node_modules/ramda/src/zipObj.js","webpack:///./node_modules/ramda/src/internal/_has.js","webpack:///./node_modules/ramda/src/dissocPath.js","webpack:///./node_modules/ramda/src/either.js","webpack:///./node_modules/ramda/src/dropRepeats.js","webpack:///./node_modules/ramda/src/apply.js","webpack:///./node_modules/ramda/src/intersectionWith.js","webpack:///./node_modules/ramda/src/pickBy.js","webpack:///./node_modules/ramda/src/eqProps.js","webpack:///./node_modules/ramda/src/keysIn.js","webpack:///./node_modules/ramda/src/internal/_toString.js","webpack:///./node_modules/ramda/src/pathOr.js","webpack:///./node_modules/ramda/src/internal/_xany.js","webpack:///./node_modules/ramda/src/assoc.js","webpack:///./node_modules/ramda/src/or.js","webpack:///./node_modules/ramda/src/memoizeWith.js","webpack:///./node_modules/ramda/src/trim.js","webpack:///./node_modules/ramda/src/groupWith.js","webpack:///./node_modules/ramda/src/gt.js","webpack:///./node_modules/ramda/src/countBy.js","webpack:///./node_modules/ramda/src/internal/_identity.js","webpack:///./node_modules/ramda/src/toLower.js","webpack:///./node_modules/ramda/src/chain.js","webpack:///./node_modules/ramda/src/internal/_curry3.js","webpack:///./node_modules/ramda/src/toUpper.js","webpack:///./node_modules/ramda/src/concat.js","webpack:///./node_modules/ramda/src/allPass.js","webpack:///./node_modules/ramda/src/map.js","webpack:///./node_modules/ramda/src/drop.js","webpack:///./node_modules/ramda/src/internal/_isString.js","webpack:///./node_modules/ramda/src/mergeDeepWithKey.js","webpack:///./node_modules/ramda/src/internal/_quote.js","webpack:///./node_modules/ramda/src/split.js","webpack:///./node_modules/ramda/src/toPairsIn.js","webpack:///./node_modules/ramda/src/lensIndex.js","webpack:///./node_modules/ramda/src/pathSatisfies.js","webpack:///./node_modules/ramda/src/fromPairs.js","webpack:///./node_modules/ramda/src/median.js","webpack:///./node_modules/ramda/src/propSatisfies.js","webpack:///./node_modules/ramda/src/takeWhile.js","webpack:///./node_modules/ramda/src/unnest.js","webpack:///./node_modules/ramda/src/pair.js","webpack:///./node_modules/ramda/src/internal/_xdropWhile.js","webpack:///./node_modules/ramda/src/sortWith.js","webpack:///./node_modules/ramda/src/partition.js","webpack:///./node_modules/ramda/src/isEmpty.js","webpack:///./node_modules/ramda/src/nAry.js","webpack:///./node_modules/ramda/src/inc.js","webpack:///./node_modules/ramda/src/symmetricDifference.js","webpack:///./node_modules/ramda/src/is.js","webpack:///./node_modules/ramda/src/internal/_xfindIndex.js","webpack:///./node_modules/ramda/src/insert.js","webpack:///./node_modules/ramda/src/add.js","webpack:///./node_modules/ramda/src/path.js","webpack:///./node_modules/ramda/src/internal/_flatCat.js","webpack:///./node_modules/ramda/src/internal/_xwrap.js","webpack:///./node_modules/ramda/src/objOf.js","webpack:///./node_modules/ramda/src/uniqWith.js","webpack:///./node_modules/ramda/src/lens.js","webpack:///./node_modules/ramda/src/zip.js","webpack:///./node_modules/ramda/src/internal/_containsWith.js","webpack:///./node_modules/ramda/src/clamp.js","webpack:///./node_modules/ramda/src/xprod.js","webpack:///./node_modules/ramda/src/union.js","webpack:///./node_modules/ramda/src/unary.js","webpack:///./node_modules/ramda/src/internal/_createPartialApplicator.js","webpack:///./node_modules/ramda/src/converge.js","webpack:///./node_modules/ramda/src/ifElse.js","webpack:///./node_modules/ramda/src/minBy.js","webpack:///./node_modules/ramda/src/type.js","webpack:///./node_modules/ramda/src/unionWith.js","webpack:///./node_modules/ramda/src/take.js","webpack:///./node_modules/ramda/src/over.js","webpack:///./node_modules/ramda/src/adjust.js","webpack:///./node_modules/ramda/src/findLast.js","webpack:///./node_modules/ramda/src/lt.js","webpack:///./node_modules/ramda/src/test.js","webpack:///./node_modules/ramda/src/nth.js","webpack:///./node_modules/ramda/src/reverse.js","webpack:///./node_modules/ramda/src/pipeP.js","webpack:///./node_modules/ramda/src/toString.js","webpack:///./node_modules/ramda/src/product.js","webpack:///./node_modules/ramda/src/any.js","webpack:///./node_modules/ramda/src/symmetricDifferenceWith.js","webpack:///./node_modules/ramda/src/into.js","webpack:///./node_modules/ramda/src/complement.js","webpack:///./node_modules/ramda/src/difference.js","webpack:///./node_modules/ramda/src/head.js","webpack:///./node_modules/ramda/src/reduce.js","webpack:///./node_modules/ramda/index.js","webpack:///./node_modules/ramda/src/dropRepeatsWith.js","webpack:///./node_modules/ramda/src/compose.js","webpack:///./node_modules/ramda/src/sequence.js","webpack:///./node_modules/ramda/src/aperture.js","webpack:///./node_modules/ramda/src/filter.js","webpack:///./node_modules/ramda/src/internal/_xtake.js","webpack:///./node_modules/ramda/src/identity.js","webpack:///./node_modules/ramda/src/cond.js","webpack:///./node_modules/ramda/src/dropLastWhile.js","webpack:///./node_modules/ramda/src/view.js","webpack:///./node_modules/ramda/src/splitEvery.js","webpack:///./node_modules/ramda/src/takeLast.js","webpack:///./node_modules/ramda/src/dropWhile.js","webpack:///./node_modules/ramda/src/internal/_map.js","webpack:///./node_modules/ramda/src/pick.js","webpack:///./node_modules/ramda/src/composeP.js","webpack:///./node_modules/ramda/src/dropLast.js","webpack:///./node_modules/ramda/src/splitWhen.js","webpack:///./node_modules/ramda/src/curry.js","webpack:///./node_modules/ramda/src/internal/_toISOString.js","webpack:///./node_modules/ramda/src/internal/_reduced.js","webpack:///./node_modules/ramda/src/mapAccum.js","webpack:///./node_modules/ramda/src/toPairs.js","webpack:///./node_modules/ramda/src/nthArg.js","webpack:///./node_modules/ramda/src/o.js","webpack:///./node_modules/ramda/src/partialRight.js","webpack:///./node_modules/ramda/src/internal/_curry2.js","webpack:///./node_modules/ramda/src/tryCatch.js","webpack:///./node_modules/ramda/src/append.js","webpack:///./node_modules/ramda/src/omit.js","webpack:///./node_modules/ramda/src/replace.js","webpack:///./node_modules/ramda/src/findIndex.js","webpack:///./node_modules/ramda/src/values.js","webpack:///./node_modules/ramda/src/internal/_xall.js","webpack:///./node_modules/ramda/src/update.js","webpack:///./node_modules/ramda/src/find.js","webpack:///./node_modules/ramda/src/innerJoin.js","webpack:///./node_modules/ramda/src/prop.js","webpack:///./node_modules/ramda/src/pluck.js","webpack:///./node_modules/ramda/src/curryN.js","webpack:///./node_modules/ramda/src/prepend.js","webpack:///./node_modules/ramda/src/internal/_assign.js","webpack:///./node_modules/ramda/src/internal/_stepCat.js","webpack:///./node_modules/ramda/src/empty.js","webpack:///./node_modules/ramda/src/where.js","webpack:///./node_modules/ramda/src/__.js","webpack:///./node_modules/ramda/src/slice.js","webpack:///./node_modules/ramda/src/indexOf.js","webpack:///./node_modules/ramda/src/internal/_filter.js","webpack:///./node_modules/ramda/src/whereEq.js","webpack:///./node_modules/ramda/src/assocPath.js","webpack:///./node_modules/ramda/src/internal/_curry1.js","webpack:///./node_modules/ramda/src/hasIn.js","webpack:///./node_modules/ramda/src/call.js","webpack:///./node_modules/ramda/src/flip.js","webpack:///./node_modules/ramda/src/internal/_isInteger.js","webpack:///./src/components/containers/DisplayBeers.vue?da79","webpack:///./node_modules/ramda/src/min.js","webpack:///./node_modules/ramda/src/internal/_makeFlat.js","webpack:///./node_modules/ramda/src/multiply.js","webpack:///./node_modules/ramda/src/max.js","webpack:///./node_modules/ramda/src/internal/_xaperture.js","webpack:///./node_modules/ramda/src/mergeWith.js","webpack:///./node_modules/ramda/src/anyPass.js","webpack:///./node_modules/ramda/src/intersperse.js","webpack:///./node_modules/ramda/src/join.js","webpack:///./node_modules/ramda/src/sortBy.js","webpack:///./src/components/views/Home.vue?7bc5","webpack:///./src/components/containers/DisplayBeers.vue","webpack:///./src/components/containers/LastBeers.vue?3df0","webpack:///./src/components/providers/CheckinsProvider.vue?7f09","webpack:///src/components/providers/CheckinsProvider.vue","webpack:///./src/components/providers/CheckinsProvider.vue?ebce","webpack:///./src/components/providers/CheckinsProvider.vue","webpack:///src/components/containers/DisplayBeers.vue","webpack:///./src/components/containers/DisplayBeers.vue?85be","webpack:///src/components/containers/LastBeers.vue","webpack:///./src/components/containers/LastBeers.vue?149c","webpack:///./src/components/containers/LastBeers.vue","webpack:///src/components/views/Home.vue","webpack:///./src/components/views/Home.vue?10ed","webpack:///./src/components/views/Home.vue","webpack:///./node_modules/ramda/src/mean.js","webpack:///./node_modules/core-js/modules/es6.number.max-safe-integer.js","webpack:///./node_modules/ramda/src/internal/_isArray.js","webpack:///./node_modules/ramda/src/set.js","webpack:///./node_modules/ramda/src/has.js","webpack:///./node_modules/ramda/src/endsWith.js","webpack:///./node_modules/ramda/src/times.js","webpack:///./node_modules/ramda/src/identical.js","webpack:///./node_modules/ramda/src/internal/_xdropLastWhile.js","webpack:///./node_modules/ramda/src/indexBy.js","webpack:///./node_modules/ramda/src/divide.js","webpack:///./node_modules/ramda/src/clone.js","webpack:///./node_modules/ramda/src/mapObjIndexed.js","webpack:///./node_modules/ramda/src/always.js","webpack:///./node_modules/ramda/src/repeat.js","webpack:///./node_modules/ramda/src/props.js","webpack:///./node_modules/ramda/src/dec.js","webpack:///./node_modules/ramda/src/propOr.js","webpack:///./node_modules/ramda/src/pathEq.js","webpack:///./node_modules/ramda/src/internal/_xchain.js","webpack:///./node_modules/ramda/src/unapply.js","webpack:///./node_modules/ramda/src/internal/_xdropRepeatsWith.js","webpack:///./node_modules/ramda/src/sort.js","webpack:///./node_modules/ramda/src/internal/_xfindLast.js","webpack:///./node_modules/ramda/src/transduce.js","webpack:///./node_modules/ramda/src/internal/_isArrayLike.js","webpack:///./node_modules/ramda/src/internal/_isArguments.js","webpack:///./node_modules/ramda/src/lift.js","webpack:///./src/components/containers/LastBeers.vue?7a33","webpack:///./node_modules/ramda/src/T.js","webpack:///./node_modules/ramda/src/length.js","webpack:///./node_modules/ramda/src/ap.js","webpack:///./node_modules/ramda/src/eqBy.js","webpack:///./node_modules/ramda/src/internal/_xdrop.js","webpack:///./node_modules/ramda/src/merge.js","webpack:///./node_modules/ramda/src/range.js","webpack:///./node_modules/ramda/src/init.js","webpack:///./node_modules/ramda/src/lte.js","webpack:///./node_modules/ramda/src/lastIndexOf.js","webpack:///./node_modules/ramda/src/of.js","webpack:///./node_modules/ramda/src/juxt.js","webpack:///./node_modules/ramda/src/without.js","webpack:///./node_modules/ramda/src/pickAll.js","webpack:///./node_modules/ramda/src/traverse.js","webpack:///./node_modules/ramda/src/remove.js","webpack:///./src/components/views/Home.vue?4ad1","webpack:///./node_modules/ramda/src/none.js","webpack:///./node_modules/ramda/src/internal/_xmap.js","webpack:///./src/components/providers/CheckinsProvider.vue?93f1","webpack:///./node_modules/ramda/src/ascend.js","webpack:///./node_modules/ramda/src/intersection.js","webpack:///./node_modules/ramda/src/liftN.js","webpack:///./node_modules/ramda/src/internal/_xdropLast.js","webpack:///./node_modules/ramda/src/insertAll.js","webpack:///./node_modules/ramda/src/memoize.js","webpack:///./node_modules/ramda/src/unless.js","webpack:///./node_modules/ramda/src/F.js","webpack:///./node_modules/ramda/src/valuesIn.js","webpack:///./node_modules/ramda/src/internal/_contains.js","webpack:///./node_modules/ramda/src/negate.js","webpack:///./node_modules/ramda/src/internal/_curryN.js","webpack:///./node_modules/ramda/src/internal/_xfBase.js","webpack:///./node_modules/ramda/src/contains.js","webpack:///./node_modules/ramda/src/tail.js","webpack:///./node_modules/ramda/src/and.js","webpack:///./node_modules/ramda/src/gte.js","webpack:///./node_modules/ramda/src/addIndex.js","webpack:///./node_modules/ramda/src/uniq.js","webpack:///./node_modules/ramda/src/invertObj.js","webpack:///./node_modules/ramda/src/internal/_complement.js","webpack:///./node_modules/ramda/src/unfold.js","webpack:///./node_modules/ramda/src/tap.js","webpack:///./node_modules/ramda/src/reduceRight.js","webpack:///./node_modules/ramda/src/sum.js","webpack:///./node_modules/ramda/src/constructN.js","webpack:///./node_modules/ramda/src/forEachObjIndexed.js","webpack:///./node_modules/ramda/src/pipeK.js","webpack:///./node_modules/ramda/src/internal/_reduce.js","webpack:///./node_modules/ramda/src/internal/_xreduceBy.js","webpack:///./node_modules/ramda/src/invoker.js","webpack:///./node_modules/ramda/src/modulo.js","webpack:///./node_modules/ramda/src/propEq.js","webpack:///./node_modules/ramda/src/propIs.js","webpack:///./node_modules/ramda/src/differenceWith.js","webpack:///./node_modules/ramda/src/not.js","webpack:///./node_modules/ramda/src/internal/_aperture.js","webpack:///./node_modules/ramda/src/splitAt.js","webpack:///./node_modules/ramda/src/mapAccumRight.js","webpack:///./node_modules/ramda/src/internal/_equals.js","webpack:///./node_modules/ramda/src/internal/_arrayFromIterator.js"],"names":["module","exports","x","Object","prototype","toString","call","_curry2","__webpack_require__","prop","obj","result","p","d","v","_checkForMethod","fn","list","len","length","idx","_curry3","_has","l","r","k","f","match","String","pred","init","val","_dispatchable","_xall","curryN","depth","endIdx","currentDepth","value","arguments","apply","this","Array","slice","_isArray","methodname","_curry1","outerlist","i","innerlist","j","push","set1","set2","len1","len2","equals","a","inf","item","indexOf","acc","_complement","filter","filterable","reduceBy","nAry","_arity","_pipe","reduce","tail","Error","_isFunction","and","lift","g","assoc","lens","pattern","RegExp","source","global","ignoreCase","multiline","sticky","unicode","_equals","b","_curryN","_reduce","_reduced","nth","mergeDeepWithKey","lObj","rObj","lVal","rVal","_xreduceBy","valueFn","valueAcc","keyFn","elt","key","_Set","appliedItem","set","add","ctx","then","_assign","concat","rx","str","evolve","transformations","object","transformation","type","_isInteger","m","NaN","@@transducer/value","@@transducer/reduced","target","TypeError","output","nextKey","_makeFlat","_cloneRegExp","_clone","refFrom","refTo","deep","copy","copiedValue","Date","valueOf","_concat","_createPartialApplicator","take","prefix","aa","bb","constructN","Fn","chain","compose","map","last","pop","transformers","args","_xfBase","XFilter","xf","input","_isArguments","hasEnumBug","propertyIsEnumerable","nonEnumerableProps","hasArgsEnumBug","contains","keys","nIdx","ks","checkArgsLength","rv","Math","min","XTakeWhile","_map","identity","pickAll","useWith","whenTrueFn","props","out","thisObj","called","XFind","found","assocPath","path","max","pluck","values","applySpec","spec","n","xs","_isTransformer","methodNames","transducer","Number","_contains","_nativeSet","Set","_items","hasOrAdd","shouldAdd","prevSize","newSize","Infinity","size","has","bIdx","XFindLastIndex","lastIdx","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","_xfindLastIndex","hasOwnProperty","dissoc","remove","update","dissocPath","head","or","_xdropRepeatsWith","dropRepeatsWith","_containsWith","uniqWith","list1","list2","lookupList","filteredList","results","test","obj1","obj2","_quote","_toISOString","reject","_toString","seen","recur","y","mapPairs","sort","join","isNaN","repr","defaultTo","XAny","any","mFn","cache","ws","zeroWidth","hasProtoTrim","trim","beginRx","endRx","replace","res","nextidx","elem","invoker","_xchain","monad","_isPlaceholder","f3","c","_b","_c","_a","_isString","preds","_xmap","functor","_xdrop","_isObject","mergeWithKey","s","escaped","pairs","propPath","mean","width","name","_xtakeWhile","_identity","fst","snd","XDropWhile","fns","juxt","empty","difference","Ctor","constructor","XFindIndex","splice","paths","_forceReduced","_isArrayLike","preservingReduced","@@transducer/init","@@transducer/result","@@transducer/step","ret","rxf","XWrap","getter","setter","toFunctorFn","focus","ilen","jlen","uniq","after","context","condition","onTrue","onFalse","undefined","_xtake","Identity","start","_idx","_list","_xfindLast","_isRegExp","offset","charAt","split","reverse","_pipeP","multiply","_xany","differenceWith","_stepCat","not","first","second","firstLen","F","T","__","addIndex","adjust","all","allPass","always","anyPass","ap","aperture","append","ascend","binary","bind","both","clamp","clone","comparator","complement","composeK","composeP","cond","construct","converge","countBy","curry","dec","descend","divide","drop","dropLast","dropLastWhile","dropRepeats","dropWhile","either","endsWith","eqBy","eqProps","find","findIndex","findLast","findLastIndex","flatten","flip","forEach","forEachObjIndexed","fromPairs","groupBy","groupWith","gt","gte","hasIn","identical","ifElse","inc","indexBy","innerJoin","insert","insertAll","intersection","intersectionWith","intersperse","into","invert","invertObj","is","isEmpty","isNil","keysIn","lastIndexOf","lensIndex","lensPath","lensProp","liftN","lt","lte","mapAccum","mapAccumRight","mapObjIndexed","mathMod","maxBy","median","memoize","memoizeWith","merge","mergeAll","mergeDeepLeft","mergeDeepRight","mergeDeepWith","mergeWith","minBy","modulo","negate","none","nthArg","o","objOf","of","omit","once","over","pair","partial","partialRight","partition","pathEq","pathOr","pathSatisfies","pick","pickBy","pipe","pipeK","pipeP","prepend","product","project","propEq","propIs","propOr","propSatisfies","range","reduceRight","reduceWhile","reduced","repeat","scan","sequence","sortBy","sortWith","splitAt","splitEvery","splitWhen","startsWith","subtract","sum","symmetricDifference","symmetricDifferenceWith","takeLast","takeLastWhile","takeWhile","tap","times","toLower","toPairs","toPairsIn","toUpper","transduce","transpose","traverse","tryCatch","unapply","unary","uncurryN","unfold","union","unionWith","uniqBy","unless","unnest","until","valuesIn","view","when","where","whereEq","without","xprod","zip","zipObj","zipWith","traversable","_aperture","_xaperture","_filter","_xfilter","XTake","arity","_dropLastWhile","_xdropLastWhile","Const","fantasy-land/map","_xdropWhile","names","_dropLast","_xdropLast","pad","toISOString","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","getUTCMilliseconds","toFixed","tuple","f2","tryer","catcher","e","el","regex","replacement","_xfindIndex","vals","XAll","_xfind","ys","_objectAssign","assign","_stepCatArray","_stepCatString","_stepCatObject","testObj","@@functional/placeholder","fromIndex","toIndex","_indexOf","nextObj","arr","f1","isInteger","_node_modules_mini_css_extract_plugin_dist_loader_js_node_modules_css_loader_index_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_lib_index_js_ref_6_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_DisplayBeers_vue_vue_type_style_index_0_lang_css__WEBPACK_IMPORTED_MODULE_0___default","recursive","flatt","XAperture","pos","full","store","getCopy","_","_l","_r","separator","DisplayBeers_render","DisplayBeers_staticRenderFns","Homevue_type_template_id_18d27954_scoped_true_render","_vm","_h","$createElement","_self","attrs","to","params","login","_v","staticRenderFns","LastBeersvue_type_template_id_614407ab_scoped_true_render","onlyBeers","limit","scopedSlots","_u","slotProps","beers","LastBeersvue_type_template_id_614407ab_scoped_true_staticRenderFns","CheckinsProvidervue_type_template_id_7bf3628e_render","_t","checkins","CheckinsProvidervue_type_template_id_7bf3628e_staticRenderFns","dropTail","ramda","CheckinsProvidervue_type_script_lang_js","data","apollo","query","queries","fetchPolicy","variables","error","err","console","log","subscribeToMore","document","updateQuery","_ref","_ref2","checkinAdded","subscriptionData","toConsumableArray","computed","required","default","MAX_SAFE_INTEGER","Boolean","providers_CheckinsProvidervue_type_script_lang_js","component","componentNormalizer","CheckinsProvider","DisplayBeersvue_type_script_lang_js","functional","render","h","beer","BeerItem","containers_DisplayBeersvue_type_script_lang_js","DisplayBeers_component","DisplayBeers","LastBeersvue_type_script_lang_js","components","containers_LastBeersvue_type_script_lang_js","LastBeers_component","LastBeers","Homevue_type_script_lang_js","views_Homevue_type_script_lang_js","Home_component","__webpack_exports__","$export","S","isArray","suffix","RangeError","XDropLastWhile","retained","retain","flush","ps","_path","_flatCat","XDropRepeatsWith","lastValue","seenFirstValue","sameAsLast","XFindLast","_xwrap","nodeType","_node_modules_mini_css_extract_plugin_dist_loader_js_node_modules_css_loader_index_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_lib_index_js_ref_6_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_LastBeers_vue_vue_type_style_index_0_id_614407ab_scoped_true_lang_css__WEBPACK_IMPORTED_MODULE_0___default","_isNumber","applyF","applyX","XDrop","from","_of","count","_node_modules_mini_css_extract_plugin_dist_loader_js_node_modules_css_loader_index_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_lib_index_js_ref_6_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_Home_vue_vue_type_style_index_0_id_18d27954_scoped_true_lang_css__WEBPACK_IMPORTED_MODULE_0___default","XMap","_node_modules_mini_css_extract_plugin_dist_loader_js_node_modules_css_loader_index_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_lib_index_js_ref_6_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_CheckinsProvider_vue_vue_type_style_index_0_lang_css__WEBPACK_IMPORTED_MODULE_0___default","lifted","XDropLast","elts","whenFalseFn","vs","received","combined","argsIdx","left","combinedIdx","origFn","seed","$0","$1","$2","$3","$4","$5","$6","$7","$8","$9","keyList","_arrayReduce","_iterableReduce","iter","step","next","done","_methodReduce","methodName","symIterator","Symbol","iterator","XReduceBy","inputs","method","index","array","_arrayFromIterator","_functionName","stackA","stackB","message","entries","keysA"],"mappings":"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","file":"js/4.42d275f2.js","sourcesContent":["module.exports = function _isFunction(x) {\n  return Object.prototype.toString.call(x) === '[object Function]';\n};\n","var _curry2 = require('./internal/_curry2');\n\n\n/**\n * Returns a new object that does not contain a `prop` property.\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category Object\n * @sig String -> {k: v} -> {k: v}\n * @param {String} prop The name of the property to dissociate\n * @param {Object} obj The object to clone\n * @return {Object} A new object equivalent to the original but without the specified property\n * @see R.assoc\n * @example\n *\n *      R.dissoc('b', {a: 1, b: 2, c: 3}); //=> {a: 1, c: 3}\n */\nmodule.exports = _curry2(function dissoc(prop, obj) {\n  var result = {};\n  for (var p in obj) {\n    result[p] = obj[p];\n  }\n  delete result[prop];\n  return result;\n});\n","var _curry2 = require('./internal/_curry2');\n\n\n/**\n * Returns the second argument if it is not `null`, `undefined` or `NaN`;\n * otherwise the first argument is returned.\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category Logic\n * @sig a -> b -> a | b\n * @param {a} default The default value.\n * @param {b} val `val` will be returned instead of `default` unless `val` is `null`, `undefined` or `NaN`.\n * @return {*} The second value if it is not `null`, `undefined` or `NaN`, otherwise the default value\n * @example\n *\n *      var defaultTo42 = R.defaultTo(42);\n *\n *      defaultTo42(null);  //=> 42\n *      defaultTo42(undefined);  //=> 42\n *      defaultTo42('Ramda');  //=> 'Ramda'\n *      // parseInt('string') results in NaN\n *      defaultTo42(parseInt('string')); //=> 42\n */\nmodule.exports = _curry2(function defaultTo(d, v) {\n  return v == null || v !== v ? d : v;\n});\n","var _checkForMethod = require('./internal/_checkForMethod');\nvar _curry2 = require('./internal/_curry2');\n\n\n/**\n * Iterate over an input `list`, calling a provided function `fn` for each\n * element in the list.\n *\n * `fn` receives one argument: *(value)*.\n *\n * Note: `R.forEach` does not skip deleted or unassigned indices (sparse\n * arrays), unlike the native `Array.prototype.forEach` method. For more\n * details on this behavior, see:\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach#Description\n *\n * Also note that, unlike `Array.prototype.forEach`, Ramda's `forEach` returns\n * the original array. In some libraries this function is named `each`.\n *\n * Dispatches to the `forEach` method of the second argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.1.1\n * @category List\n * @sig (a -> *) -> [a] -> [a]\n * @param {Function} fn The function to invoke. Receives one argument, `value`.\n * @param {Array} list The list to iterate over.\n * @return {Array} The original list.\n * @see R.addIndex\n * @example\n *\n *      var printXPlusFive = x => console.log(x + 5);\n *      R.forEach(printXPlusFive, [1, 2, 3]); //=> [1, 2, 3]\n *      // logs 6\n *      // logs 7\n *      // logs 8\n * @symb R.forEach(f, [a, b, c]) = [a, b, c]\n */\nmodule.exports = _curry2(_checkForMethod('forEach', function forEach(fn, list) {\n  var len = list.length;\n  var idx = 0;\n  while (idx < len) {\n    fn(list[idx]);\n    idx += 1;\n  }\n  return list;\n}));\n","var _curry3 = require('./internal/_curry3');\nvar _has = require('./internal/_has');\n\n\n/**\n * Creates a new object with the own properties of the two provided objects. If\n * a key exists in both objects, the provided function is applied to the key\n * and the values associated with the key in each object, with the result being\n * used as the value associated with the key in the returned object.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category Object\n * @sig (String -> a -> a -> a) -> {a} -> {a} -> {a}\n * @param {Function} fn\n * @param {Object} l\n * @param {Object} r\n * @return {Object}\n * @see R.mergeDeepWithKey, R.merge, R.mergeWith\n * @example\n *\n *      let concatValues = (k, l, r) => k == 'values' ? R.concat(l, r) : r\n *      R.mergeWithKey(concatValues,\n *                     { a: true, thing: 'foo', values: [10, 20] },\n *                     { b: true, thing: 'bar', values: [15, 35] });\n *      //=> { a: true, b: true, thing: 'bar', values: [10, 20, 15, 35] }\n * @symb R.mergeWithKey(f, { x: 1, y: 2 }, { y: 5, z: 3 }) = { x: 1, y: f('y', 2, 5), z: 3 }\n */\nmodule.exports = _curry3(function mergeWithKey(fn, l, r) {\n  var result = {};\n  var k;\n\n  for (k in l) {\n    if (_has(k, l)) {\n      result[k] = _has(k, r) ? fn(k, l[k], r[k]) : l[k];\n    }\n  }\n\n  for (k in r) {\n    if (_has(k, r) && !(_has(k, result))) {\n      result[k] = r[k];\n    }\n  }\n\n  return result;\n});\n","module.exports = function _functionName(f) {\n  // String(x => x) evaluates to \"x => x\", so the pattern may not match.\n  var match = String(f).match(/^function (\\w*)/);\n  return match == null ? '' : match[1];\n};\n","var _curry3 = require('./internal/_curry3');\n\n\n/**\n * Takes a predicate, a transformation function, and an initial value,\n * and returns a value of the same type as the initial value.\n * It does so by applying the transformation until the predicate is satisfied,\n * at which point it returns the satisfactory value.\n *\n * @func\n * @memberOf R\n * @since v0.20.0\n * @category Logic\n * @sig (a -> Boolean) -> (a -> a) -> a -> a\n * @param {Function} pred A predicate function\n * @param {Function} fn The iterator function\n * @param {*} init Initial value\n * @return {*} Final value that satisfies predicate\n * @example\n *\n *      R.until(R.gt(R.__, 100), R.multiply(2))(1) // => 128\n */\nmodule.exports = _curry3(function until(pred, fn, init) {\n  var val = init;\n  while (!pred(val)) {\n    val = fn(val);\n  }\n  return val;\n});\n","var _curry2 = require('./internal/_curry2');\nvar _dispatchable = require('./internal/_dispatchable');\nvar _xall = require('./internal/_xall');\n\n\n/**\n * Returns `true` if all elements of the list match the predicate, `false` if\n * there are any that don't.\n *\n * Dispatches to the `all` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig (a -> Boolean) -> [a] -> Boolean\n * @param {Function} fn The predicate function.\n * @param {Array} list The array to consider.\n * @return {Boolean} `true` if the predicate is satisfied by every element, `false`\n *         otherwise.\n * @see R.any, R.none, R.transduce\n * @example\n *\n *      var equals3 = R.equals(3);\n *      R.all(equals3)([3, 3, 3, 3]); //=> true\n *      R.all(equals3)([3, 3, 1, 3]); //=> false\n */\nmodule.exports = _curry2(_dispatchable(['all'], _xall, function all(fn, list) {\n  var idx = 0;\n  while (idx < list.length) {\n    if (!fn(list[idx])) {\n      return false;\n    }\n    idx += 1;\n  }\n  return true;\n}));\n","var _curry2 = require('./internal/_curry2');\nvar curryN = require('./curryN');\n\n\n/**\n * Returns a function of arity `n` from a (manually) curried function.\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category Function\n * @sig Number -> (a -> b) -> (a -> c)\n * @param {Number} length The arity for the returned function.\n * @param {Function} fn The function to uncurry.\n * @return {Function} A new function.\n * @see R.curry\n * @example\n *\n *      var addFour = a => b => c => d => a + b + c + d;\n *\n *      var uncurriedAddFour = R.uncurryN(4, addFour);\n *      uncurriedAddFour(1, 2, 3, 4); //=> 10\n */\nmodule.exports = _curry2(function uncurryN(depth, fn) {\n  return curryN(depth, function() {\n    var currentDepth = 1;\n    var value = fn;\n    var idx = 0;\n    var endIdx;\n    while (currentDepth <= depth && typeof value === 'function') {\n      endIdx = currentDepth === depth ? arguments.length : idx + value.length;\n      value = value.apply(this, Array.prototype.slice.call(arguments, idx, endIdx));\n      currentDepth += 1;\n      idx = endIdx;\n    }\n    return value;\n  });\n});\n","var _isArray = require('./_isArray');\n\n\n/**\n * This checks whether a function has a [methodname] function. If it isn't an\n * array it will execute that function otherwise it will default to the ramda\n * implementation.\n *\n * @private\n * @param {Function} fn ramda implemtation\n * @param {String} methodname property to check for a custom implementation\n * @return {Object} Whatever the return value of the method is.\n */\nmodule.exports = function _checkForMethod(methodname, fn) {\n  return function() {\n    var length = arguments.length;\n    if (length === 0) {\n      return fn();\n    }\n    var obj = arguments[length - 1];\n    return (_isArray(obj) || typeof obj[methodname] !== 'function') ?\n      fn.apply(this, arguments) :\n      obj[methodname].apply(obj, Array.prototype.slice.call(arguments, 0, length - 1));\n  };\n};\n","module.exports = function _isTransformer(obj) {\n  return typeof obj['@@transducer/step'] === 'function';\n};\n","var _curry1 = require('./internal/_curry1');\n\n\n/**\n * Transposes the rows and columns of a 2D list.\n * When passed a list of `n` lists of length `x`,\n * returns a list of `x` lists of length `n`.\n *\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category List\n * @sig [[a]] -> [[a]]\n * @param {Array} list A 2D list\n * @return {Array} A 2D list\n * @example\n *\n *      R.transpose([[1, 'a'], [2, 'b'], [3, 'c']]) //=> [[1, 2, 3], ['a', 'b', 'c']]\n *      R.transpose([[1, 2, 3], ['a', 'b', 'c']]) //=> [[1, 'a'], [2, 'b'], [3, 'c']]\n *\n *      // If some of the rows are shorter than the following rows, their elements are skipped:\n *      R.transpose([[10, 11], [20], [], [30, 31, 32]]) //=> [[10, 20, 30], [11, 31], [32]]\n * @symb R.transpose([[a], [b], [c]]) = [a, b, c]\n * @symb R.transpose([[a, b], [c, d]]) = [[a, c], [b, d]]\n * @symb R.transpose([[a, b], [c]]) = [[a, c], [b]]\n */\nmodule.exports = _curry1(function transpose(outerlist) {\n  var i = 0;\n  var result = [];\n  while (i < outerlist.length) {\n    var innerlist = outerlist[i];\n    var j = 0;\n    while (j < innerlist.length) {\n      if (typeof result[j] === 'undefined') {\n        result[j] = [];\n      }\n      result[j].push(innerlist[j]);\n      j += 1;\n    }\n    i += 1;\n  }\n  return result;\n});\n","module.exports = function _isRegExp(x) {\n  return Object.prototype.toString.call(x) === '[object RegExp]';\n};\n","/**\n * Private `concat` function to merge two array-like objects.\n *\n * @private\n * @param {Array|Arguments} [set1=[]] An array-like object.\n * @param {Array|Arguments} [set2=[]] An array-like object.\n * @return {Array} A new, merged array.\n * @example\n *\n *      _concat([4, 5, 6], [1, 2, 3]); //=> [4, 5, 6, 1, 2, 3]\n */\nmodule.exports = function _concat(set1, set2) {\n  set1 = set1 || [];\n  set2 = set2 || [];\n  var idx;\n  var len1 = set1.length;\n  var len2 = set2.length;\n  var result = [];\n\n  idx = 0;\n  while (idx < len1) {\n    result[result.length] = set1[idx];\n    idx += 1;\n  }\n  idx = 0;\n  while (idx < len2) {\n    result[result.length] = set2[idx];\n    idx += 1;\n  }\n  return result;\n};\n","var equals = require('../equals');\n\n\nmodule.exports = function _indexOf(list, a, idx) {\n  var inf, item;\n  // Array.prototype.indexOf doesn't exist below IE9\n  if (typeof list.indexOf === 'function') {\n    switch (typeof a) {\n      case 'number':\n        if (a === 0) {\n          // manually crawl the list to distinguish between +0 and -0\n          inf = 1 / a;\n          while (idx < list.length) {\n            item = list[idx];\n            if (item === 0 && 1 / item === inf) {\n              return idx;\n            }\n            idx += 1;\n          }\n          return -1;\n        } else if (a !== a) {\n          // NaN\n          while (idx < list.length) {\n            item = list[idx];\n            if (typeof item === 'number' && item !== item) {\n              return idx;\n            }\n            idx += 1;\n          }\n          return -1;\n        }\n        // non-zero numbers can utilise Set\n        return list.indexOf(a, idx);\n\n      // all these types can utilise Set\n      case 'string':\n      case 'boolean':\n      case 'function':\n      case 'undefined':\n        return list.indexOf(a, idx);\n\n      case 'object':\n        if (a === null) {\n          // null can utilise Set\n          return list.indexOf(a, idx);\n        }\n    }\n  }\n  // anything else not covered above, defer to R.equals\n  while (idx < list.length) {\n    if (equals(list[idx], a)) {\n      return idx;\n    }\n    idx += 1;\n  }\n  return -1;\n};\n","var _curry3 = require('./internal/_curry3');\n\n\n/**\n * Scan is similar to [`reduce`](#reduce), but returns a list of successively\n * reduced values from the left\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category List\n * @sig (a,b -> a) -> a -> [b] -> [a]\n * @param {Function} fn The iterator function. Receives two values, the accumulator and the\n *        current element from the array\n * @param {*} acc The accumulator value.\n * @param {Array} list The list to iterate over.\n * @return {Array} A list of all intermediately reduced values.\n * @see R.reduce\n * @example\n *\n *      var numbers = [1, 2, 3, 4];\n *      var factorials = R.scan(R.multiply, 1, numbers); //=> [1, 1, 2, 6, 24]\n * @symb R.scan(f, a, [b, c]) = [a, f(a, b), f(f(a, b), c)]\n */\nmodule.exports = _curry3(function scan(fn, acc, list) {\n  var idx = 0;\n  var len = list.length;\n  var result = [acc];\n  while (idx < len) {\n    acc = fn(acc, list[idx]);\n    result[idx + 1] = acc;\n    idx += 1;\n  }\n  return result;\n});\n","var _complement = require('./internal/_complement');\nvar _curry2 = require('./internal/_curry2');\nvar filter = require('./filter');\n\n\n/**\n * The complement of [`filter`](#filter).\n *\n * Acts as a transducer if a transformer is given in list position. Filterable\n * objects include plain objects or any object that has a filter method such\n * as `Array`.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Filterable f => (a -> Boolean) -> f a -> f a\n * @param {Function} pred\n * @param {Array} filterable\n * @return {Array}\n * @see R.filter, R.transduce, R.addIndex\n * @example\n *\n *      var isOdd = (n) => n % 2 === 1;\n *\n *      R.reject(isOdd, [1, 2, 3, 4]); //=> [2, 4]\n *\n *      R.reject(isOdd, {a: 1, b: 2, c: 3, d: 4}); //=> {b: 2, d: 4}\n */\nmodule.exports = _curry2(function reject(pred, filterable) {\n  return filter(_complement(pred), filterable);\n});\n","var _checkForMethod = require('./internal/_checkForMethod');\nvar _curry2 = require('./internal/_curry2');\nvar reduceBy = require('./reduceBy');\n\n/**\n * Splits a list into sub-lists stored in an object, based on the result of\n * calling a String-returning function on each element, and grouping the\n * results according to values returned.\n *\n * Dispatches to the `groupBy` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig (a -> String) -> [a] -> {String: [a]}\n * @param {Function} fn Function :: a -> String\n * @param {Array} list The array to group\n * @return {Object} An object with the output of `fn` for keys, mapped to arrays of elements\n *         that produced that key when passed to `fn`.\n * @see R.transduce\n * @example\n *\n *      var byGrade = R.groupBy(function(student) {\n *        var score = student.score;\n *        return score < 65 ? 'F' :\n *               score < 70 ? 'D' :\n *               score < 80 ? 'C' :\n *               score < 90 ? 'B' : 'A';\n *      });\n *      var students = [{name: 'Abby', score: 84},\n *                      {name: 'Eddy', score: 58},\n *                      // ...\n *                      {name: 'Jack', score: 69}];\n *      byGrade(students);\n *      // {\n *      //   'A': [{name: 'Dianne', score: 99}],\n *      //   'B': [{name: 'Abby', score: 84}]\n *      //   // ...,\n *      //   'F': [{name: 'Eddy', score: 58}]\n *      // }\n */\nmodule.exports = _curry2(_checkForMethod('groupBy', reduceBy(function(acc, item) {\n  if (acc == null) {\n    acc = [];\n  }\n  acc.push(item);\n  return acc;\n}, null)));\n","var _curry1 = require('./internal/_curry1');\nvar nAry = require('./nAry');\n\n\n/**\n * Wraps a function of any arity (including nullary) in a function that accepts\n * exactly 2 parameters. Any extraneous parameters will not be passed to the\n * supplied function.\n *\n * @func\n * @memberOf R\n * @since v0.2.0\n * @category Function\n * @sig (* -> c) -> (a, b -> c)\n * @param {Function} fn The function to wrap.\n * @return {Function} A new function wrapping `fn`. The new function is guaranteed to be of\n *         arity 2.\n * @see R.nAry, R.unary\n * @example\n *\n *      var takesThreeArgs = function(a, b, c) {\n *        return [a, b, c];\n *      };\n *      takesThreeArgs.length; //=> 3\n *      takesThreeArgs(1, 2, 3); //=> [1, 2, 3]\n *\n *      var takesTwoArgs = R.binary(takesThreeArgs);\n *      takesTwoArgs.length; //=> 2\n *      // Only 2 arguments are passed to the wrapped function\n *      takesTwoArgs(1, 2, 3); //=> [1, 2, undefined]\n * @symb R.binary(f)(a, b, c) = f(a, b)\n */\nmodule.exports = _curry1(function binary(fn) {\n  return nAry(2, fn);\n});\n","var _arity = require('./internal/_arity');\nvar _pipe = require('./internal/_pipe');\nvar reduce = require('./reduce');\nvar tail = require('./tail');\n\n\n/**\n * Performs left-to-right function composition. The leftmost function may have\n * any arity; the remaining functions must be unary.\n *\n * In some libraries this function is named `sequence`.\n *\n * **Note:** The result of pipe is not automatically curried.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig (((a, b, ..., n) -> o), (o -> p), ..., (x -> y), (y -> z)) -> ((a, b, ..., n) -> z)\n * @param {...Function} functions\n * @return {Function}\n * @see R.compose\n * @example\n *\n *      var f = R.pipe(Math.pow, R.negate, R.inc);\n *\n *      f(3, 4); // -(3^4) + 1\n * @symb R.pipe(f, g, h)(a, b) = h(g(f(a, b)))\n */\nmodule.exports = function pipe() {\n  if (arguments.length === 0) {\n    throw new Error('pipe requires at least one argument');\n  }\n  return _arity(arguments[0].length,\n                reduce(_pipe, arguments[0], tail(arguments)));\n};\n","var _curry2 = require('./internal/_curry2');\nvar _isFunction = require('./internal/_isFunction');\nvar and = require('./and');\nvar lift = require('./lift');\n\n\n/**\n * A function which calls the two provided functions and returns the `&&`\n * of the results.\n * It returns the result of the first function if it is false-y and the result\n * of the second function otherwise. Note that this is short-circuited,\n * meaning that the second function will not be invoked if the first returns a\n * false-y value.\n *\n * In addition to functions, `R.both` also accepts any fantasy-land compatible\n * applicative functor.\n *\n * @func\n * @memberOf R\n * @since v0.12.0\n * @category Logic\n * @sig (*... -> Boolean) -> (*... -> Boolean) -> (*... -> Boolean)\n * @param {Function} f A predicate\n * @param {Function} g Another predicate\n * @return {Function} a function that applies its arguments to `f` and `g` and `&&`s their outputs together.\n * @see R.and\n * @example\n *\n *      var gt10 = R.gt(R.__, 10)\n *      var lt20 = R.lt(R.__, 20)\n *      var f = R.both(gt10, lt20);\n *      f(15); //=> true\n *      f(30); //=> false\n */\nmodule.exports = _curry2(function both(f, g) {\n  return _isFunction(f) ?\n    function _both() {\n      return f.apply(this, arguments) && g.apply(this, arguments);\n    } :\n    lift(and)(f, g);\n});\n","var _curry1 = require('./internal/_curry1');\nvar assoc = require('./assoc');\nvar lens = require('./lens');\nvar prop = require('./prop');\n\n\n/**\n * Returns a lens whose focus is the specified property.\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category Object\n * @typedefn Lens s a = Functor f => (a -> f a) -> s -> f s\n * @sig String -> Lens s a\n * @param {String} k\n * @return {Lens}\n * @see R.view, R.set, R.over\n * @example\n *\n *      var xLens = R.lensProp('x');\n *\n *      R.view(xLens, {x: 1, y: 2});            //=> 1\n *      R.set(xLens, 4, {x: 1, y: 2});          //=> {x: 4, y: 2}\n *      R.over(xLens, R.negate, {x: 1, y: 2});  //=> {x: -1, y: 2}\n */\nmodule.exports = _curry1(function lensProp(k) {\n  return lens(prop(k), assoc(k));\n});\n","module.exports = function _cloneRegExp(pattern) {\n  return new RegExp(pattern.source, (pattern.global     ? 'g' : '') +\n                                    (pattern.ignoreCase ? 'i' : '') +\n                                    (pattern.multiline  ? 'm' : '') +\n                                    (pattern.sticky     ? 'y' : '') +\n                                    (pattern.unicode    ? 'u' : ''));\n};\n","var _curry2 = require('./internal/_curry2');\nvar _equals = require('./internal/_equals');\n\n\n/**\n * Returns `true` if its arguments are equivalent, `false` otherwise. Handles\n * cyclical data structures.\n *\n * Dispatches symmetrically to the `equals` methods of both arguments, if\n * present.\n *\n * @func\n * @memberOf R\n * @since v0.15.0\n * @category Relation\n * @sig a -> b -> Boolean\n * @param {*} a\n * @param {*} b\n * @return {Boolean}\n * @example\n *\n *      R.equals(1, 1); //=> true\n *      R.equals(1, '1'); //=> false\n *      R.equals([1, 2, 3], [1, 2, 3]); //=> true\n *\n *      var a = {}; a.v = a;\n *      var b = {}; b.v = b;\n *      R.equals(a, b); //=> true\n */\nmodule.exports = _curry2(function equals(a, b) {\n  return _equals(a, b, [], []);\n});\n","var _curryN = require('./internal/_curryN');\nvar _reduce = require('./internal/_reduce');\nvar _reduced = require('./internal/_reduced');\n\n\n/**\n * Like [`reduce`](#reduce), `reduceWhile` returns a single item by iterating\n * through the list, successively calling the iterator function. `reduceWhile`\n * also takes a predicate that is evaluated before each step. If the predicate\n * returns `false`, it \"short-circuits\" the iteration and returns the current\n * value of the accumulator.\n *\n * @func\n * @memberOf R\n * @since v0.22.0\n * @category List\n * @sig ((a, b) -> Boolean) -> ((a, b) -> a) -> a -> [b] -> a\n * @param {Function} pred The predicate. It is passed the accumulator and the\n *        current element.\n * @param {Function} fn The iterator function. Receives two values, the\n *        accumulator and the current element.\n * @param {*} a The accumulator value.\n * @param {Array} list The list to iterate over.\n * @return {*} The final, accumulated value.\n * @see R.reduce, R.reduced\n * @example\n *\n *      var isOdd = (acc, x) => x % 2 === 1;\n *      var xs = [1, 3, 5, 60, 777, 800];\n *      R.reduceWhile(isOdd, R.add, 0, xs); //=> 9\n *\n *      var ys = [2, 4, 6]\n *      R.reduceWhile(isOdd, R.add, 111, ys); //=> 111\n */\nmodule.exports = _curryN(4, [], function _reduceWhile(pred, fn, a, list) {\n  return _reduce(function(acc, x) {\n    return pred(acc, x) ? fn(acc, x) : _reduced(acc);\n  }, a, list);\n});\n","var nth = require('./nth');\n\n\n/**\n * Returns the last element of the given list or string.\n *\n * @func\n * @memberOf R\n * @since v0.1.4\n * @category List\n * @sig [a] -> a | Undefined\n * @sig String -> String\n * @param {*} list\n * @return {*}\n * @see R.init, R.head, R.tail\n * @example\n *\n *      R.last(['fi', 'fo', 'fum']); //=> 'fum'\n *      R.last([]); //=> undefined\n *\n *      R.last('abc'); //=> 'c'\n *      R.last(''); //=> ''\n */\nmodule.exports = nth(-1);\n","var _curry3 = require('./internal/_curry3');\nvar mergeDeepWithKey = require('./mergeDeepWithKey');\n\n\n/**\n * Creates a new object with the own properties of the two provided objects.\n * If a key exists in both objects:\n * - and both associated values are also objects then the values will be\n *   recursively merged.\n * - otherwise the provided function is applied to associated values using the\n *   resulting value as the new value associated with the key.\n * If a key only exists in one object, the value will be associated with the key\n * of the resulting object.\n *\n * @func\n * @memberOf R\n * @since v0.24.0\n * @category Object\n * @sig (a -> a -> a) -> {a} -> {a} -> {a}\n * @param {Function} fn\n * @param {Object} lObj\n * @param {Object} rObj\n * @return {Object}\n * @see R.mergeWith, R.mergeDeep, R.mergeDeepWithKey\n * @example\n *\n *      R.mergeDeepWith(R.concat,\n *                      { a: true, c: { values: [10, 20] }},\n *                      { b: true, c: { values: [15, 35] }});\n *      //=> { a: true, b: true, c: { values: [10, 20, 15, 35] }}\n */\nmodule.exports = _curry3(function mergeDeepWith(fn, lObj, rObj) {\n  return mergeDeepWithKey(function(k, lVal, rVal) {\n    return fn(lVal, rVal);\n  }, lObj, rObj);\n});\n","var _curry2 = require('./internal/_curry2');\nvar mergeDeepWithKey = require('./mergeDeepWithKey');\n\n\n/**\n * Creates a new object with the own properties of the first object merged with\n * the own properties of the second object. If a key exists in both objects:\n * - and both values are objects, the two values will be recursively merged\n * - otherwise the value from the second object will be used.\n *\n * @func\n * @memberOf R\n * @since v0.24.0\n * @category Object\n * @sig {a} -> {a} -> {a}\n * @param {Object} lObj\n * @param {Object} rObj\n * @return {Object}\n * @see R.merge, R.mergeDeepLeft, R.mergeDeepWith, R.mergeDeepWithKey\n * @example\n *\n *      R.mergeDeepRight({ name: 'fred', age: 10, contact: { email: 'moo@example.com' }},\n *                       { age: 40, contact: { email: 'baa@example.com' }});\n *      //=> { name: 'fred', age: 40, contact: { email: 'baa@example.com' }}\n */\nmodule.exports = _curry2(function mergeDeepRight(lObj, rObj) {\n  return mergeDeepWithKey(function(k, lVal, rVal) {\n    return rVal;\n  }, lObj, rObj);\n});\n","var _curry1 = require('./internal/_curry1');\n\n\n/**\n * Makes a comparator function out of a function that reports whether the first\n * element is less than the second.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig (a, b -> Boolean) -> (a, b -> Number)\n * @param {Function} pred A predicate function of arity two which will return `true` if the first argument\n * is less than the second, `false` otherwise\n * @return {Function} A Function :: a -> b -> Int that returns `-1` if a < b, `1` if b < a, otherwise `0`\n * @example\n *\n *      var byAge = R.comparator((a, b) => a.age < b.age);\n *      var people = [\n *        // ...\n *      ];\n *      var peopleByIncreasingAge = R.sort(byAge, people);\n */\nmodule.exports = _curry1(function comparator(pred) {\n  return function(a, b) {\n    return pred(a, b) ? -1 : pred(b, a) ? 1 : 0;\n  };\n});\n","var _curryN = require('./internal/_curryN');\nvar _dispatchable = require('./internal/_dispatchable');\nvar _has = require('./internal/_has');\nvar _reduce = require('./internal/_reduce');\nvar _xreduceBy = require('./internal/_xreduceBy');\n\n\n/**\n * Groups the elements of the list according to the result of calling\n * the String-returning function `keyFn` on each element and reduces the elements\n * of each group to a single value via the reducer function `valueFn`.\n *\n * This function is basically a more general [`groupBy`](#groupBy) function.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.20.0\n * @category List\n * @sig ((a, b) -> a) -> a -> (b -> String) -> [b] -> {String: a}\n * @param {Function} valueFn The function that reduces the elements of each group to a single\n *        value. Receives two values, accumulator for a particular group and the current element.\n * @param {*} acc The (initial) accumulator value for each group.\n * @param {Function} keyFn The function that maps the list's element into a key.\n * @param {Array} list The array to group.\n * @return {Object} An object with the output of `keyFn` for keys, mapped to the output of\n *         `valueFn` for elements which produced that key when passed to `keyFn`.\n * @see R.groupBy, R.reduce\n * @example\n *\n *      var reduceToNamesBy = R.reduceBy((acc, student) => acc.concat(student.name), []);\n *      var namesByGrade = reduceToNamesBy(function(student) {\n *        var score = student.score;\n *        return score < 65 ? 'F' :\n *               score < 70 ? 'D' :\n *               score < 80 ? 'C' :\n *               score < 90 ? 'B' : 'A';\n *      });\n *      var students = [{name: 'Lucy', score: 92},\n *                      {name: 'Drew', score: 85},\n *                      // ...\n *                      {name: 'Bart', score: 62}];\n *      namesByGrade(students);\n *      // {\n *      //   'A': ['Lucy'],\n *      //   'B': ['Drew']\n *      //   // ...,\n *      //   'F': ['Bart']\n *      // }\n */\nmodule.exports = _curryN(4, [], _dispatchable([], _xreduceBy,\n  function reduceBy(valueFn, valueAcc, keyFn, list) {\n    return _reduce(function(acc, elt) {\n      var key = keyFn(elt);\n      acc[key] = valueFn(_has(key, acc) ? acc[key] : valueAcc, elt);\n      return acc;\n    }, {}, list);\n  }));\n","var _Set = require('./internal/_Set');\nvar _curry2 = require('./internal/_curry2');\n\n\n/**\n * Returns a new list containing only one copy of each element in the original\n * list, based upon the value returned by applying the supplied function to\n * each list element. Prefers the first item if the supplied function produces\n * the same value on two items. [`R.equals`](#equals) is used for comparison.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category List\n * @sig (a -> b) -> [a] -> [a]\n * @param {Function} fn A function used to produce a value to use during comparisons.\n * @param {Array} list The array to consider.\n * @return {Array} The list of unique items.\n * @example\n *\n *      R.uniqBy(Math.abs, [-1, -5, 2, 10, 1, 2]); //=> [-1, -5, 2, 10]\n */\nmodule.exports = _curry2(function uniqBy(fn, list) {\n  var set = new _Set();\n  var result = [];\n  var idx = 0;\n  var appliedItem, item;\n\n  while (idx < list.length) {\n    item = list[idx];\n    appliedItem = fn(item);\n    if (set.add(appliedItem)) {\n      result.push(item);\n    }\n    idx += 1;\n  }\n  return result;\n});\n","module.exports = function dropLastWhile(pred, list) {\n  var idx = list.length - 1;\n  while (idx >= 0 && pred(list[idx])) {\n    idx -= 1;\n  }\n  return Array.prototype.slice.call(list, 0, idx + 1);\n};\n","module.exports = function _pipeP(f, g) {\n  return function() {\n    var ctx = this;\n    return f.apply(ctx, arguments).then(function(x) {\n      return g.call(ctx, x);\n    });\n  };\n};\n","var _assign = require('./internal/_assign');\nvar _curry1 = require('./internal/_curry1');\n\n\n/**\n * Merges a list of objects together into one object.\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category List\n * @sig [{k: v}] -> {k: v}\n * @param {Array} list An array of objects\n * @return {Object} A merged object.\n * @see R.reduce\n * @example\n *\n *      R.mergeAll([{foo:1},{bar:2},{baz:3}]); //=> {foo:1,bar:2,baz:3}\n *      R.mergeAll([{foo:1},{foo:2},{bar:2}]); //=> {foo:2,bar:2}\n * @symb R.mergeAll([{ x: 1 }, { y: 2 }, { z: 3 }]) = { x: 1, y: 2, z: 3 }\n */\nmodule.exports = _curry1(function mergeAll(list) {\n  return _assign.apply(null, [{}].concat(list));\n});\n","var _curry2 = require('./internal/_curry2');\n\n\n/**\n * Tests a regular expression against a String. Note that this function will\n * return an empty array when there are no matches. This differs from\n * [`String.prototype.match`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/match)\n * which returns `null` when there are no matches.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category String\n * @sig RegExp -> String -> [String | Undefined]\n * @param {RegExp} rx A regular expression.\n * @param {String} str The string to match against\n * @return {Array} The list of matches or empty array.\n * @see R.test\n * @example\n *\n *      R.match(/([a-z]a)/g, 'bananas'); //=> ['ba', 'na', 'na']\n *      R.match(/a/, 'b'); //=> []\n *      R.match(/a/, null); //=> TypeError: null does not have a method named \"match\"\n */\nmodule.exports = _curry2(function match(rx, str) {\n  return str.match(rx) || [];\n});\n","var _curry1 = require('./internal/_curry1');\n\n\n/**\n * Checks if the input value is `null` or `undefined`.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Type\n * @sig * -> Boolean\n * @param {*} x The value to test.\n * @return {Boolean} `true` if `x` is `undefined` or `null`, otherwise `false`.\n * @example\n *\n *      R.isNil(null); //=> true\n *      R.isNil(undefined); //=> true\n *      R.isNil(0); //=> false\n *      R.isNil([]); //=> false\n */\nmodule.exports = _curry1(function isNil(x) { return x == null; });\n","var _curry2 = require('./internal/_curry2');\n\n\n/**\n * Creates a new object by recursively evolving a shallow copy of `object`,\n * according to the `transformation` functions. All non-primitive properties\n * are copied by reference.\n *\n * A `transformation` function will not be invoked if its corresponding key\n * does not exist in the evolved object.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Object\n * @sig {k: (v -> v)} -> {k: v} -> {k: v}\n * @param {Object} transformations The object specifying transformation functions to apply\n *        to the object.\n * @param {Object} object The object to be transformed.\n * @return {Object} The transformed object.\n * @example\n *\n *      var tomato  = {firstName: '  Tomato ', data: {elapsed: 100, remaining: 1400}, id:123};\n *      var transformations = {\n *        firstName: R.trim,\n *        lastName: R.trim, // Will not get invoked.\n *        data: {elapsed: R.add(1), remaining: R.add(-1)}\n *      };\n *      R.evolve(transformations, tomato); //=> {firstName: 'Tomato', data: {elapsed: 101, remaining: 1399}, id:123}\n */\nmodule.exports = _curry2(function evolve(transformations, object) {\n  var result = {};\n  var transformation, key, type;\n  for (key in object) {\n    transformation = transformations[key];\n    type = typeof transformation;\n    result[key] = type === 'function'                 ? transformation(object[key])\n                : transformation && type === 'object' ? evolve(transformation, object[key])\n                                                      : object[key];\n  }\n  return result;\n});\n","var _curry2 = require('./internal/_curry2');\nvar _isInteger = require('./internal/_isInteger');\n\n\n/**\n * `mathMod` behaves like the modulo operator should mathematically, unlike the\n * `%` operator (and by extension, [`R.modulo`](#modulo)). So while\n * `-17 % 5` is `-2`, `mathMod(-17, 5)` is `3`. `mathMod` requires Integer\n * arguments, and returns NaN when the modulus is zero or negative.\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category Math\n * @sig Number -> Number -> Number\n * @param {Number} m The dividend.\n * @param {Number} p the modulus.\n * @return {Number} The result of `b mod a`.\n * @see R.modulo\n * @example\n *\n *      R.mathMod(-17, 5);  //=> 3\n *      R.mathMod(17, 5);   //=> 2\n *      R.mathMod(17, -5);  //=> NaN\n *      R.mathMod(17, 0);   //=> NaN\n *      R.mathMod(17.2, 5); //=> NaN\n *      R.mathMod(17, 5.3); //=> NaN\n *\n *      var clock = R.mathMod(R.__, 12);\n *      clock(15); //=> 3\n *      clock(24); //=> 0\n *\n *      var seventeenMod = R.mathMod(17);\n *      seventeenMod(3);  //=> 2\n *      seventeenMod(4);  //=> 1\n *      seventeenMod(10); //=> 7\n */\nmodule.exports = _curry2(function mathMod(m, p) {\n  if (!_isInteger(m)) { return NaN; }\n  if (!_isInteger(p) || p < 1) { return NaN; }\n  return ((m % p) + p) % p;\n});\n","module.exports = function _forceReduced(x) {\n  return {\n    '@@transducer/value': x,\n    '@@transducer/reduced': true\n  };\n};\n","var _has = require('./_has');\n\n// Based on https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\nmodule.exports = function _objectAssign(target) {\n  if (target == null) {\n    throw new TypeError('Cannot convert undefined or null to object');\n  }\n\n  var output = Object(target);\n  var idx = 1;\n  var length = arguments.length;\n  while (idx < length) {\n    var source = arguments[idx];\n    if (source != null) {\n      for (var nextKey in source) {\n        if (_has(nextKey, source)) {\n          output[nextKey] = source[nextKey];\n        }\n      }\n    }\n    idx += 1;\n  }\n  return output;\n};\n","var _curry1 = require('./internal/_curry1');\nvar _makeFlat = require('./internal/_makeFlat');\n\n\n/**\n * Returns a new list by pulling every item out of it (and all its sub-arrays)\n * and putting them in a new array, depth-first.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig [a] -> [b]\n * @param {Array} list The array to consider.\n * @return {Array} The flattened list.\n * @see R.unnest\n * @example\n *\n *      R.flatten([1, 2, [3, 4], 5, [6, [7, 8, [9, [10, 11], 12]]]]);\n *      //=> [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]\n */\nmodule.exports = _curry1(_makeFlat(true));\n","module.exports = function _pipe(f, g) {\n  return function() {\n    return g.call(this, f.apply(this, arguments));\n  };\n};\n","module.exports = function _isNumber(x) {\n  return Object.prototype.toString.call(x) === '[object Number]';\n};\n","var _cloneRegExp = require('./_cloneRegExp');\nvar type = require('../type');\n\n\n/**\n * Copies an object.\n *\n * @private\n * @param {*} value The value to be copied\n * @param {Array} refFrom Array containing the source references\n * @param {Array} refTo Array containing the copied source references\n * @param {Boolean} deep Whether or not to perform deep cloning.\n * @return {*} The copied value.\n */\nmodule.exports = function _clone(value, refFrom, refTo, deep) {\n  var copy = function copy(copiedValue) {\n    var len = refFrom.length;\n    var idx = 0;\n    while (idx < len) {\n      if (value === refFrom[idx]) {\n        return refTo[idx];\n      }\n      idx += 1;\n    }\n    refFrom[idx + 1] = value;\n    refTo[idx + 1] = copiedValue;\n    for (var key in value) {\n      copiedValue[key] = deep ?\n        _clone(value[key], refFrom, refTo, true) : value[key];\n    }\n    return copiedValue;\n  };\n  switch (type(value)) {\n    case 'Object':  return copy({});\n    case 'Array':   return copy([]);\n    case 'Date':    return new Date(value.valueOf());\n    case 'RegExp':  return _cloneRegExp(value);\n    default:        return value;\n  }\n};\n","var _concat = require('./internal/_concat');\nvar _createPartialApplicator = require('./internal/_createPartialApplicator');\n\n\n/**\n * Takes a function `f` and a list of arguments, and returns a function `g`.\n * When applied, `g` returns the result of applying `f` to the arguments\n * provided initially followed by the arguments provided to `g`.\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category Function\n * @sig ((a, b, c, ..., n) -> x) -> [a, b, c, ...] -> ((d, e, f, ..., n) -> x)\n * @param {Function} f\n * @param {Array} args\n * @return {Function}\n * @see R.partialRight\n * @example\n *\n *      var multiply2 = (a, b) => a * b;\n *      var double = R.partial(multiply2, [2]);\n *      double(2); //=> 4\n *\n *      var greet = (salutation, title, firstName, lastName) =>\n *        salutation + ', ' + title + ' ' + firstName + ' ' + lastName + '!';\n *\n *      var sayHello = R.partial(greet, ['Hello']);\n *      var sayHelloToMs = R.partial(sayHello, ['Ms.']);\n *      sayHelloToMs('Jane', 'Jones'); //=> 'Hello, Ms. Jane Jones!'\n * @symb R.partial(f, [a, b])(c, d) = f(a, b, c, d)\n */\nmodule.exports = _createPartialApplicator(_concat);\n","var _curry2 = require('./internal/_curry2');\nvar equals = require('./equals');\nvar take = require('./take');\n\n/**\n * Checks if a list starts with the provided values\n *\n * @func\n * @memberOf R\n * @since v0.24.0\n * @category List\n * @sig [a] -> Boolean\n * @sig String -> Boolean\n * @param {*} prefix\n * @param {*} list\n * @return {Boolean}\n * @example\n *\n *      R.startsWith('a', 'abc')                //=> true\n *      R.startsWith('b', 'abc')                //=> false\n *      R.startsWith(['a'], ['a', 'b', 'c'])    //=> true\n *      R.startsWith(['b'], ['a', 'b', 'c'])    //=> false\n */\nmodule.exports = _curry2(function(prefix, list) {\n  return equals(take(prefix.length, list), prefix);\n});\n","var _curry3 = require('./internal/_curry3');\n\n\n/**\n * Makes a descending comparator function out of a function that returns a value\n * that can be compared with `<` and `>`.\n *\n * @func\n * @memberOf R\n * @since v0.23.0\n * @category Function\n * @sig Ord b => (a -> b) -> a -> a -> Number\n * @param {Function} fn A function of arity one that returns a value that can be compared\n * @param {*} a The first item to be compared.\n * @param {*} b The second item to be compared.\n * @return {Number} `-1` if fn(a) > fn(b), `1` if fn(b) > fn(a), otherwise `0`\n * @see R.ascend\n * @example\n *\n *      var byAge = R.descend(R.prop('age'));\n *      var people = [\n *        // ...\n *      ];\n *      var peopleByOldestFirst = R.sort(byAge, people);\n */\nmodule.exports = _curry3(function descend(fn, a, b) {\n  var aa = fn(a);\n  var bb = fn(b);\n  return aa > bb ? -1 : aa < bb ? 1 : 0;\n});\n","var _curry1 = require('./internal/_curry1');\nvar constructN = require('./constructN');\n\n\n/**\n * Wraps a constructor function inside a curried function that can be called\n * with the same arguments and returns the same type.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig (* -> {*}) -> (* -> {*})\n * @param {Function} fn The constructor function to wrap.\n * @return {Function} A wrapped, curried constructor function.\n * @see R.invoker\n * @example\n *\n *      // Constructor function\n *      function Animal(kind) {\n *        this.kind = kind;\n *      };\n *      Animal.prototype.sighting = function() {\n *        return \"It's a \" + this.kind + \"!\";\n *      }\n *\n *      var AnimalConstructor = R.construct(Animal)\n *\n *      // Notice we no longer need the 'new' keyword:\n *      AnimalConstructor('Pig'); //=> {\"kind\": \"Pig\", \"sighting\": function (){...}};\n *\n *      var animalTypes = [\"Lion\", \"Tiger\", \"Bear\"];\n *      var animalSighting = R.invoker(0, 'sighting');\n *      var sightNewAnimal = R.compose(animalSighting, AnimalConstructor);\n *      R.map(sightNewAnimal, animalTypes); //=> [\"It's a Lion!\", \"It's a Tiger!\", \"It's a Bear!\"]\n */\nmodule.exports = _curry1(function construct(Fn) {\n  return constructN(Fn.length, Fn);\n});\n","module.exports = function _isObject(x) {\n  return Object.prototype.toString.call(x) === '[object Object]';\n};\n","var chain = require('./chain');\nvar compose = require('./compose');\nvar map = require('./map');\n\n\n/**\n * Returns the right-to-left Kleisli composition of the provided functions,\n * each of which must return a value of a type supported by [`chain`](#chain).\n *\n * `R.composeK(h, g, f)` is equivalent to `R.compose(R.chain(h), R.chain(g), R.chain(f))`.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category Function\n * @sig Chain m => ((y -> m z), (x -> m y), ..., (a -> m b)) -> (a -> m z)\n * @param {...Function} ...functions The functions to compose\n * @return {Function}\n * @see R.pipeK\n * @example\n *\n *       //  get :: String -> Object -> Maybe *\n *       var get = R.curry((propName, obj) => Maybe(obj[propName]))\n *\n *       //  getStateCode :: Maybe String -> Maybe String\n *       var getStateCode = R.composeK(\n *         R.compose(Maybe.of, R.toUpper),\n *         get('state'),\n *         get('address'),\n *         get('user'),\n *       );\n *       getStateCode({\"user\":{\"address\":{\"state\":\"ny\"}}}); //=> Maybe.Just(\"NY\")\n *       getStateCode({}); //=> Maybe.Nothing()\n * @symb R.composeK(f, g, h)(a) = R.chain(f, R.chain(g, h(a)))\n */\nmodule.exports = function composeK() {\n  if (arguments.length === 0) {\n    throw new Error('composeK requires at least one argument');\n  }\n  var init = Array.prototype.slice.call(arguments);\n  var last = init.pop();\n  return compose(compose.apply(this, map(chain, init)), last);\n};\n","var _curry2 = require('./internal/_curry2');\nvar curryN = require('./curryN');\n\n\n/**\n * Accepts a function `fn` and a list of transformer functions and returns a\n * new curried function. When the new function is invoked, it calls the\n * function `fn` with parameters consisting of the result of calling each\n * supplied handler on successive arguments to the new function.\n *\n * If more arguments are passed to the returned function than transformer\n * functions, those arguments are passed directly to `fn` as additional\n * parameters. If you expect additional arguments that don't need to be\n * transformed, although you can ignore them, it's best to pass an identity\n * function so that the new function reports the correct arity.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig (x1 -> x2 -> ... -> z) -> [(a -> x1), (b -> x2), ...] -> (a -> b -> ... -> z)\n * @param {Function} fn The function to wrap.\n * @param {Array} transformers A list of transformer functions\n * @return {Function} The wrapped function.\n * @see R.converge\n * @example\n *\n *      R.useWith(Math.pow, [R.identity, R.identity])(3, 4); //=> 81\n *      R.useWith(Math.pow, [R.identity, R.identity])(3)(4); //=> 81\n *      R.useWith(Math.pow, [R.dec, R.inc])(3, 4); //=> 32\n *      R.useWith(Math.pow, [R.dec, R.inc])(3)(4); //=> 32\n * @symb R.useWith(f, [g, h])(a, b) = f(g(a), h(b))\n */\nmodule.exports = _curry2(function useWith(fn, transformers) {\n  return curryN(transformers.length, function() {\n    var args = [];\n    var idx = 0;\n    while (idx < transformers.length) {\n      args.push(transformers[idx].call(this, arguments[idx]));\n      idx += 1;\n    }\n    return fn.apply(this, args.concat(Array.prototype.slice.call(arguments, transformers.length)));\n  });\n});\n","var _curry2 = require('./_curry2');\nvar _xfBase = require('./_xfBase');\n\n\nmodule.exports = (function() {\n  function XFilter(f, xf) {\n    this.xf = xf;\n    this.f = f;\n  }\n  XFilter.prototype['@@transducer/init'] = _xfBase.init;\n  XFilter.prototype['@@transducer/result'] = _xfBase.result;\n  XFilter.prototype['@@transducer/step'] = function(result, input) {\n    return this.f(input) ? this.xf['@@transducer/step'](result, input) : result;\n  };\n\n  return _curry2(function _xfilter(f, xf) { return new XFilter(f, xf); });\n}());\n","var _curry1 = require('./internal/_curry1');\nvar _has = require('./internal/_has');\nvar _isArguments = require('./internal/_isArguments');\n\n\n/**\n * Returns a list containing the names of all the enumerable own properties of\n * the supplied object.\n * Note that the order of the output array is not guaranteed to be consistent\n * across different JS platforms.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig {k: v} -> [k]\n * @param {Object} obj The object to extract properties from\n * @return {Array} An array of the object's own properties.\n * @see R.keysIn, R.values\n * @example\n *\n *      R.keys({a: 1, b: 2, c: 3}); //=> ['a', 'b', 'c']\n */\nmodule.exports = (function() {\n  // cover IE < 9 keys issues\n  var hasEnumBug = !({toString: null}).propertyIsEnumerable('toString');\n  var nonEnumerableProps = ['constructor', 'valueOf', 'isPrototypeOf', 'toString',\n                            'propertyIsEnumerable', 'hasOwnProperty', 'toLocaleString'];\n  // Safari bug\n  var hasArgsEnumBug = (function() {\n    'use strict';\n    return arguments.propertyIsEnumerable('length');\n  }());\n\n  var contains = function contains(list, item) {\n    var idx = 0;\n    while (idx < list.length) {\n      if (list[idx] === item) {\n        return true;\n      }\n      idx += 1;\n    }\n    return false;\n  };\n\n  return typeof Object.keys === 'function' && !hasArgsEnumBug ?\n    _curry1(function keys(obj) {\n      return Object(obj) !== obj ? [] : Object.keys(obj);\n    }) :\n    _curry1(function keys(obj) {\n      if (Object(obj) !== obj) {\n        return [];\n      }\n      var prop, nIdx;\n      var ks = [];\n      var checkArgsLength = hasArgsEnumBug && _isArguments(obj);\n      for (prop in obj) {\n        if (_has(prop, obj) && (!checkArgsLength || prop !== 'length')) {\n          ks[ks.length] = prop;\n        }\n      }\n      if (hasEnumBug) {\n        nIdx = nonEnumerableProps.length - 1;\n        while (nIdx >= 0) {\n          prop = nonEnumerableProps[nIdx];\n          if (_has(prop, obj) && !contains(ks, prop)) {\n            ks[ks.length] = prop;\n          }\n          nIdx -= 1;\n        }\n      }\n      return ks;\n    });\n}());\n","module.exports = function _of(x) { return [x]; };\n","var _curry1 = require('./internal/_curry1');\nvar _reduced = require('./internal/_reduced');\n\n/**\n * Returns a value wrapped to indicate that it is the final value of the reduce\n * and transduce functions. The returned value should be considered a black\n * box: the internal structure is not guaranteed to be stable.\n *\n * Note: this optimization is unavailable to functions not explicitly listed\n * above. For instance, it is not currently supported by\n * [`reduceRight`](#reduceRight).\n *\n * @func\n * @memberOf R\n * @since v0.15.0\n * @category List\n * @sig a -> *\n * @param {*} x The final value of the reduce.\n * @return {*} The wrapped value.\n * @see R.reduce, R.transduce\n * @example\n *\n *     R.reduce(\n *       (acc, item) => item > 3 ? R.reduced(acc) : acc.concat(item),\n *       [],\n *       [1, 2, 3, 4, 5]) // [1, 2, 3]\n */\n\nmodule.exports = _curry1(_reduced);\n","var _curry3 = require('./internal/_curry3');\n\n\n/**\n * Creates a new list out of the two supplied by applying the function to each\n * equally-positioned pair in the lists. The returned list is truncated to the\n * length of the shorter of the two input lists.\n *\n * @function\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig (a,b -> c) -> [a] -> [b] -> [c]\n * @param {Function} fn The function used to combine the two elements into one value.\n * @param {Array} list1 The first array to consider.\n * @param {Array} list2 The second array to consider.\n * @return {Array} The list made by combining same-indexed elements of `list1` and `list2`\n *         using `fn`.\n * @example\n *\n *      var f = (x, y) => {\n *        // ...\n *      };\n *      R.zipWith(f, [1, 2, 3], ['a', 'b', 'c']);\n *      //=> [f(1, 'a'), f(2, 'b'), f(3, 'c')]\n * @symb R.zipWith(fn, [a, b, c], [d, e, f]) = [fn(a, d), fn(b, e), fn(c, f)]\n */\nmodule.exports = _curry3(function zipWith(fn, a, b) {\n  var rv = [];\n  var idx = 0;\n  var len = Math.min(a.length, b.length);\n  while (idx < len) {\n    rv[idx] = fn(a[idx], b[idx]);\n    idx += 1;\n  }\n  return rv;\n});\n","var _curry2 = require('./_curry2');\nvar _reduced = require('./_reduced');\nvar _xfBase = require('./_xfBase');\n\n\nmodule.exports = (function() {\n  function XTakeWhile(f, xf) {\n    this.xf = xf;\n    this.f = f;\n  }\n  XTakeWhile.prototype['@@transducer/init'] = _xfBase.init;\n  XTakeWhile.prototype['@@transducer/result'] = _xfBase.result;\n  XTakeWhile.prototype['@@transducer/step'] = function(result, input) {\n    return this.f(input) ? this.xf['@@transducer/step'](result, input) : _reduced(result);\n  };\n\n  return _curry2(function _xtakeWhile(f, xf) { return new XTakeWhile(f, xf); });\n}());\n","var _map = require('./internal/_map');\nvar identity = require('./identity');\nvar pickAll = require('./pickAll');\nvar useWith = require('./useWith');\n\n\n/**\n * Reasonable analog to SQL `select` statement.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @category Relation\n * @sig [k] -> [{k: v}] -> [{k: v}]\n * @param {Array} props The property names to project\n * @param {Array} objs The objects to query\n * @return {Array} An array of objects with just the `props` properties.\n * @example\n *\n *      var abby = {name: 'Abby', age: 7, hair: 'blond', grade: 2};\n *      var fred = {name: 'Fred', age: 12, hair: 'brown', grade: 7};\n *      var kids = [abby, fred];\n *      R.project(['name', 'grade'], kids); //=> [{name: 'Abby', grade: 2}, {name: 'Fred', grade: 7}]\n */\nmodule.exports = useWith(_map, [pickAll, identity]); // passing `identity` gives correct arity\n","var _curry3 = require('./internal/_curry3');\n\n\n/**\n * Tests the final argument by passing it to the given predicate function. If\n * the predicate is satisfied, the function will return the result of calling\n * the `whenTrueFn` function with the same argument. If the predicate is not\n * satisfied, the argument is returned as is.\n *\n * @func\n * @memberOf R\n * @since v0.18.0\n * @category Logic\n * @sig (a -> Boolean) -> (a -> a) -> a -> a\n * @param {Function} pred       A predicate function\n * @param {Function} whenTrueFn A function to invoke when the `condition`\n *                              evaluates to a truthy value.\n * @param {*}        x          An object to test with the `pred` function and\n *                              pass to `whenTrueFn` if necessary.\n * @return {*} Either `x` or the result of applying `x` to `whenTrueFn`.\n * @see R.ifElse, R.unless\n * @example\n *\n *      // truncate :: String -> String\n *      var truncate = R.when(\n *        R.propSatisfies(R.gt(R.__, 10), 'length'),\n *        R.pipe(R.take(10), R.append('…'), R.join(''))\n *      );\n *      truncate('12345');         //=> '12345'\n *      truncate('0123456789ABC'); //=> '0123456789…'\n */\nmodule.exports = _curry3(function when(pred, whenTrueFn, x) {\n  return pred(x) ? whenTrueFn(x) : x;\n});\n","var _curry1 = require('./internal/_curry1');\nvar _has = require('./internal/_has');\nvar keys = require('./keys');\n\n\n/**\n * Same as [`R.invertObj`](#invertObj), however this accounts for objects with\n * duplicate values by putting the values into an array.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Object\n * @sig {s: x} -> {x: [ s, ... ]}\n * @param {Object} obj The object or array to invert\n * @return {Object} out A new object with keys in an array.\n * @see R.invertObj\n * @example\n *\n *      var raceResultsByFirstName = {\n *        first: 'alice',\n *        second: 'jake',\n *        third: 'alice',\n *      };\n *      R.invert(raceResultsByFirstName);\n *      //=> { 'alice': ['first', 'third'], 'jake':['second'] }\n */\nmodule.exports = _curry1(function invert(obj) {\n  var props = keys(obj);\n  var len = props.length;\n  var idx = 0;\n  var out = {};\n\n  while (idx < len) {\n    var key = props[idx];\n    var val = obj[key];\n    var list = _has(val, out) ? out[val] : (out[val] = []);\n    list[list.length] = key;\n    idx += 1;\n  }\n  return out;\n});\n","var _arity = require('./internal/_arity');\nvar _curry2 = require('./internal/_curry2');\n\n\n/**\n * Creates a function that is bound to a context.\n * Note: `R.bind` does not provide the additional argument-binding capabilities of\n * [Function.prototype.bind](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/bind).\n *\n * @func\n * @memberOf R\n * @since v0.6.0\n * @category Function\n * @category Object\n * @sig (* -> *) -> {*} -> (* -> *)\n * @param {Function} fn The function to bind to context\n * @param {Object} thisObj The context to bind `fn` to\n * @return {Function} A function that will execute in the context of `thisObj`.\n * @see R.partial\n * @example\n *\n *      var log = R.bind(console.log, console);\n *      R.pipe(R.assoc('a', 2), R.tap(log), R.assoc('a', 3))({a: 1}); //=> {a: 3}\n *      // logs {a: 2}\n * @symb R.bind(f, o)(a, b) = f.call(o, a, b)\n */\nmodule.exports = _curry2(function bind(fn, thisObj) {\n  return _arity(fn.length, function() {\n    return fn.apply(thisObj, arguments);\n  });\n});\n","var _curry2 = require('./internal/_curry2');\n\n\n/**\n * Returns a new list containing the last `n` elements of a given list, passing\n * each value to the supplied predicate function, and terminating when the\n * predicate function returns `false`. Excludes the element that caused the\n * predicate function to fail. The predicate function is passed one argument:\n * *(value)*.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category List\n * @sig (a -> Boolean) -> [a] -> [a]\n * @param {Function} fn The function called per iteration.\n * @param {Array} list The collection to iterate over.\n * @return {Array} A new array.\n * @see R.dropLastWhile, R.addIndex\n * @example\n *\n *      var isNotOne = x => x !== 1;\n *\n *      R.takeLastWhile(isNotOne, [1, 2, 3, 4]); //=> [2, 3, 4]\n */\nmodule.exports = _curry2(function takeLastWhile(fn, list) {\n  var idx = list.length - 1;\n  while (idx >= 0 && fn(list[idx])) {\n    idx -= 1;\n  }\n  return Array.prototype.slice.call(list, idx + 1);\n});\n","var _arity = require('./internal/_arity');\nvar _curry1 = require('./internal/_curry1');\n\n\n/**\n * Accepts a function `fn` and returns a function that guards invocation of\n * `fn` such that `fn` can only ever be called once, no matter how many times\n * the returned function is invoked. The first value calculated is returned in\n * subsequent invocations.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig (a... -> b) -> (a... -> b)\n * @param {Function} fn The function to wrap in a call-only-once wrapper.\n * @return {Function} The wrapped function.\n * @example\n *\n *      var addOneOnce = R.once(x => x + 1);\n *      addOneOnce(10); //=> 11\n *      addOneOnce(addOneOnce(50)); //=> 11\n */\nmodule.exports = _curry1(function once(fn) {\n  var called = false;\n  var result;\n  return _arity(fn.length, function() {\n    if (called) {\n      return result;\n    }\n    called = true;\n    result = fn.apply(this, arguments);\n    return result;\n  });\n});\n","var _curry2 = require('./_curry2');\nvar _reduced = require('./_reduced');\nvar _xfBase = require('./_xfBase');\n\n\nmodule.exports = (function() {\n  function XFind(f, xf) {\n    this.xf = xf;\n    this.f = f;\n    this.found = false;\n  }\n  XFind.prototype['@@transducer/init'] = _xfBase.init;\n  XFind.prototype['@@transducer/result'] = function(result) {\n    if (!this.found) {\n      result = this.xf['@@transducer/step'](result, void 0);\n    }\n    return this.xf['@@transducer/result'](result);\n  };\n  XFind.prototype['@@transducer/step'] = function(result, input) {\n    if (this.f(input)) {\n      this.found = true;\n      result = _reduced(this.xf['@@transducer/step'](result, input));\n    }\n    return result;\n  };\n\n  return _curry2(function _xfind(f, xf) { return new XFind(f, xf); });\n}());\n","var _curry1 = require('./internal/_curry1');\nvar assocPath = require('./assocPath');\nvar lens = require('./lens');\nvar path = require('./path');\n\n\n/**\n * Returns a lens whose focus is the specified path.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category Object\n * @typedefn Idx = String | Int\n * @typedefn Lens s a = Functor f => (a -> f a) -> s -> f s\n * @sig [Idx] -> Lens s a\n * @param {Array} path The path to use.\n * @return {Lens}\n * @see R.view, R.set, R.over\n * @example\n *\n *      var xHeadYLens = R.lensPath(['x', 0, 'y']);\n *\n *      R.view(xHeadYLens, {x: [{y: 2, z: 3}, {y: 4, z: 5}]});\n *      //=> 2\n *      R.set(xHeadYLens, 1, {x: [{y: 2, z: 3}, {y: 4, z: 5}]});\n *      //=> {x: [{y: 1, z: 3}, {y: 4, z: 5}]}\n *      R.over(xHeadYLens, R.negate, {x: [{y: 2, z: 3}, {y: 4, z: 5}]});\n *      //=> {x: [{y: -2, z: 3}, {y: 4, z: 5}]}\n */\nmodule.exports = _curry1(function lensPath(p) {\n  return lens(path(p), assocPath(p));\n});\n","var _curry2 = require('./internal/_curry2');\nvar mergeDeepWithKey = require('./mergeDeepWithKey');\n\n\n/**\n * Creates a new object with the own properties of the first object merged with\n * the own properties of the second object. If a key exists in both objects:\n * - and both values are objects, the two values will be recursively merged\n * - otherwise the value from the first object will be used.\n *\n * @func\n * @memberOf R\n * @since v0.24.0\n * @category Object\n * @sig {a} -> {a} -> {a}\n * @param {Object} lObj\n * @param {Object} rObj\n * @return {Object}\n * @see R.merge, R.mergeDeepRight, R.mergeDeepWith, R.mergeDeepWithKey\n * @example\n *\n *      R.mergeDeepLeft({ name: 'fred', age: 10, contact: { email: 'moo@example.com' }},\n *                      { age: 40, contact: { email: 'baa@example.com' }});\n *      //=> { name: 'fred', age: 10, contact: { email: 'moo@example.com' }}\n */\nmodule.exports = _curry2(function mergeDeepLeft(lObj, rObj) {\n  return mergeDeepWithKey(function(k, lVal, rVal) {\n    return lVal;\n  }, lObj, rObj);\n});\n","var _curry1 = require('./internal/_curry1');\nvar apply = require('./apply');\nvar curryN = require('./curryN');\nvar map = require('./map');\nvar max = require('./max');\nvar pluck = require('./pluck');\nvar reduce = require('./reduce');\nvar values = require('./values');\n\n\n/**\n * Given a spec object recursively mapping properties to functions, creates a\n * function producing an object of the same structure, by mapping each property\n * to the result of calling its associated function with the supplied arguments.\n *\n * @func\n * @memberOf R\n * @since v0.20.0\n * @category Function\n * @sig {k: ((a, b, ..., m) -> v)} -> ((a, b, ..., m) -> {k: v})\n * @param {Object} spec an object recursively mapping properties to functions for\n *        producing the values for these properties.\n * @return {Function} A function that returns an object of the same structure\n * as `spec', with each property set to the value returned by calling its\n * associated function with the supplied arguments.\n * @see R.converge, R.juxt\n * @example\n *\n *      var getMetrics = R.applySpec({\n *                                      sum: R.add,\n *                                      nested: { mul: R.multiply }\n *                                   });\n *      getMetrics(2, 4); // => { sum: 6, nested: { mul: 8 } }\n * @symb R.applySpec({ x: f, y: { z: g } })(a, b) = { x: f(a, b), y: { z: g(a, b) } }\n */\nmodule.exports = _curry1(function applySpec(spec) {\n  spec = map(function(v) { return typeof v == 'function' ? v : applySpec(v); },\n             spec);\n  return curryN(reduce(max, 0, pluck('length', values(spec))),\n                function() {\n                  var args = arguments;\n                  return map(function(f) { return apply(f, args); }, spec);\n                });\n});\n","var take = require('../take');\n\nmodule.exports = function dropLast(n, xs) {\n  return take(n < xs.length ? xs.length - n : 0, xs);\n};\n","var _isArray = require('./_isArray');\nvar _isTransformer = require('./_isTransformer');\n\n\n/**\n * Returns a function that dispatches with different strategies based on the\n * object in list position (last argument). If it is an array, executes [fn].\n * Otherwise, if it has a function with one of the given method names, it will\n * execute that function (functor case). Otherwise, if it is a transformer,\n * uses transducer [xf] to return a new transformer (transducer case).\n * Otherwise, it will default to executing [fn].\n *\n * @private\n * @param {Array} methodNames properties to check for a custom implementation\n * @param {Function} xf transducer to initialize if object is transformer\n * @param {Function} fn default ramda implementation\n * @return {Function} A function that dispatches on object in list position\n */\nmodule.exports = function _dispatchable(methodNames, xf, fn) {\n  return function() {\n    if (arguments.length === 0) {\n      return fn();\n    }\n    var args = Array.prototype.slice.call(arguments, 0);\n    var obj = args.pop();\n    if (!_isArray(obj)) {\n      var idx = 0;\n      while (idx < methodNames.length) {\n        if (typeof obj[methodNames[idx]] === 'function') {\n          return obj[methodNames[idx]].apply(obj, args);\n        }\n        idx += 1;\n      }\n      if (_isTransformer(obj)) {\n        var transducer = xf.apply(null, args);\n        return transducer(obj);\n      }\n    }\n    return fn.apply(this, arguments);\n  };\n};\n","var _curry2 = require('./internal/_curry2');\n\n\n/**\n * Subtracts its second argument from its first argument.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Math\n * @sig Number -> Number -> Number\n * @param {Number} a The first value.\n * @param {Number} b The second value.\n * @return {Number} The result of `a - b`.\n * @see R.add\n * @example\n *\n *      R.subtract(10, 8); //=> 2\n *\n *      var minus5 = R.subtract(R.__, 5);\n *      minus5(17); //=> 12\n *\n *      var complementaryAngle = R.subtract(90);\n *      complementaryAngle(30); //=> 60\n *      complementaryAngle(72); //=> 18\n */\nmodule.exports = _curry2(function subtract(a, b) {\n  return Number(a) - Number(b);\n});\n","var _contains = require('./_contains');\n\n\n// A simple Set type that honours R.equals semantics\nmodule.exports = (function() {\n  function _Set() {\n    /* globals Set */\n    this._nativeSet = typeof Set === 'function' ? new Set() : null;\n    this._items = {};\n  }\n\n  // until we figure out why jsdoc chokes on this\n  // @param item The item to add to the Set\n  // @returns {boolean} true if the item did not exist prior, otherwise false\n  //\n  _Set.prototype.add = function(item) {\n    return !hasOrAdd(item, true, this);\n  };\n\n  //\n  // @param item The item to check for existence in the Set\n  // @returns {boolean} true if the item exists in the Set, otherwise false\n  //\n  _Set.prototype.has = function(item) {\n    return hasOrAdd(item, false, this);\n  };\n\n  //\n  // Combines the logic for checking whether an item is a member of the set and\n  // for adding a new item to the set.\n  //\n  // @param item       The item to check or add to the Set instance.\n  // @param shouldAdd  If true, the item will be added to the set if it doesn't\n  //                   already exist.\n  // @param set        The set instance to check or add to.\n  // @return {boolean} true if the item already existed, otherwise false.\n  //\n  function hasOrAdd(item, shouldAdd, set) {\n    var type = typeof item;\n    var prevSize, newSize;\n    switch (type) {\n      case 'string':\n      case 'number':\n        // distinguish between +0 and -0\n        if (item === 0 && 1 / item === -Infinity) {\n          if (set._items['-0']) {\n            return true;\n          } else {\n            if (shouldAdd) {\n              set._items['-0'] = true;\n            }\n            return false;\n          }\n        }\n        // these types can all utilise the native Set\n        if (set._nativeSet !== null) {\n          if (shouldAdd) {\n            prevSize = set._nativeSet.size;\n            set._nativeSet.add(item);\n            newSize = set._nativeSet.size;\n            return newSize === prevSize;\n          } else {\n            return set._nativeSet.has(item);\n          }\n        } else {\n          if (!(type in set._items)) {\n            if (shouldAdd) {\n              set._items[type] = {};\n              set._items[type][item] = true;\n            }\n            return false;\n          } else if (item in set._items[type]) {\n            return true;\n          } else {\n            if (shouldAdd) {\n              set._items[type][item] = true;\n            }\n            return false;\n          }\n        }\n\n      case 'boolean':\n        // set._items['boolean'] holds a two element array\n        // representing [ falseExists, trueExists ]\n        if (type in set._items) {\n          var bIdx = item ? 1 : 0;\n          if (set._items[type][bIdx]) {\n            return true;\n          } else {\n            if (shouldAdd) {\n              set._items[type][bIdx] = true;\n            }\n            return false;\n          }\n        } else {\n          if (shouldAdd) {\n            set._items[type] = item ? [false, true] : [true, false];\n          }\n          return false;\n        }\n\n      case 'function':\n        // compare functions for reference equality\n        if (set._nativeSet !== null) {\n          if (shouldAdd) {\n            prevSize = set._nativeSet.size;\n            set._nativeSet.add(item);\n            newSize = set._nativeSet.size;\n            return newSize === prevSize;\n          } else {\n            return set._nativeSet.has(item);\n          }\n        } else {\n          if (!(type in set._items)) {\n            if (shouldAdd) {\n              set._items[type] = [item];\n            }\n            return false;\n          }\n          if (!_contains(item, set._items[type])) {\n            if (shouldAdd) {\n              set._items[type].push(item);\n            }\n            return false;\n          }\n          return true;\n        }\n\n      case 'undefined':\n        if (set._items[type]) {\n          return true;\n        } else {\n          if (shouldAdd) {\n            set._items[type] = true;\n          }\n          return false;\n        }\n\n      case 'object':\n        if (item === null) {\n          if (!set._items['null']) {\n            if (shouldAdd) {\n              set._items['null'] = true;\n            }\n            return false;\n          }\n          return true;\n        }\n      /* falls through */\n      default:\n        // reduce the search size of heterogeneous sets by creating buckets\n        // for each type.\n        type = Object.prototype.toString.call(item);\n        if (!(type in set._items)) {\n          if (shouldAdd) {\n            set._items[type] = [item];\n          }\n          return false;\n        }\n        // scan through all previously applied items\n        if (!_contains(item, set._items[type])) {\n          if (shouldAdd) {\n            set._items[type].push(item);\n          }\n          return false;\n        }\n        return true;\n    }\n  }\n  return _Set;\n}());\n","module.exports = function _isPlaceholder(a) {\n  return a != null &&\n         typeof a === 'object' &&\n         a['@@functional/placeholder'] === true;\n};\n","var _curry2 = require('./_curry2');\nvar _xfBase = require('./_xfBase');\n\n\nmodule.exports = (function() {\n  function XFindLastIndex(f, xf) {\n    this.xf = xf;\n    this.f = f;\n    this.idx = -1;\n    this.lastIdx = -1;\n  }\n  XFindLastIndex.prototype['@@transducer/init'] = _xfBase.init;\n  XFindLastIndex.prototype['@@transducer/result'] = function(result) {\n    return this.xf['@@transducer/result'](this.xf['@@transducer/step'](result, this.lastIdx));\n  };\n  XFindLastIndex.prototype['@@transducer/step'] = function(result, input) {\n    this.idx += 1;\n    if (this.f(input)) {\n      this.lastIdx = this.idx;\n    }\n    return result;\n  };\n\n  return _curry2(function _xfindLastIndex(f, xf) { return new XFindLastIndex(f, xf); });\n}());\n","module.exports = function _arity(n, fn) {\n  /* eslint-disable no-unused-vars */\n  switch (n) {\n    case 0: return function() { return fn.apply(this, arguments); };\n    case 1: return function(a0) { return fn.apply(this, arguments); };\n    case 2: return function(a0, a1) { return fn.apply(this, arguments); };\n    case 3: return function(a0, a1, a2) { return fn.apply(this, arguments); };\n    case 4: return function(a0, a1, a2, a3) { return fn.apply(this, arguments); };\n    case 5: return function(a0, a1, a2, a3, a4) { return fn.apply(this, arguments); };\n    case 6: return function(a0, a1, a2, a3, a4, a5) { return fn.apply(this, arguments); };\n    case 7: return function(a0, a1, a2, a3, a4, a5, a6) { return fn.apply(this, arguments); };\n    case 8: return function(a0, a1, a2, a3, a4, a5, a6, a7) { return fn.apply(this, arguments); };\n    case 9: return function(a0, a1, a2, a3, a4, a5, a6, a7, a8) { return fn.apply(this, arguments); };\n    case 10: return function(a0, a1, a2, a3, a4, a5, a6, a7, a8, a9) { return fn.apply(this, arguments); };\n    default: throw new Error('First argument to _arity must be a non-negative integer no greater than ten');\n  }\n};\n","var _curry2 = require('./internal/_curry2');\nvar _dispatchable = require('./internal/_dispatchable');\nvar _xfindLastIndex = require('./internal/_xfindLastIndex');\n\n\n/**\n * Returns the index of the last element of the list which matches the\n * predicate, or `-1` if no element matches.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.1\n * @category List\n * @sig (a -> Boolean) -> [a] -> Number\n * @param {Function} fn The predicate function used to determine if the element is the\n * desired one.\n * @param {Array} list The array to consider.\n * @return {Number} The index of the element found, or `-1`.\n * @see R.transduce\n * @example\n *\n *      var xs = [{a: 1, b: 0}, {a:1, b: 1}];\n *      R.findLastIndex(R.propEq('a', 1))(xs); //=> 1\n *      R.findLastIndex(R.propEq('a', 4))(xs); //=> -1\n */\nmodule.exports = _curry2(_dispatchable([], _xfindLastIndex, function findLastIndex(fn, list) {\n  var idx = list.length - 1;\n  while (idx >= 0) {\n    if (fn(list[idx])) {\n      return idx;\n    }\n    idx -= 1;\n  }\n  return -1;\n}));\n","var _curry3 = require('./internal/_curry3');\n\n\n/**\n * Takes a function and two values, and returns whichever value produces the\n * larger result when passed to the provided function.\n *\n * @func\n * @memberOf R\n * @since v0.8.0\n * @category Relation\n * @sig Ord b => (a -> b) -> a -> a -> a\n * @param {Function} f\n * @param {*} a\n * @param {*} b\n * @return {*}\n * @see R.max, R.minBy\n * @example\n *\n *      //  square :: Number -> Number\n *      var square = n => n * n;\n *\n *      R.maxBy(square, -3, 2); //=> -3\n *\n *      R.reduce(R.maxBy(square), 0, [3, -5, 4, 1, -2]); //=> -5\n *      R.reduce(R.maxBy(square), 0, []); //=> 0\n */\nmodule.exports = _curry3(function maxBy(f, a, b) {\n  return f(b) > f(a) ? b : a;\n});\n","var _curry2 = require('./internal/_curry2');\n\n\n/**\n * Creates a new object out of a list of keys and a list of values.\n * Key/value pairing is truncated to the length of the shorter of the two lists.\n * Note: `zipObj` is equivalent to `pipe(zipWith(pair), fromPairs)`.\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category List\n * @sig [String] -> [*] -> {String: *}\n * @param {Array} keys The array that will be properties on the output object.\n * @param {Array} values The list of values on the output object.\n * @return {Object} The object made by pairing up same-indexed elements of `keys` and `values`.\n * @example\n *\n *      R.zipObj(['a', 'b', 'c'], [1, 2, 3]); //=> {a: 1, b: 2, c: 3}\n */\nmodule.exports = _curry2(function zipObj(keys, values) {\n  var idx = 0;\n  var len = Math.min(keys.length, values.length);\n  var out = {};\n  while (idx < len) {\n    out[keys[idx]] = values[idx];\n    idx += 1;\n  }\n  return out;\n});\n","module.exports = function _has(prop, obj) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n};\n","var _curry2 = require('./internal/_curry2');\nvar _isInteger = require('./internal/_isInteger');\nvar assoc = require('./assoc');\nvar dissoc = require('./dissoc');\nvar remove = require('./remove');\nvar update = require('./update');\n\n\n/**\n * Makes a shallow clone of an object, omitting the property at the given path.\n * Note that this copies and flattens prototype properties onto the new object\n * as well. All non-primitive properties are copied by reference.\n *\n * @func\n * @memberOf R\n * @since v0.11.0\n * @category Object\n * @typedefn Idx = String | Int\n * @sig [Idx] -> {k: v} -> {k: v}\n * @param {Array} path The path to the value to omit\n * @param {Object} obj The object to clone\n * @return {Object} A new object without the property at path\n * @see R.assocPath\n * @example\n *\n *      R.dissocPath(['a', 'b', 'c'], {a: {b: {c: 42}}}); //=> {a: {b: {}}}\n */\nmodule.exports = _curry2(function dissocPath(path, obj) {\n  switch (path.length) {\n    case 0:\n      return obj;\n    case 1:\n      return _isInteger(path[0]) ? remove(path[0], 1, obj) : dissoc(path[0], obj);\n    default:\n      var head = path[0];\n      var tail = Array.prototype.slice.call(path, 1);\n      if (obj[head] == null) {\n        return obj;\n      } else if (_isInteger(path[0])) {\n        return update(head, dissocPath(tail, obj[head]), obj);\n      } else {\n        return assoc(head, dissocPath(tail, obj[head]), obj);\n      }\n  }\n});\n","var _curry2 = require('./internal/_curry2');\nvar _isFunction = require('./internal/_isFunction');\nvar lift = require('./lift');\nvar or = require('./or');\n\n\n/**\n * A function wrapping calls to the two functions in an `||` operation,\n * returning the result of the first function if it is truth-y and the result\n * of the second function otherwise. Note that this is short-circuited,\n * meaning that the second function will not be invoked if the first returns a\n * truth-y value.\n *\n * In addition to functions, `R.either` also accepts any fantasy-land compatible\n * applicative functor.\n *\n * @func\n * @memberOf R\n * @since v0.12.0\n * @category Logic\n * @sig (*... -> Boolean) -> (*... -> Boolean) -> (*... -> Boolean)\n * @param {Function} f a predicate\n * @param {Function} g another predicate\n * @return {Function} a function that applies its arguments to `f` and `g` and `||`s their outputs together.\n * @see R.or\n * @example\n *\n *      var gt10 = x => x > 10;\n *      var even = x => x % 2 === 0;\n *      var f = R.either(gt10, even);\n *      f(101); //=> true\n *      f(8); //=> true\n */\nmodule.exports = _curry2(function either(f, g) {\n  return _isFunction(f) ?\n    function _either() {\n      return f.apply(this, arguments) || g.apply(this, arguments);\n    } :\n    lift(or)(f, g);\n});\n","var _curry1 = require('./internal/_curry1');\nvar _dispatchable = require('./internal/_dispatchable');\nvar _xdropRepeatsWith = require('./internal/_xdropRepeatsWith');\nvar dropRepeatsWith = require('./dropRepeatsWith');\nvar equals = require('./equals');\n\n\n/**\n * Returns a new list without any consecutively repeating elements.\n * [`R.equals`](#equals) is used to determine equality.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category List\n * @sig [a] -> [a]\n * @param {Array} list The array to consider.\n * @return {Array} `list` without repeating elements.\n * @see R.transduce\n * @example\n *\n *     R.dropRepeats([1, 1, 1, 2, 3, 4, 4, 2, 2]); //=> [1, 2, 3, 4, 2]\n */\nmodule.exports = _curry1(_dispatchable([], _xdropRepeatsWith(equals), dropRepeatsWith(equals)));\n","var _curry2 = require('./internal/_curry2');\n\n\n/**\n * Applies function `fn` to the argument list `args`. This is useful for\n * creating a fixed-arity function from a variadic function. `fn` should be a\n * bound function if context is significant.\n *\n * @func\n * @memberOf R\n * @since v0.7.0\n * @category Function\n * @sig (*... -> a) -> [*] -> a\n * @param {Function} fn The function which will be called with `args`\n * @param {Array} args The arguments to call `fn` with\n * @return {*} result The result, equivalent to `fn(...args)`\n * @see R.call, R.unapply\n * @example\n *\n *      var nums = [1, 2, 3, -99, 42, 6, 7];\n *      R.apply(Math.max, nums); //=> 42\n * @symb R.apply(f, [a, b, c]) = f(a, b, c)\n */\nmodule.exports = _curry2(function apply(fn, args) {\n  return fn.apply(this, args);\n});\n","var _containsWith = require('./internal/_containsWith');\nvar _curry3 = require('./internal/_curry3');\nvar uniqWith = require('./uniqWith');\n\n\n/**\n * Combines two lists into a set (i.e. no duplicates) composed of those\n * elements common to both lists. Duplication is determined according to the\n * value returned by applying the supplied predicate to two list elements.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig ((a, a) -> Boolean) -> [a] -> [a] -> [a]\n * @param {Function} pred A predicate function that determines whether\n *        the two supplied elements are equal.\n * @param {Array} list1 One list of items to compare\n * @param {Array} list2 A second list of items to compare\n * @return {Array} A new list containing those elements common to both lists.\n * @see R.innerJoin\n * @deprecated since v0.24.0\n * @example\n *\n *      var buffaloSpringfield = [\n *        {id: 824, name: 'Richie Furay'},\n *        {id: 956, name: 'Dewey Martin'},\n *        {id: 313, name: 'Bruce Palmer'},\n *        {id: 456, name: 'Stephen Stills'},\n *        {id: 177, name: 'Neil Young'}\n *      ];\n *      var csny = [\n *        {id: 204, name: 'David Crosby'},\n *        {id: 456, name: 'Stephen Stills'},\n *        {id: 539, name: 'Graham Nash'},\n *        {id: 177, name: 'Neil Young'}\n *      ];\n *\n *      R.intersectionWith(R.eqBy(R.prop('id')), buffaloSpringfield, csny);\n *      //=> [{id: 456, name: 'Stephen Stills'}, {id: 177, name: 'Neil Young'}]\n */\nmodule.exports = _curry3(function intersectionWith(pred, list1, list2) {\n  var lookupList, filteredList;\n  if (list1.length > list2.length) {\n    lookupList = list1;\n    filteredList = list2;\n  } else {\n    lookupList = list2;\n    filteredList = list1;\n  }\n  var results = [];\n  var idx = 0;\n  while (idx < filteredList.length) {\n    if (_containsWith(pred, filteredList[idx], lookupList)) {\n      results[results.length] = filteredList[idx];\n    }\n    idx += 1;\n  }\n  return uniqWith(pred, results);\n});\n","var _curry2 = require('./internal/_curry2');\n\n\n/**\n * Returns a partial copy of an object containing only the keys that satisfy\n * the supplied predicate.\n *\n * @func\n * @memberOf R\n * @since v0.8.0\n * @category Object\n * @sig (v, k -> Boolean) -> {k: v} -> {k: v}\n * @param {Function} pred A predicate to determine whether or not a key\n *        should be included on the output object.\n * @param {Object} obj The object to copy from\n * @return {Object} A new object with only properties that satisfy `pred`\n *         on it.\n * @see R.pick, R.filter\n * @example\n *\n *      var isUpperCase = (val, key) => key.toUpperCase() === key;\n *      R.pickBy(isUpperCase, {a: 1, b: 2, A: 3, B: 4}); //=> {A: 3, B: 4}\n */\nmodule.exports = _curry2(function pickBy(test, obj) {\n  var result = {};\n  for (var prop in obj) {\n    if (test(obj[prop], prop, obj)) {\n      result[prop] = obj[prop];\n    }\n  }\n  return result;\n});\n","var _curry3 = require('./internal/_curry3');\nvar equals = require('./equals');\n\n\n/**\n * Reports whether two objects have the same value, in [`R.equals`](#equals)\n * terms, for the specified property. Useful as a curried predicate.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig k -> {k: v} -> {k: v} -> Boolean\n * @param {String} prop The name of the property to compare\n * @param {Object} obj1\n * @param {Object} obj2\n * @return {Boolean}\n *\n * @example\n *\n *      var o1 = { a: 1, b: 2, c: 3, d: 4 };\n *      var o2 = { a: 10, b: 20, c: 3, d: 40 };\n *      R.eqProps('a', o1, o2); //=> false\n *      R.eqProps('c', o1, o2); //=> true\n */\nmodule.exports = _curry3(function eqProps(prop, obj1, obj2) {\n  return equals(obj1[prop], obj2[prop]);\n});\n","var _curry1 = require('./internal/_curry1');\n\n\n/**\n * Returns a list containing the names of all the properties of the supplied\n * object, including prototype properties.\n * Note that the order of the output array is not guaranteed to be consistent\n * across different JS platforms.\n *\n * @func\n * @memberOf R\n * @since v0.2.0\n * @category Object\n * @sig {k: v} -> [k]\n * @param {Object} obj The object to extract properties from\n * @return {Array} An array of the object's own and prototype properties.\n * @see R.keys, R.valuesIn\n * @example\n *\n *      var F = function() { this.x = 'X'; };\n *      F.prototype.y = 'Y';\n *      var f = new F();\n *      R.keysIn(f); //=> ['x', 'y']\n */\nmodule.exports = _curry1(function keysIn(obj) {\n  var prop;\n  var ks = [];\n  for (prop in obj) {\n    ks[ks.length] = prop;\n  }\n  return ks;\n});\n","var _contains = require('./_contains');\nvar _map = require('./_map');\nvar _quote = require('./_quote');\nvar _toISOString = require('./_toISOString');\nvar keys = require('../keys');\nvar reject = require('../reject');\n\n\nmodule.exports = function _toString(x, seen) {\n  var recur = function recur(y) {\n    var xs = seen.concat([x]);\n    return _contains(y, xs) ? '<Circular>' : _toString(y, xs);\n  };\n\n  //  mapPairs :: (Object, [String]) -> [String]\n  var mapPairs = function(obj, keys) {\n    return _map(function(k) { return _quote(k) + ': ' + recur(obj[k]); }, keys.slice().sort());\n  };\n\n  switch (Object.prototype.toString.call(x)) {\n    case '[object Arguments]':\n      return '(function() { return arguments; }(' + _map(recur, x).join(', ') + '))';\n    case '[object Array]':\n      return '[' + _map(recur, x).concat(mapPairs(x, reject(function(k) { return /^\\d+$/.test(k); }, keys(x)))).join(', ') + ']';\n    case '[object Boolean]':\n      return typeof x === 'object' ? 'new Boolean(' + recur(x.valueOf()) + ')' : x.toString();\n    case '[object Date]':\n      return 'new Date(' + (isNaN(x.valueOf()) ? recur(NaN) : _quote(_toISOString(x))) + ')';\n    case '[object Null]':\n      return 'null';\n    case '[object Number]':\n      return typeof x === 'object' ? 'new Number(' + recur(x.valueOf()) + ')' : 1 / x === -Infinity ? '-0' : x.toString(10);\n    case '[object String]':\n      return typeof x === 'object' ? 'new String(' + recur(x.valueOf()) + ')' : _quote(x);\n    case '[object Undefined]':\n      return 'undefined';\n    default:\n      if (typeof x.toString === 'function') {\n        var repr = x.toString();\n        if (repr !== '[object Object]') {\n          return repr;\n        }\n      }\n      return '{' + mapPairs(x, keys(x)).join(', ') + '}';\n  }\n};\n","var _curry3 = require('./internal/_curry3');\nvar defaultTo = require('./defaultTo');\nvar path = require('./path');\n\n\n/**\n * If the given, non-null object has a value at the given path, returns the\n * value at that path. Otherwise returns the provided default value.\n *\n * @func\n * @memberOf R\n * @since v0.18.0\n * @category Object\n * @typedefn Idx = String | Int\n * @sig a -> [Idx] -> {a} -> a\n * @param {*} d The default value.\n * @param {Array} p The path to use.\n * @param {Object} obj The object to retrieve the nested property from.\n * @return {*} The data at `path` of the supplied object or the default value.\n * @example\n *\n *      R.pathOr('N/A', ['a', 'b'], {a: {b: 2}}); //=> 2\n *      R.pathOr('N/A', ['a', 'b'], {c: {b: 2}}); //=> \"N/A\"\n */\nmodule.exports = _curry3(function pathOr(d, p, obj) {\n  return defaultTo(d, path(p, obj));\n});\n","var _curry2 = require('./_curry2');\nvar _reduced = require('./_reduced');\nvar _xfBase = require('./_xfBase');\n\n\nmodule.exports = (function() {\n  function XAny(f, xf) {\n    this.xf = xf;\n    this.f = f;\n    this.any = false;\n  }\n  XAny.prototype['@@transducer/init'] = _xfBase.init;\n  XAny.prototype['@@transducer/result'] = function(result) {\n    if (!this.any) {\n      result = this.xf['@@transducer/step'](result, false);\n    }\n    return this.xf['@@transducer/result'](result);\n  };\n  XAny.prototype['@@transducer/step'] = function(result, input) {\n    if (this.f(input)) {\n      this.any = true;\n      result = _reduced(this.xf['@@transducer/step'](result, true));\n    }\n    return result;\n  };\n\n  return _curry2(function _xany(f, xf) { return new XAny(f, xf); });\n}());\n","var _curry3 = require('./internal/_curry3');\n\n\n/**\n * Makes a shallow clone of an object, setting or overriding the specified\n * property with the given value. Note that this copies and flattens prototype\n * properties onto the new object as well. All non-primitive properties are\n * copied by reference.\n *\n * @func\n * @memberOf R\n * @since v0.8.0\n * @category Object\n * @sig String -> a -> {k: v} -> {k: v}\n * @param {String} prop The property name to set\n * @param {*} val The new value\n * @param {Object} obj The object to clone\n * @return {Object} A new object equivalent to the original except for the changed property.\n * @see R.dissoc\n * @example\n *\n *      R.assoc('c', 3, {a: 1, b: 2}); //=> {a: 1, b: 2, c: 3}\n */\nmodule.exports = _curry3(function assoc(prop, val, obj) {\n  var result = {};\n  for (var p in obj) {\n    result[p] = obj[p];\n  }\n  result[prop] = val;\n  return result;\n});\n","var _curry2 = require('./internal/_curry2');\n\n\n/**\n * Returns `true` if one or both of its arguments are `true`. Returns `false`\n * if both arguments are `false`.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Logic\n * @sig a -> b -> a | b\n * @param {Any} a\n * @param {Any} b\n * @return {Any} the first argument if truthy, otherwise the second argument.\n * @see R.either\n * @example\n *\n *      R.or(true, true); //=> true\n *      R.or(true, false); //=> true\n *      R.or(false, true); //=> true\n *      R.or(false, false); //=> false\n */\nmodule.exports = _curry2(function or(a, b) {\n  return a || b;\n});\n","var _arity = require('./internal/_arity');\nvar _curry2 = require('./internal/_curry2');\nvar _has = require('./internal/_has');\n\n\n/**\n * A customisable version of [`R.memoize`](#memoize). `memoizeWith` takes an\n * additional function that will be applied to a given argument set and used to\n * create the cache key under which the results of the function to be memoized\n * will be stored. Care must be taken when implementing key generation to avoid\n * clashes that may overwrite previous entries erroneously.\n *\n *\n * @func\n * @memberOf R\n * @since v0.24.0\n * @category Function\n * @sig (*... -> String) -> (*... -> a) -> (*... -> a)\n * @param {Function} fn The function to generate the cache key.\n * @param {Function} fn The function to memoize.\n * @return {Function} Memoized version of `fn`.\n * @see R.memoize\n * @example\n *\n *      let count = 0;\n *      const factorial = R.memoizeWith(R.identity, n => {\n *        count += 1;\n *        return R.product(R.range(1, n + 1));\n *      });\n *      factorial(5); //=> 120\n *      factorial(5); //=> 120\n *      factorial(5); //=> 120\n *      count; //=> 1\n */\nmodule.exports = _curry2(function memoizeWith(mFn, fn) {\n  var cache = {};\n  return _arity(fn.length, function() {\n    var key = mFn.apply(this, arguments);\n    if (!_has(key, cache)) {\n      cache[key] = fn.apply(this, arguments);\n    }\n    return cache[key];\n  });\n});\n","var _curry1 = require('./internal/_curry1');\n\n\n/**\n * Removes (strips) whitespace from both ends of the string.\n *\n * @func\n * @memberOf R\n * @since v0.6.0\n * @category String\n * @sig String -> String\n * @param {String} str The string to trim.\n * @return {String} Trimmed version of `str`.\n * @example\n *\n *      R.trim('   xyz  '); //=> 'xyz'\n *      R.map(R.trim, R.split(',', 'x, y, z')); //=> ['x', 'y', 'z']\n */\nmodule.exports = (function() {\n  var ws = '\\x09\\x0A\\x0B\\x0C\\x0D\\x20\\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003' +\n           '\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u202F\\u205F\\u3000\\u2028' +\n           '\\u2029\\uFEFF';\n  var zeroWidth = '\\u200b';\n  var hasProtoTrim = (typeof String.prototype.trim === 'function');\n  if (!hasProtoTrim || (ws.trim() || !zeroWidth.trim())) {\n    return _curry1(function trim(str) {\n      var beginRx = new RegExp('^[' + ws + '][' + ws + ']*');\n      var endRx = new RegExp('[' + ws + '][' + ws + ']*$');\n      return str.replace(beginRx, '').replace(endRx, '');\n    });\n  } else {\n    return _curry1(function trim(str) {\n      return str.trim();\n    });\n  }\n}());\n","var _curry2 = require('./internal/_curry2');\n\n/**\n * Takes a list and returns a list of lists where each sublist's elements are\n * all satisfied pairwise comparison according to the provided function.\n * Only adjacent elements are passed to the comparison function.\n *\n * @func\n * @memberOf R\n * @since v0.21.0\n * @category List\n * @sig ((a, a) → Boolean) → [a] → [[a]]\n * @param {Function} fn Function for determining whether two given (adjacent)\n *        elements should be in the same group\n * @param {Array} list The array to group. Also accepts a string, which will be\n *        treated as a list of characters.\n * @return {List} A list that contains sublists of elements,\n *         whose concatenations are equal to the original list.\n * @example\n *\n * R.groupWith(R.equals, [0, 1, 1, 2, 3, 5, 8, 13, 21])\n * //=> [[0], [1, 1], [2], [3], [5], [8], [13], [21]]\n *\n * R.groupWith((a, b) => a + 1 === b, [0, 1, 1, 2, 3, 5, 8, 13, 21])\n * //=> [[0, 1], [1, 2, 3], [5], [8], [13], [21]]\n *\n * R.groupWith((a, b) => a % 2 === b % 2, [0, 1, 1, 2, 3, 5, 8, 13, 21])\n * //=> [[0], [1, 1], [2], [3, 5], [8], [13, 21]]\n *\n * R.groupWith(R.eqBy(isVowel), 'aestiou')\n * //=> ['ae', 'st', 'iou']\n */\nmodule.exports = _curry2(function(fn, list) {\n  var res = [];\n  var idx = 0;\n  var len = list.length;\n  while (idx < len) {\n    var nextidx = idx + 1;\n    while (nextidx < len && fn(list[nextidx - 1], list[nextidx])) {\n      nextidx += 1;\n    }\n    res.push(list.slice(idx, nextidx));\n    idx = nextidx;\n  }\n  return res;\n});\n","var _curry2 = require('./internal/_curry2');\n\n\n/**\n * Returns `true` if the first argument is greater than the second; `false`\n * otherwise.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig Ord a => a -> a -> Boolean\n * @param {*} a\n * @param {*} b\n * @return {Boolean}\n * @see R.lt\n * @example\n *\n *      R.gt(2, 1); //=> true\n *      R.gt(2, 2); //=> false\n *      R.gt(2, 3); //=> false\n *      R.gt('a', 'z'); //=> false\n *      R.gt('z', 'a'); //=> true\n */\nmodule.exports = _curry2(function gt(a, b) { return a > b; });\n","var reduceBy = require('./reduceBy');\n\n\n/**\n * Counts the elements of a list according to how many match each value of a\n * key generated by the supplied function. Returns an object mapping the keys\n * produced by `fn` to the number of occurrences in the list. Note that all\n * keys are coerced to strings because of how JavaScript objects work.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig (a -> String) -> [a] -> {*}\n * @param {Function} fn The function used to map values to keys.\n * @param {Array} list The list to count elements from.\n * @return {Object} An object mapping keys to number of occurrences in the list.\n * @example\n *\n *      var numbers = [1.0, 1.1, 1.2, 2.0, 3.0, 2.2];\n *      R.countBy(Math.floor)(numbers);    //=> {'1': 3, '2': 2, '3': 1}\n *\n *      var letters = ['a', 'b', 'A', 'a', 'B', 'c'];\n *      R.countBy(R.toLower)(letters);   //=> {'a': 3, 'b': 2, 'c': 1}\n */\nmodule.exports = reduceBy(function(acc, elem) { return acc + 1; }, 0);\n","module.exports = function _identity(x) { return x; };\n","var invoker = require('./invoker');\n\n\n/**\n * The lower case version of a string.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category String\n * @sig String -> String\n * @param {String} str The string to lower case.\n * @return {String} The lower case version of `str`.\n * @see R.toUpper\n * @example\n *\n *      R.toLower('XYZ'); //=> 'xyz'\n */\nmodule.exports = invoker(0, 'toLowerCase');\n","var _curry2 = require('./internal/_curry2');\nvar _dispatchable = require('./internal/_dispatchable');\nvar _makeFlat = require('./internal/_makeFlat');\nvar _xchain = require('./internal/_xchain');\nvar map = require('./map');\n\n\n/**\n * `chain` maps a function over a list and concatenates the results. `chain`\n * is also known as `flatMap` in some libraries\n *\n * Dispatches to the `chain` method of the second argument, if present,\n * according to the [FantasyLand Chain spec](https://github.com/fantasyland/fantasy-land#chain).\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category List\n * @sig Chain m => (a -> m b) -> m a -> m b\n * @param {Function} fn The function to map with\n * @param {Array} list The list to map over\n * @return {Array} The result of flat-mapping `list` with `fn`\n * @example\n *\n *      var duplicate = n => [n, n];\n *      R.chain(duplicate, [1, 2, 3]); //=> [1, 1, 2, 2, 3, 3]\n *\n *      R.chain(R.append, R.head)([1, 2, 3]); //=> [1, 2, 3, 1]\n */\nmodule.exports = _curry2(_dispatchable(['fantasy-land/chain', 'chain'], _xchain, function chain(fn, monad) {\n  if (typeof monad === 'function') {\n    return function(x) { return fn(monad(x))(x); };\n  }\n  return _makeFlat(false)(map(fn, monad));\n}));\n","var _curry1 = require('./_curry1');\nvar _curry2 = require('./_curry2');\nvar _isPlaceholder = require('./_isPlaceholder');\n\n\n/**\n * Optimized internal three-arity curry function.\n *\n * @private\n * @category Function\n * @param {Function} fn The function to curry.\n * @return {Function} The curried function.\n */\nmodule.exports = function _curry3(fn) {\n  return function f3(a, b, c) {\n    switch (arguments.length) {\n      case 0:\n        return f3;\n      case 1:\n        return _isPlaceholder(a) ? f3\n             : _curry2(function(_b, _c) { return fn(a, _b, _c); });\n      case 2:\n        return _isPlaceholder(a) && _isPlaceholder(b) ? f3\n             : _isPlaceholder(a) ? _curry2(function(_a, _c) { return fn(_a, b, _c); })\n             : _isPlaceholder(b) ? _curry2(function(_b, _c) { return fn(a, _b, _c); })\n             : _curry1(function(_c) { return fn(a, b, _c); });\n      default:\n        return _isPlaceholder(a) && _isPlaceholder(b) && _isPlaceholder(c) ? f3\n             : _isPlaceholder(a) && _isPlaceholder(b) ? _curry2(function(_a, _b) { return fn(_a, _b, c); })\n             : _isPlaceholder(a) && _isPlaceholder(c) ? _curry2(function(_a, _c) { return fn(_a, b, _c); })\n             : _isPlaceholder(b) && _isPlaceholder(c) ? _curry2(function(_b, _c) { return fn(a, _b, _c); })\n             : _isPlaceholder(a) ? _curry1(function(_a) { return fn(_a, b, c); })\n             : _isPlaceholder(b) ? _curry1(function(_b) { return fn(a, _b, c); })\n             : _isPlaceholder(c) ? _curry1(function(_c) { return fn(a, b, _c); })\n             : fn(a, b, c);\n    }\n  };\n};\n","var invoker = require('./invoker');\n\n\n/**\n * The upper case version of a string.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category String\n * @sig String -> String\n * @param {String} str The string to upper case.\n * @return {String} The upper case version of `str`.\n * @see R.toLower\n * @example\n *\n *      R.toUpper('abc'); //=> 'ABC'\n */\nmodule.exports = invoker(0, 'toUpperCase');\n","var _curry2 = require('./internal/_curry2');\nvar _isArray = require('./internal/_isArray');\nvar _isFunction = require('./internal/_isFunction');\nvar _isString = require('./internal/_isString');\nvar toString = require('./toString');\n\n\n/**\n * Returns the result of concatenating the given lists or strings.\n *\n * Note: `R.concat` expects both arguments to be of the same type,\n * unlike the native `Array.prototype.concat` method. It will throw\n * an error if you `concat` an Array with a non-Array value.\n *\n * Dispatches to the `concat` method of the first argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig [a] -> [a] -> [a]\n * @sig String -> String -> String\n * @param {Array|String} firstList The first list\n * @param {Array|String} secondList The second list\n * @return {Array|String} A list consisting of the elements of `firstList` followed by the elements of\n * `secondList`.\n *\n * @example\n *\n *      R.concat('ABC', 'DEF'); // 'ABCDEF'\n *      R.concat([4, 5, 6], [1, 2, 3]); //=> [4, 5, 6, 1, 2, 3]\n *      R.concat([], []); //=> []\n */\nmodule.exports = _curry2(function concat(a, b) {\n  if (_isArray(a)) {\n    if (_isArray(b)) {\n      return a.concat(b);\n    }\n    throw new TypeError(toString(b) + ' is not an array');\n  }\n  if (_isString(a)) {\n    if (_isString(b)) {\n      return a + b;\n    }\n    throw new TypeError(toString(b) + ' is not a string');\n  }\n  if (a != null && _isFunction(a['fantasy-land/concat'])) {\n    return a['fantasy-land/concat'](b);\n  }\n  if (a != null && _isFunction(a.concat)) {\n    return a.concat(b);\n  }\n  throw new TypeError(toString(a) + ' does not have a method named \"concat\" or \"fantasy-land/concat\"');\n});\n","var _curry1 = require('./internal/_curry1');\nvar curryN = require('./curryN');\nvar max = require('./max');\nvar pluck = require('./pluck');\nvar reduce = require('./reduce');\n\n\n/**\n * Takes a list of predicates and returns a predicate that returns true for a\n * given list of arguments if every one of the provided predicates is satisfied\n * by those arguments.\n *\n * The function returned is a curried function whose arity matches that of the\n * highest-arity predicate.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Logic\n * @sig [(*... -> Boolean)] -> (*... -> Boolean)\n * @param {Array} predicates An array of predicates to check\n * @return {Function} The combined predicate\n * @see R.anyPass\n * @example\n *\n *      var isQueen = R.propEq('rank', 'Q');\n *      var isSpade = R.propEq('suit', '♠︎');\n *      var isQueenOfSpades = R.allPass([isQueen, isSpade]);\n *\n *      isQueenOfSpades({rank: 'Q', suit: '♣︎'}); //=> false\n *      isQueenOfSpades({rank: 'Q', suit: '♠︎'}); //=> true\n */\nmodule.exports = _curry1(function allPass(preds) {\n  return curryN(reduce(max, 0, pluck('length', preds)), function() {\n    var idx = 0;\n    var len = preds.length;\n    while (idx < len) {\n      if (!preds[idx].apply(this, arguments)) {\n        return false;\n      }\n      idx += 1;\n    }\n    return true;\n  });\n});\n","var _curry2 = require('./internal/_curry2');\nvar _dispatchable = require('./internal/_dispatchable');\nvar _map = require('./internal/_map');\nvar _reduce = require('./internal/_reduce');\nvar _xmap = require('./internal/_xmap');\nvar curryN = require('./curryN');\nvar keys = require('./keys');\n\n\n/**\n * Takes a function and\n * a [functor](https://github.com/fantasyland/fantasy-land#functor),\n * applies the function to each of the functor's values, and returns\n * a functor of the same shape.\n *\n * Ramda provides suitable `map` implementations for `Array` and `Object`,\n * so this function may be applied to `[1, 2, 3]` or `{x: 1, y: 2, z: 3}`.\n *\n * Dispatches to the `map` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * Also treats functions as functors and will compose them together.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Functor f => (a -> b) -> f a -> f b\n * @param {Function} fn The function to be called on every element of the input `list`.\n * @param {Array} list The list to be iterated over.\n * @return {Array} The new list.\n * @see R.transduce, R.addIndex\n * @example\n *\n *      var double = x => x * 2;\n *\n *      R.map(double, [1, 2, 3]); //=> [2, 4, 6]\n *\n *      R.map(double, {x: 1, y: 2, z: 3}); //=> {x: 2, y: 4, z: 6}\n * @symb R.map(f, [a, b]) = [f(a), f(b)]\n * @symb R.map(f, { x: a, y: b }) = { x: f(a), y: f(b) }\n * @symb R.map(f, functor_o) = functor_o.map(f)\n */\nmodule.exports = _curry2(_dispatchable(['fantasy-land/map', 'map'], _xmap, function map(fn, functor) {\n  switch (Object.prototype.toString.call(functor)) {\n    case '[object Function]':\n      return curryN(functor.length, function() {\n        return fn.call(this, functor.apply(this, arguments));\n      });\n    case '[object Object]':\n      return _reduce(function(acc, key) {\n        acc[key] = fn(functor[key]);\n        return acc;\n      }, {}, keys(functor));\n    default:\n      return _map(fn, functor);\n  }\n}));\n","var _curry2 = require('./internal/_curry2');\nvar _dispatchable = require('./internal/_dispatchable');\nvar _xdrop = require('./internal/_xdrop');\nvar slice = require('./slice');\n\n\n/**\n * Returns all but the first `n` elements of the given list, string, or\n * transducer/transformer (or object with a `drop` method).\n *\n * Dispatches to the `drop` method of the second argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Number -> [a] -> [a]\n * @sig Number -> String -> String\n * @param {Number} n\n * @param {*} list\n * @return {*} A copy of list without the first `n` elements\n * @see R.take, R.transduce, R.dropLast, R.dropWhile\n * @example\n *\n *      R.drop(1, ['foo', 'bar', 'baz']); //=> ['bar', 'baz']\n *      R.drop(2, ['foo', 'bar', 'baz']); //=> ['baz']\n *      R.drop(3, ['foo', 'bar', 'baz']); //=> []\n *      R.drop(4, ['foo', 'bar', 'baz']); //=> []\n *      R.drop(3, 'ramda');               //=> 'da'\n */\nmodule.exports = _curry2(_dispatchable(['drop'], _xdrop, function drop(n, xs) {\n  return slice(Math.max(0, n), Infinity, xs);\n}));\n","module.exports = function _isString(x) {\n  return Object.prototype.toString.call(x) === '[object String]';\n};\n","var _curry3 = require('./internal/_curry3');\nvar _isObject = require('./internal/_isObject');\nvar mergeWithKey = require('./mergeWithKey');\n\n\n/**\n * Creates a new object with the own properties of the two provided objects.\n * If a key exists in both objects:\n * - and both associated values are also objects then the values will be\n *   recursively merged.\n * - otherwise the provided function is applied to the key and associated values\n *   using the resulting value as the new value associated with the key.\n * If a key only exists in one object, the value will be associated with the key\n * of the resulting object.\n *\n * @func\n * @memberOf R\n * @since v0.24.0\n * @category Object\n * @sig (String -> a -> a -> a) -> {a} -> {a} -> {a}\n * @param {Function} fn\n * @param {Object} lObj\n * @param {Object} rObj\n * @return {Object}\n * @see R.mergeWithKey, R.mergeDeep, R.mergeDeepWith\n * @example\n *\n *      let concatValues = (k, l, r) => k == 'values' ? R.concat(l, r) : r\n *      R.mergeDeepWithKey(concatValues,\n *                         { a: true, c: { thing: 'foo', values: [10, 20] }},\n *                         { b: true, c: { thing: 'bar', values: [15, 35] }});\n *      //=> { a: true, b: true, c: { thing: 'bar', values: [10, 20, 15, 35] }}\n */\nmodule.exports = _curry3(function mergeDeepWithKey(fn, lObj, rObj) {\n  return mergeWithKey(function(k, lVal, rVal) {\n    if (_isObject(lVal) && _isObject(rVal)) {\n      return mergeDeepWithKey(fn, lVal, rVal);\n    } else {\n      return fn(k, lVal, rVal);\n    }\n  }, lObj, rObj);\n});\n","module.exports = function _quote(s) {\n  var escaped = s\n    .replace(/\\\\/g, '\\\\\\\\')\n    .replace(/[\\b]/g, '\\\\b')  // \\b matches word boundary; [\\b] matches backspace\n    .replace(/\\f/g, '\\\\f')\n    .replace(/\\n/g, '\\\\n')\n    .replace(/\\r/g, '\\\\r')\n    .replace(/\\t/g, '\\\\t')\n    .replace(/\\v/g, '\\\\v')\n    .replace(/\\0/g, '\\\\0');\n\n  return '\"' + escaped.replace(/\"/g, '\\\\\"') + '\"';\n};\n","var invoker = require('./invoker');\n\n\n/**\n * Splits a string into an array of strings based on the given\n * separator.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category String\n * @sig (String | RegExp) -> String -> [String]\n * @param {String|RegExp} sep The pattern.\n * @param {String} str The string to separate into an array.\n * @return {Array} The array of strings from `str` separated by `str`.\n * @see R.join\n * @example\n *\n *      var pathComponents = R.split('/');\n *      R.tail(pathComponents('/usr/local/bin/node')); //=> ['usr', 'local', 'bin', 'node']\n *\n *      R.split('.', 'a.b.c.xyz.d'); //=> ['a', 'b', 'c', 'xyz', 'd']\n */\nmodule.exports = invoker(1, 'split');\n","var _curry1 = require('./internal/_curry1');\n\n\n/**\n * Converts an object into an array of key, value arrays. The object's own\n * properties and prototype properties are used. Note that the order of the\n * output array is not guaranteed to be consistent across different JS\n * platforms.\n *\n * @func\n * @memberOf R\n * @since v0.4.0\n * @category Object\n * @sig {String: *} -> [[String,*]]\n * @param {Object} obj The object to extract from\n * @return {Array} An array of key, value arrays from the object's own\n *         and prototype properties.\n * @example\n *\n *      var F = function() { this.x = 'X'; };\n *      F.prototype.y = 'Y';\n *      var f = new F();\n *      R.toPairsIn(f); //=> [['x','X'], ['y','Y']]\n */\nmodule.exports = _curry1(function toPairsIn(obj) {\n  var pairs = [];\n  for (var prop in obj) {\n    pairs[pairs.length] = [prop, obj[prop]];\n  }\n  return pairs;\n});\n","var _curry1 = require('./internal/_curry1');\nvar lens = require('./lens');\nvar nth = require('./nth');\nvar update = require('./update');\n\n\n/**\n * Returns a lens whose focus is the specified index.\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category Object\n * @typedefn Lens s a = Functor f => (a -> f a) -> s -> f s\n * @sig Number -> Lens s a\n * @param {Number} n\n * @return {Lens}\n * @see R.view, R.set, R.over\n * @example\n *\n *      var headLens = R.lensIndex(0);\n *\n *      R.view(headLens, ['a', 'b', 'c']);            //=> 'a'\n *      R.set(headLens, 'x', ['a', 'b', 'c']);        //=> ['x', 'b', 'c']\n *      R.over(headLens, R.toUpper, ['a', 'b', 'c']); //=> ['A', 'b', 'c']\n */\nmodule.exports = _curry1(function lensIndex(n) {\n  return lens(nth(n), update(n));\n});\n","var _curry3 = require('./internal/_curry3');\nvar path = require('./path');\n\n\n/**\n * Returns `true` if the specified object property at given path satisfies the\n * given predicate; `false` otherwise.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category Logic\n * @typedefn Idx = String | Int\n * @sig (a -> Boolean) -> [Idx] -> {a} -> Boolean\n * @param {Function} pred\n * @param {Array} propPath\n * @param {*} obj\n * @return {Boolean}\n * @see R.propSatisfies, R.path\n * @example\n *\n *      R.pathSatisfies(y => y > 0, ['x', 'y'], {x: {y: 2}}); //=> true\n */\nmodule.exports = _curry3(function pathSatisfies(pred, propPath, obj) {\n  return propPath.length > 0 && pred(path(propPath, obj));\n});\n","var _curry1 = require('./internal/_curry1');\n\n\n/**\n * Creates a new object from a list key-value pairs. If a key appears in\n * multiple pairs, the rightmost pair is included in the object.\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category List\n * @sig [[k,v]] -> {k: v}\n * @param {Array} pairs An array of two-element arrays that will be the keys and values of the output object.\n * @return {Object} The object made by pairing up `keys` and `values`.\n * @see R.toPairs, R.pair\n * @example\n *\n *      R.fromPairs([['a', 1], ['b', 2], ['c', 3]]); //=> {a: 1, b: 2, c: 3}\n */\nmodule.exports = _curry1(function fromPairs(pairs) {\n  var result = {};\n  var idx = 0;\n  while (idx < pairs.length) {\n    result[pairs[idx][0]] = pairs[idx][1];\n    idx += 1;\n  }\n  return result;\n});\n","var _curry1 = require('./internal/_curry1');\nvar mean = require('./mean');\n\n\n/**\n * Returns the median of the given list of numbers.\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category Math\n * @sig [Number] -> Number\n * @param {Array} list\n * @return {Number}\n * @see R.mean\n * @example\n *\n *      R.median([2, 9, 7]); //=> 7\n *      R.median([7, 2, 10, 9]); //=> 8\n *      R.median([]); //=> NaN\n */\nmodule.exports = _curry1(function median(list) {\n  var len = list.length;\n  if (len === 0) {\n    return NaN;\n  }\n  var width = 2 - len % 2;\n  var idx = (len - width) / 2;\n  return mean(Array.prototype.slice.call(list, 0).sort(function(a, b) {\n    return a < b ? -1 : a > b ? 1 : 0;\n  }).slice(idx, idx + width));\n});\n","var _curry3 = require('./internal/_curry3');\n\n\n/**\n * Returns `true` if the specified object property satisfies the given\n * predicate; `false` otherwise.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category Logic\n * @sig (a -> Boolean) -> String -> {String: a} -> Boolean\n * @param {Function} pred\n * @param {String} name\n * @param {*} obj\n * @return {Boolean}\n * @see R.propEq, R.propIs\n * @example\n *\n *      R.propSatisfies(x => x > 0, 'x', {x: 1, y: 2}); //=> true\n */\nmodule.exports = _curry3(function propSatisfies(pred, name, obj) {\n  return pred(obj[name]);\n});\n","var _curry2 = require('./internal/_curry2');\nvar _dispatchable = require('./internal/_dispatchable');\nvar _xtakeWhile = require('./internal/_xtakeWhile');\n\n\n/**\n * Returns a new list containing the first `n` elements of a given list,\n * passing each value to the supplied predicate function, and terminating when\n * the predicate function returns `false`. Excludes the element that caused the\n * predicate function to fail. The predicate function is passed one argument:\n * *(value)*.\n *\n * Dispatches to the `takeWhile` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig (a -> Boolean) -> [a] -> [a]\n * @param {Function} fn The function called per iteration.\n * @param {Array} list The collection to iterate over.\n * @return {Array} A new array.\n * @see R.dropWhile, R.transduce, R.addIndex\n * @example\n *\n *      var isNotFour = x => x !== 4;\n *\n *      R.takeWhile(isNotFour, [1, 2, 3, 4, 3, 2, 1]); //=> [1, 2, 3]\n */\nmodule.exports = _curry2(_dispatchable(['takeWhile'], _xtakeWhile, function takeWhile(fn, list) {\n  var idx = 0;\n  var len = list.length;\n  while (idx < len && fn(list[idx])) {\n    idx += 1;\n  }\n  return Array.prototype.slice.call(list, 0, idx);\n}));\n","var _identity = require('./internal/_identity');\nvar chain = require('./chain');\n\n\n/**\n * Shorthand for `R.chain(R.identity)`, which removes one level of nesting from\n * any [Chain](https://github.com/fantasyland/fantasy-land#chain).\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category List\n * @sig Chain c => c (c a) -> c a\n * @param {*} list\n * @return {*}\n * @see R.flatten, R.chain\n * @example\n *\n *      R.unnest([1, [2], [[3]]]); //=> [1, 2, [3]]\n *      R.unnest([[1, 2], [3, 4], [5, 6]]); //=> [1, 2, 3, 4, 5, 6]\n */\nmodule.exports = chain(_identity);\n","var _curry2 = require('./internal/_curry2');\n\n\n/**\n * Takes two arguments, `fst` and `snd`, and returns `[fst, snd]`.\n *\n * @func\n * @memberOf R\n * @since v0.18.0\n * @category List\n * @sig a -> b -> (a,b)\n * @param {*} fst\n * @param {*} snd\n * @return {Array}\n * @see R.objOf, R.of\n * @example\n *\n *      R.pair('foo', 'bar'); //=> ['foo', 'bar']\n */\nmodule.exports = _curry2(function pair(fst, snd) { return [fst, snd]; });\n","var _curry2 = require('./_curry2');\nvar _xfBase = require('./_xfBase');\n\n\nmodule.exports = (function() {\n  function XDropWhile(f, xf) {\n    this.xf = xf;\n    this.f = f;\n  }\n  XDropWhile.prototype['@@transducer/init'] = _xfBase.init;\n  XDropWhile.prototype['@@transducer/result'] = _xfBase.result;\n  XDropWhile.prototype['@@transducer/step'] = function(result, input) {\n    if (this.f) {\n      if (this.f(input)) {\n        return result;\n      }\n      this.f = null;\n    }\n    return this.xf['@@transducer/step'](result, input);\n  };\n\n  return _curry2(function _xdropWhile(f, xf) { return new XDropWhile(f, xf); });\n}());\n","var _curry2 = require('./internal/_curry2');\n\n\n/**\n * Sorts a list according to a list of comparators.\n *\n * @func\n * @memberOf R\n * @since v0.23.0\n * @category Relation\n * @sig [a -> a -> Number] -> [a] -> [a]\n * @param {Array} functions A list of comparator functions.\n * @param {Array} list The list to sort.\n * @return {Array} A new list sorted according to the comarator functions.\n * @example\n *\n *      var alice = {\n *        name: 'alice',\n *        age: 40\n *      };\n *      var bob = {\n *        name: 'bob',\n *        age: 30\n *      };\n *      var clara = {\n *        name: 'clara',\n *        age: 40\n *      };\n *      var people = [clara, bob, alice];\n *      var ageNameSort = R.sortWith([\n *        R.descend(R.prop('age')),\n *        R.ascend(R.prop('name'))\n *      ]);\n *      ageNameSort(people); //=> [alice, clara, bob]\n */\nmodule.exports = _curry2(function sortWith(fns, list) {\n  return Array.prototype.slice.call(list, 0).sort(function(a, b) {\n    var result = 0;\n    var i = 0;\n    while (result === 0 && i < fns.length) {\n      result = fns[i](a, b);\n      i += 1;\n    }\n    return result;\n  });\n});\n","var filter = require('./filter');\nvar juxt = require('./juxt');\nvar reject = require('./reject');\n\n\n/**\n * Takes a predicate and a list or other `Filterable` object and returns the\n * pair of filterable objects of the same type of elements which do and do not\n * satisfy, the predicate, respectively. Filterable objects include plain objects or any object\n * that has a filter method such as `Array`.\n *\n * @func\n * @memberOf R\n * @since v0.1.4\n * @category List\n * @sig Filterable f => (a -> Boolean) -> f a -> [f a, f a]\n * @param {Function} pred A predicate to determine which side the element belongs to.\n * @param {Array} filterable the list (or other filterable) to partition.\n * @return {Array} An array, containing first the subset of elements that satisfy the\n *         predicate, and second the subset of elements that do not satisfy.\n * @see R.filter, R.reject\n * @example\n *\n *      R.partition(R.contains('s'), ['sss', 'ttt', 'foo', 'bars']);\n *      // => [ [ 'sss', 'bars' ],  [ 'ttt', 'foo' ] ]\n *\n *      R.partition(R.contains('s'), { a: 'sss', b: 'ttt', foo: 'bars' });\n *      // => [ { a: 'sss', foo: 'bars' }, { b: 'ttt' }  ]\n */\nmodule.exports = juxt([filter, reject]);\n","var _curry1 = require('./internal/_curry1');\nvar empty = require('./empty');\nvar equals = require('./equals');\n\n\n/**\n * Returns `true` if the given value is its type's empty value; `false`\n * otherwise.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Logic\n * @sig a -> Boolean\n * @param {*} x\n * @return {Boolean}\n * @see R.empty\n * @example\n *\n *      R.isEmpty([1, 2, 3]);   //=> false\n *      R.isEmpty([]);          //=> true\n *      R.isEmpty('');          //=> true\n *      R.isEmpty(null);        //=> false\n *      R.isEmpty({});          //=> true\n *      R.isEmpty({length: 0}); //=> false\n */\nmodule.exports = _curry1(function isEmpty(x) {\n  return x != null && equals(x, empty(x));\n});\n","var _curry2 = require('./internal/_curry2');\n\n\n/**\n * Wraps a function of any arity (including nullary) in a function that accepts\n * exactly `n` parameters. Any extraneous parameters will not be passed to the\n * supplied function.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig Number -> (* -> a) -> (* -> a)\n * @param {Number} n The desired arity of the new function.\n * @param {Function} fn The function to wrap.\n * @return {Function} A new function wrapping `fn`. The new function is guaranteed to be of\n *         arity `n`.\n * @see R.binary, R.unary\n * @example\n *\n *      var takesTwoArgs = (a, b) => [a, b];\n *\n *      takesTwoArgs.length; //=> 2\n *      takesTwoArgs(1, 2); //=> [1, 2]\n *\n *      var takesOneArg = R.nAry(1, takesTwoArgs);\n *      takesOneArg.length; //=> 1\n *      // Only `n` arguments are passed to the wrapped function\n *      takesOneArg(1, 2); //=> [1, undefined]\n * @symb R.nAry(0, f)(a, b) = f()\n * @symb R.nAry(1, f)(a, b) = f(a)\n * @symb R.nAry(2, f)(a, b) = f(a, b)\n */\nmodule.exports = _curry2(function nAry(n, fn) {\n  switch (n) {\n    case 0: return function() {return fn.call(this);};\n    case 1: return function(a0) {return fn.call(this, a0);};\n    case 2: return function(a0, a1) {return fn.call(this, a0, a1);};\n    case 3: return function(a0, a1, a2) {return fn.call(this, a0, a1, a2);};\n    case 4: return function(a0, a1, a2, a3) {return fn.call(this, a0, a1, a2, a3);};\n    case 5: return function(a0, a1, a2, a3, a4) {return fn.call(this, a0, a1, a2, a3, a4);};\n    case 6: return function(a0, a1, a2, a3, a4, a5) {return fn.call(this, a0, a1, a2, a3, a4, a5);};\n    case 7: return function(a0, a1, a2, a3, a4, a5, a6) {return fn.call(this, a0, a1, a2, a3, a4, a5, a6);};\n    case 8: return function(a0, a1, a2, a3, a4, a5, a6, a7) {return fn.call(this, a0, a1, a2, a3, a4, a5, a6, a7);};\n    case 9: return function(a0, a1, a2, a3, a4, a5, a6, a7, a8) {return fn.call(this, a0, a1, a2, a3, a4, a5, a6, a7, a8);};\n    case 10: return function(a0, a1, a2, a3, a4, a5, a6, a7, a8, a9) {return fn.call(this, a0, a1, a2, a3, a4, a5, a6, a7, a8, a9);};\n    default: throw new Error('First argument to nAry must be a non-negative integer no greater than ten');\n  }\n});\n","var add = require('./add');\n\n\n/**\n * Increments its argument.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Math\n * @sig Number -> Number\n * @param {Number} n\n * @return {Number} n + 1\n * @see R.dec\n * @example\n *\n *      R.inc(42); //=> 43\n */\nmodule.exports = add(1);\n","var _curry2 = require('./internal/_curry2');\nvar concat = require('./concat');\nvar difference = require('./difference');\n\n\n/**\n * Finds the set (i.e. no duplicates) of all elements contained in the first or\n * second list, but not both.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category Relation\n * @sig [*] -> [*] -> [*]\n * @param {Array} list1 The first list.\n * @param {Array} list2 The second list.\n * @return {Array} The elements in `list1` or `list2`, but not both.\n * @see R.symmetricDifferenceWith, R.difference, R.differenceWith\n * @example\n *\n *      R.symmetricDifference([1,2,3,4], [7,6,5,4,3]); //=> [1,2,7,6,5]\n *      R.symmetricDifference([7,6,5,4,3], [1,2,3,4]); //=> [7,6,5,1,2]\n */\nmodule.exports = _curry2(function symmetricDifference(list1, list2) {\n  return concat(difference(list1, list2), difference(list2, list1));\n});\n","var _curry2 = require('./internal/_curry2');\n\n\n/**\n * See if an object (`val`) is an instance of the supplied constructor. This\n * function will check up the inheritance chain, if any.\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category Type\n * @sig (* -> {*}) -> a -> Boolean\n * @param {Object} ctor A constructor\n * @param {*} val The value to test\n * @return {Boolean}\n * @example\n *\n *      R.is(Object, {}); //=> true\n *      R.is(Number, 1); //=> true\n *      R.is(Object, 1); //=> false\n *      R.is(String, 's'); //=> true\n *      R.is(String, new String('')); //=> true\n *      R.is(Object, new String('')); //=> true\n *      R.is(Object, 's'); //=> false\n *      R.is(Number, {}); //=> false\n */\nmodule.exports = _curry2(function is(Ctor, val) {\n  return val != null && val.constructor === Ctor || val instanceof Ctor;\n});\n","var _curry2 = require('./_curry2');\nvar _reduced = require('./_reduced');\nvar _xfBase = require('./_xfBase');\n\n\nmodule.exports = (function() {\n  function XFindIndex(f, xf) {\n    this.xf = xf;\n    this.f = f;\n    this.idx = -1;\n    this.found = false;\n  }\n  XFindIndex.prototype['@@transducer/init'] = _xfBase.init;\n  XFindIndex.prototype['@@transducer/result'] = function(result) {\n    if (!this.found) {\n      result = this.xf['@@transducer/step'](result, -1);\n    }\n    return this.xf['@@transducer/result'](result);\n  };\n  XFindIndex.prototype['@@transducer/step'] = function(result, input) {\n    this.idx += 1;\n    if (this.f(input)) {\n      this.found = true;\n      result = _reduced(this.xf['@@transducer/step'](result, this.idx));\n    }\n    return result;\n  };\n\n  return _curry2(function _xfindIndex(f, xf) { return new XFindIndex(f, xf); });\n}());\n","var _curry3 = require('./internal/_curry3');\n\n\n/**\n * Inserts the supplied element into the list, at the specified `index`. _Note that\n\n * this is not destructive_: it returns a copy of the list with the changes.\n * <small>No lists have been harmed in the application of this function.</small>\n *\n * @func\n * @memberOf R\n * @since v0.2.2\n * @category List\n * @sig Number -> a -> [a] -> [a]\n * @param {Number} index The position to insert the element\n * @param {*} elt The element to insert into the Array\n * @param {Array} list The list to insert into\n * @return {Array} A new Array with `elt` inserted at `index`.\n * @example\n *\n *      R.insert(2, 'x', [1,2,3,4]); //=> [1,2,'x',3,4]\n */\nmodule.exports = _curry3(function insert(idx, elt, list) {\n  idx = idx < list.length && idx >= 0 ? idx : list.length;\n  var result = Array.prototype.slice.call(list, 0);\n  result.splice(idx, 0, elt);\n  return result;\n});\n","var _curry2 = require('./internal/_curry2');\n\n\n/**\n * Adds two values.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Math\n * @sig Number -> Number -> Number\n * @param {Number} a\n * @param {Number} b\n * @return {Number}\n * @see R.subtract\n * @example\n *\n *      R.add(2, 3);       //=>  5\n *      R.add(7)(10);      //=> 17\n */\nmodule.exports = _curry2(function add(a, b) {\n  return Number(a) + Number(b);\n});\n","var _curry2 = require('./internal/_curry2');\n\n\n/**\n * Retrieve the value at a given path.\n *\n * @func\n * @memberOf R\n * @since v0.2.0\n * @category Object\n * @typedefn Idx = String | Int\n * @sig [Idx] -> {a} -> a | Undefined\n * @param {Array} path The path to use.\n * @param {Object} obj The object to retrieve the nested property from.\n * @return {*} The data at `path`.\n * @see R.prop\n * @example\n *\n *      R.path(['a', 'b'], {a: {b: 2}}); //=> 2\n *      R.path(['a', 'b'], {c: {b: 2}}); //=> undefined\n */\nmodule.exports = _curry2(function path(paths, obj) {\n  var val = obj;\n  var idx = 0;\n  while (idx < paths.length) {\n    if (val == null) {\n      return;\n    }\n    val = val[paths[idx]];\n    idx += 1;\n  }\n  return val;\n});\n","var _forceReduced = require('./_forceReduced');\nvar _isArrayLike = require('./_isArrayLike');\nvar _reduce = require('./_reduce');\nvar _xfBase = require('./_xfBase');\n\nmodule.exports = (function() {\n  var preservingReduced = function(xf) {\n    return {\n      '@@transducer/init': _xfBase.init,\n      '@@transducer/result': function(result) {\n        return xf['@@transducer/result'](result);\n      },\n      '@@transducer/step': function(result, input) {\n        var ret = xf['@@transducer/step'](result, input);\n        return ret['@@transducer/reduced'] ? _forceReduced(ret) : ret;\n      }\n    };\n  };\n\n  return function _xcat(xf) {\n    var rxf = preservingReduced(xf);\n    return {\n      '@@transducer/init': _xfBase.init,\n      '@@transducer/result': function(result) {\n        return rxf['@@transducer/result'](result);\n      },\n      '@@transducer/step': function(result, input) {\n        return !_isArrayLike(input) ? _reduce(rxf, result, [input]) : _reduce(rxf, result, input);\n      }\n    };\n  };\n}());\n","module.exports = (function() {\n  function XWrap(fn) {\n    this.f = fn;\n  }\n  XWrap.prototype['@@transducer/init'] = function() {\n    throw new Error('init not implemented on XWrap');\n  };\n  XWrap.prototype['@@transducer/result'] = function(acc) { return acc; };\n  XWrap.prototype['@@transducer/step'] = function(acc, x) {\n    return this.f(acc, x);\n  };\n\n  return function _xwrap(fn) { return new XWrap(fn); };\n}());\n","var _curry2 = require('./internal/_curry2');\n\n\n/**\n * Creates an object containing a single key:value pair.\n *\n * @func\n * @memberOf R\n * @since v0.18.0\n * @category Object\n * @sig String -> a -> {String:a}\n * @param {String} key\n * @param {*} val\n * @return {Object}\n * @see R.pair\n * @example\n *\n *      var matchPhrases = R.compose(\n *        R.objOf('must'),\n *        R.map(R.objOf('match_phrase'))\n *      );\n *      matchPhrases(['foo', 'bar', 'baz']); //=> {must: [{match_phrase: 'foo'}, {match_phrase: 'bar'}, {match_phrase: 'baz'}]}\n */\nmodule.exports = _curry2(function objOf(key, val) {\n  var obj = {};\n  obj[key] = val;\n  return obj;\n});\n","var _containsWith = require('./internal/_containsWith');\nvar _curry2 = require('./internal/_curry2');\n\n\n/**\n * Returns a new list containing only one copy of each element in the original\n * list, based upon the value returned by applying the supplied predicate to\n * two list elements. Prefers the first item if two items compare equal based\n * on the predicate.\n *\n * @func\n * @memberOf R\n * @since v0.2.0\n * @category List\n * @sig (a, a -> Boolean) -> [a] -> [a]\n * @param {Function} pred A predicate used to test whether two items are equal.\n * @param {Array} list The array to consider.\n * @return {Array} The list of unique items.\n * @example\n *\n *      var strEq = R.eqBy(String);\n *      R.uniqWith(strEq)([1, '1', 2, 1]); //=> [1, 2]\n *      R.uniqWith(strEq)([{}, {}]);       //=> [{}]\n *      R.uniqWith(strEq)([1, '1', 1]);    //=> [1]\n *      R.uniqWith(strEq)(['1', 1, 1]);    //=> ['1']\n */\nmodule.exports = _curry2(function uniqWith(pred, list) {\n  var idx = 0;\n  var len = list.length;\n  var result = [];\n  var item;\n  while (idx < len) {\n    item = list[idx];\n    if (!_containsWith(pred, item, result)) {\n      result[result.length] = item;\n    }\n    idx += 1;\n  }\n  return result;\n});\n","var _curry2 = require('./internal/_curry2');\nvar map = require('./map');\n\n\n/**\n * Returns a lens for the given getter and setter functions. The getter \"gets\"\n * the value of the focus; the setter \"sets\" the value of the focus. The setter\n * should not mutate the data structure.\n *\n * @func\n * @memberOf R\n * @since v0.8.0\n * @category Object\n * @typedefn Lens s a = Functor f => (a -> f a) -> s -> f s\n * @sig (s -> a) -> ((a, s) -> s) -> Lens s a\n * @param {Function} getter\n * @param {Function} setter\n * @return {Lens}\n * @see R.view, R.set, R.over, R.lensIndex, R.lensProp\n * @example\n *\n *      var xLens = R.lens(R.prop('x'), R.assoc('x'));\n *\n *      R.view(xLens, {x: 1, y: 2});            //=> 1\n *      R.set(xLens, 4, {x: 1, y: 2});          //=> {x: 4, y: 2}\n *      R.over(xLens, R.negate, {x: 1, y: 2});  //=> {x: -1, y: 2}\n */\nmodule.exports = _curry2(function lens(getter, setter) {\n  return function(toFunctorFn) {\n    return function(target) {\n      return map(\n        function(focus) {\n          return setter(focus, target);\n        },\n        toFunctorFn(getter(target))\n      );\n    };\n  };\n});\n","var _curry2 = require('./internal/_curry2');\n\n\n/**\n * Creates a new list out of the two supplied by pairing up equally-positioned\n * items from both lists. The returned list is truncated to the length of the\n * shorter of the two input lists.\n * Note: `zip` is equivalent to `zipWith(function(a, b) { return [a, b] })`.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig [a] -> [b] -> [[a,b]]\n * @param {Array} list1 The first array to consider.\n * @param {Array} list2 The second array to consider.\n * @return {Array} The list made by pairing up same-indexed elements of `list1` and `list2`.\n * @example\n *\n *      R.zip([1, 2, 3], ['a', 'b', 'c']); //=> [[1, 'a'], [2, 'b'], [3, 'c']]\n * @symb R.zip([a, b, c], [d, e, f]) = [[a, d], [b, e], [c, f]]\n */\nmodule.exports = _curry2(function zip(a, b) {\n  var rv = [];\n  var idx = 0;\n  var len = Math.min(a.length, b.length);\n  while (idx < len) {\n    rv[idx] = [a[idx], b[idx]];\n    idx += 1;\n  }\n  return rv;\n});\n","module.exports = function _containsWith(pred, x, list) {\n  var idx = 0;\n  var len = list.length;\n\n  while (idx < len) {\n    if (pred(x, list[idx])) {\n      return true;\n    }\n    idx += 1;\n  }\n  return false;\n};\n","var _curry3 = require('./internal/_curry3');\n\n/**\n * Restricts a number to be within a range.\n *\n * Also works for other ordered types such as Strings and Dates.\n *\n * @func\n * @memberOf R\n * @since v0.20.0\n * @category Relation\n * @sig Ord a => a -> a -> a -> a\n * @param {Number} minimum The lower limit of the clamp (inclusive)\n * @param {Number} maximum The upper limit of the clamp (inclusive)\n * @param {Number} value Value to be clamped\n * @return {Number} Returns `minimum` when `val < minimum`, `maximum` when `val > maximum`, returns `val` otherwise\n * @example\n *\n *      R.clamp(1, 10, -5) // => 1\n *      R.clamp(1, 10, 15) // => 10\n *      R.clamp(1, 10, 4)  // => 4\n */\nmodule.exports = _curry3(function clamp(min, max, value) {\n  if (min > max) {\n    throw new Error('min must not be greater than max in clamp(min, max, value)');\n  }\n  return value < min ? min :\n         value > max ? max :\n         value;\n});\n","var _curry2 = require('./internal/_curry2');\n\n\n/**\n * Creates a new list out of the two supplied by creating each possible pair\n * from the lists.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig [a] -> [b] -> [[a,b]]\n * @param {Array} as The first list.\n * @param {Array} bs The second list.\n * @return {Array} The list made by combining each possible pair from\n *         `as` and `bs` into pairs (`[a, b]`).\n * @example\n *\n *      R.xprod([1, 2], ['a', 'b']); //=> [[1, 'a'], [1, 'b'], [2, 'a'], [2, 'b']]\n * @symb R.xprod([a, b], [c, d]) = [[a, c], [a, d], [b, c], [b, d]]\n */\nmodule.exports = _curry2(function xprod(a, b) { // = xprodWith(prepend); (takes about 3 times as long...)\n  var idx = 0;\n  var ilen = a.length;\n  var j;\n  var jlen = b.length;\n  var result = [];\n  while (idx < ilen) {\n    j = 0;\n    while (j < jlen) {\n      result[result.length] = [a[idx], b[j]];\n      j += 1;\n    }\n    idx += 1;\n  }\n  return result;\n});\n","var _concat = require('./internal/_concat');\nvar _curry2 = require('./internal/_curry2');\nvar compose = require('./compose');\nvar uniq = require('./uniq');\n\n\n/**\n * Combines two lists into a set (i.e. no duplicates) composed of the elements\n * of each list.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig [*] -> [*] -> [*]\n * @param {Array} as The first list.\n * @param {Array} bs The second list.\n * @return {Array} The first and second lists concatenated, with\n *         duplicates removed.\n * @example\n *\n *      R.union([1, 2, 3], [2, 3, 4]); //=> [1, 2, 3, 4]\n */\nmodule.exports = _curry2(compose(uniq, _concat));\n","var _curry1 = require('./internal/_curry1');\nvar nAry = require('./nAry');\n\n\n/**\n * Wraps a function of any arity (including nullary) in a function that accepts\n * exactly 1 parameter. Any extraneous parameters will not be passed to the\n * supplied function.\n *\n * @func\n * @memberOf R\n * @since v0.2.0\n * @category Function\n * @sig (* -> b) -> (a -> b)\n * @param {Function} fn The function to wrap.\n * @return {Function} A new function wrapping `fn`. The new function is guaranteed to be of\n *         arity 1.\n * @see R.binary, R.nAry\n * @example\n *\n *      var takesTwoArgs = function(a, b) {\n *        return [a, b];\n *      };\n *      takesTwoArgs.length; //=> 2\n *      takesTwoArgs(1, 2); //=> [1, 2]\n *\n *      var takesOneArg = R.unary(takesTwoArgs);\n *      takesOneArg.length; //=> 1\n *      // Only 1 argument is passed to the wrapped function\n *      takesOneArg(1, 2); //=> [1, undefined]\n * @symb R.unary(f)(a, b, c) = f(a)\n */\nmodule.exports = _curry1(function unary(fn) {\n  return nAry(1, fn);\n});\n","var _arity = require('./_arity');\nvar _curry2 = require('./_curry2');\n\n\nmodule.exports = function _createPartialApplicator(concat) {\n  return _curry2(function(fn, args) {\n    return _arity(Math.max(0, fn.length - args.length), function() {\n      return fn.apply(this, concat(args, arguments));\n    });\n  });\n};\n","var _curry2 = require('./internal/_curry2');\nvar _map = require('./internal/_map');\nvar curryN = require('./curryN');\nvar max = require('./max');\nvar pluck = require('./pluck');\nvar reduce = require('./reduce');\n\n\n/**\n * Accepts a converging function and a list of branching functions and returns\n * a new function. When invoked, this new function is applied to some\n * arguments, each branching function is applied to those same arguments. The\n * results of each branching function are passed as arguments to the converging\n * function to produce the return value.\n *\n * @func\n * @memberOf R\n * @since v0.4.2\n * @category Function\n * @sig (x1 -> x2 -> ... -> z) -> [(a -> b -> ... -> x1), (a -> b -> ... -> x2), ...] -> (a -> b -> ... -> z)\n * @param {Function} after A function. `after` will be invoked with the return values of\n *        `fn1` and `fn2` as its arguments.\n * @param {Array} functions A list of functions.\n * @return {Function} A new function.\n * @see R.useWith\n * @example\n *\n *      var average = R.converge(R.divide, [R.sum, R.length])\n *      average([1, 2, 3, 4, 5, 6, 7]) //=> 4\n *\n *      var strangeConcat = R.converge(R.concat, [R.toUpper, R.toLower])\n *      strangeConcat(\"Yodel\") //=> \"YODELyodel\"\n *\n * @symb R.converge(f, [g, h])(a, b) = f(g(a, b), h(a, b))\n */\nmodule.exports = _curry2(function converge(after, fns) {\n  return curryN(reduce(max, 0, pluck('length', fns)), function() {\n    var args = arguments;\n    var context = this;\n    return after.apply(context, _map(function(fn) {\n      return fn.apply(context, args);\n    }, fns));\n  });\n});\n","var _curry3 = require('./internal/_curry3');\nvar curryN = require('./curryN');\n\n\n/**\n * Creates a function that will process either the `onTrue` or the `onFalse`\n * function depending upon the result of the `condition` predicate.\n *\n * @func\n * @memberOf R\n * @since v0.8.0\n * @category Logic\n * @sig (*... -> Boolean) -> (*... -> *) -> (*... -> *) -> (*... -> *)\n * @param {Function} condition A predicate function\n * @param {Function} onTrue A function to invoke when the `condition` evaluates to a truthy value.\n * @param {Function} onFalse A function to invoke when the `condition` evaluates to a falsy value.\n * @return {Function} A new unary function that will process either the `onTrue` or the `onFalse`\n *                    function depending upon the result of the `condition` predicate.\n * @see R.unless, R.when\n * @example\n *\n *      var incCount = R.ifElse(\n *        R.has('count'),\n *        R.over(R.lensProp('count'), R.inc),\n *        R.assoc('count', 1)\n *      );\n *      incCount({});           //=> { count: 1 }\n *      incCount({ count: 1 }); //=> { count: 2 }\n */\nmodule.exports = _curry3(function ifElse(condition, onTrue, onFalse) {\n  return curryN(Math.max(condition.length, onTrue.length, onFalse.length),\n    function _ifElse() {\n      return condition.apply(this, arguments) ? onTrue.apply(this, arguments) : onFalse.apply(this, arguments);\n    }\n  );\n});\n","var _curry3 = require('./internal/_curry3');\n\n\n/**\n * Takes a function and two values, and returns whichever value produces the\n * smaller result when passed to the provided function.\n *\n * @func\n * @memberOf R\n * @since v0.8.0\n * @category Relation\n * @sig Ord b => (a -> b) -> a -> a -> a\n * @param {Function} f\n * @param {*} a\n * @param {*} b\n * @return {*}\n * @see R.min, R.maxBy\n * @example\n *\n *      //  square :: Number -> Number\n *      var square = n => n * n;\n *\n *      R.minBy(square, -3, 2); //=> 2\n *\n *      R.reduce(R.minBy(square), Infinity, [3, -5, 4, 1, -2]); //=> 1\n *      R.reduce(R.minBy(square), Infinity, []); //=> Infinity\n */\nmodule.exports = _curry3(function minBy(f, a, b) {\n  return f(b) < f(a) ? b : a;\n});\n","var _curry1 = require('./internal/_curry1');\n\n\n/**\n * Gives a single-word string description of the (native) type of a value,\n * returning such answers as 'Object', 'Number', 'Array', or 'Null'. Does not\n * attempt to distinguish user Object types any further, reporting them all as\n * 'Object'.\n *\n * @func\n * @memberOf R\n * @since v0.8.0\n * @category Type\n * @sig (* -> {*}) -> String\n * @param {*} val The value to test\n * @return {String}\n * @example\n *\n *      R.type({}); //=> \"Object\"\n *      R.type(1); //=> \"Number\"\n *      R.type(false); //=> \"Boolean\"\n *      R.type('s'); //=> \"String\"\n *      R.type(null); //=> \"Null\"\n *      R.type([]); //=> \"Array\"\n *      R.type(/[A-z]/); //=> \"RegExp\"\n *      R.type(() => {}); //=> \"Function\"\n */\nmodule.exports = _curry1(function type(val) {\n  return val === null      ? 'Null'      :\n         val === undefined ? 'Undefined' :\n         Object.prototype.toString.call(val).slice(8, -1);\n});\n","var _concat = require('./internal/_concat');\nvar _curry3 = require('./internal/_curry3');\nvar uniqWith = require('./uniqWith');\n\n\n/**\n * Combines two lists into a set (i.e. no duplicates) composed of the elements\n * of each list. Duplication is determined according to the value returned by\n * applying the supplied predicate to two list elements.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig (a -> a -> Boolean) -> [*] -> [*] -> [*]\n * @param {Function} pred A predicate used to test whether two items are equal.\n * @param {Array} list1 The first list.\n * @param {Array} list2 The second list.\n * @return {Array} The first and second lists concatenated, with\n *         duplicates removed.\n * @see R.union\n * @example\n *\n *      var l1 = [{a: 1}, {a: 2}];\n *      var l2 = [{a: 1}, {a: 4}];\n *      R.unionWith(R.eqBy(R.prop('a')), l1, l2); //=> [{a: 1}, {a: 2}, {a: 4}]\n */\nmodule.exports = _curry3(function unionWith(pred, list1, list2) {\n  return uniqWith(pred, _concat(list1, list2));\n});\n","var _curry2 = require('./internal/_curry2');\nvar _dispatchable = require('./internal/_dispatchable');\nvar _xtake = require('./internal/_xtake');\nvar slice = require('./slice');\n\n\n/**\n * Returns the first `n` elements of the given list, string, or\n * transducer/transformer (or object with a `take` method).\n *\n * Dispatches to the `take` method of the second argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Number -> [a] -> [a]\n * @sig Number -> String -> String\n * @param {Number} n\n * @param {*} list\n * @return {*}\n * @see R.drop\n * @example\n *\n *      R.take(1, ['foo', 'bar', 'baz']); //=> ['foo']\n *      R.take(2, ['foo', 'bar', 'baz']); //=> ['foo', 'bar']\n *      R.take(3, ['foo', 'bar', 'baz']); //=> ['foo', 'bar', 'baz']\n *      R.take(4, ['foo', 'bar', 'baz']); //=> ['foo', 'bar', 'baz']\n *      R.take(3, 'ramda');               //=> 'ram'\n *\n *      var personnel = [\n *        'Dave Brubeck',\n *        'Paul Desmond',\n *        'Eugene Wright',\n *        'Joe Morello',\n *        'Gerry Mulligan',\n *        'Bob Bates',\n *        'Joe Dodge',\n *        'Ron Crotty'\n *      ];\n *\n *      var takeFive = R.take(5);\n *      takeFive(personnel);\n *      //=> ['Dave Brubeck', 'Paul Desmond', 'Eugene Wright', 'Joe Morello', 'Gerry Mulligan']\n * @symb R.take(-1, [a, b]) = [a, b]\n * @symb R.take(0, [a, b]) = []\n * @symb R.take(1, [a, b]) = [a]\n * @symb R.take(2, [a, b]) = [a, b]\n */\nmodule.exports = _curry2(_dispatchable(['take'], _xtake, function take(n, xs) {\n  return slice(0, n < 0 ? Infinity : n, xs);\n}));\n","var _curry3 = require('./internal/_curry3');\n\n\n/**\n * Returns the result of \"setting\" the portion of the given data structure\n * focused by the given lens to the result of applying the given function to\n * the focused value.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category Object\n * @typedefn Lens s a = Functor f => (a -> f a) -> s -> f s\n * @sig Lens s a -> (a -> a) -> s -> s\n * @param {Lens} lens\n * @param {*} v\n * @param {*} x\n * @return {*}\n * @see R.prop, R.lensIndex, R.lensProp\n * @example\n *\n *      var headLens = R.lensIndex(0);\n *\n *      R.over(headLens, R.toUpper, ['foo', 'bar', 'baz']); //=> ['FOO', 'bar', 'baz']\n */\nmodule.exports = (function() {\n  // `Identity` is a functor that holds a single value, where `map` simply\n  // transforms the held value with the provided function.\n  var Identity = function(x) {\n    return {value: x, map: function(f) { return Identity(f(x)); }};\n  };\n\n  return _curry3(function over(lens, f, x) {\n    // The value returned by the getter function is first transformed with `f`,\n    // then set as the value of an `Identity`. This is then mapped over with the\n    // setter function of the lens.\n    return lens(function(y) { return Identity(f(y)); })(x).value;\n  });\n}());\n","var _concat = require('./internal/_concat');\nvar _curry3 = require('./internal/_curry3');\n\n\n/**\n * Applies a function to the value at the given index of an array, returning a\n * new copy of the array with the element at the given index replaced with the\n * result of the function application.\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category List\n * @sig (a -> a) -> Number -> [a] -> [a]\n * @param {Function} fn The function to apply.\n * @param {Number} idx The index.\n * @param {Array|Arguments} list An array-like object whose value\n *        at the supplied index will be replaced.\n * @return {Array} A copy of the supplied array-like object with\n *         the element at index `idx` replaced with the value\n *         returned by applying `fn` to the existing element.\n * @see R.update\n * @example\n *\n *      R.adjust(R.add(10), 1, [1, 2, 3]);     //=> [1, 12, 3]\n *      R.adjust(R.add(10))(1)([1, 2, 3]);     //=> [1, 12, 3]\n * @symb R.adjust(f, -1, [a, b]) = [a, f(b)]\n * @symb R.adjust(f, 0, [a, b]) = [f(a), b]\n */\nmodule.exports = _curry3(function adjust(fn, idx, list) {\n  if (idx >= list.length || idx < -list.length) {\n    return list;\n  }\n  var start = idx < 0 ? list.length : 0;\n  var _idx = start + idx;\n  var _list = _concat(list);\n  _list[_idx] = fn(list[_idx]);\n  return _list;\n});\n","var _curry2 = require('./internal/_curry2');\nvar _dispatchable = require('./internal/_dispatchable');\nvar _xfindLast = require('./internal/_xfindLast');\n\n\n/**\n * Returns the last element of the list which matches the predicate, or\n * `undefined` if no element matches.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.1\n * @category List\n * @sig (a -> Boolean) -> [a] -> a | undefined\n * @param {Function} fn The predicate function used to determine if the element is the\n * desired one.\n * @param {Array} list The array to consider.\n * @return {Object} The element found, or `undefined`.\n * @see R.transduce\n * @example\n *\n *      var xs = [{a: 1, b: 0}, {a:1, b: 1}];\n *      R.findLast(R.propEq('a', 1))(xs); //=> {a: 1, b: 1}\n *      R.findLast(R.propEq('a', 4))(xs); //=> undefined\n */\nmodule.exports = _curry2(_dispatchable([], _xfindLast, function findLast(fn, list) {\n  var idx = list.length - 1;\n  while (idx >= 0) {\n    if (fn(list[idx])) {\n      return list[idx];\n    }\n    idx -= 1;\n  }\n}));\n","var _curry2 = require('./internal/_curry2');\n\n\n/**\n * Returns `true` if the first argument is less than the second; `false`\n * otherwise.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig Ord a => a -> a -> Boolean\n * @param {*} a\n * @param {*} b\n * @return {Boolean}\n * @see R.gt\n * @example\n *\n *      R.lt(2, 1); //=> false\n *      R.lt(2, 2); //=> false\n *      R.lt(2, 3); //=> true\n *      R.lt('a', 'z'); //=> true\n *      R.lt('z', 'a'); //=> false\n */\nmodule.exports = _curry2(function lt(a, b) { return a < b; });\n","var _cloneRegExp = require('./internal/_cloneRegExp');\nvar _curry2 = require('./internal/_curry2');\nvar _isRegExp = require('./internal/_isRegExp');\nvar toString = require('./toString');\n\n\n/**\n * Determines whether a given string matches a given regular expression.\n *\n * @func\n * @memberOf R\n * @since v0.12.0\n * @category String\n * @sig RegExp -> String -> Boolean\n * @param {RegExp} pattern\n * @param {String} str\n * @return {Boolean}\n * @see R.match\n * @example\n *\n *      R.test(/^x/, 'xyz'); //=> true\n *      R.test(/^y/, 'xyz'); //=> false\n */\nmodule.exports = _curry2(function test(pattern, str) {\n  if (!_isRegExp(pattern)) {\n    throw new TypeError('‘test’ requires a value of type RegExp as its first argument; received ' + toString(pattern));\n  }\n  return _cloneRegExp(pattern).test(str);\n});\n","var _curry2 = require('./internal/_curry2');\nvar _isString = require('./internal/_isString');\n\n\n/**\n * Returns the nth element of the given list or string. If n is negative the\n * element at index length + n is returned.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Number -> [a] -> a | Undefined\n * @sig Number -> String -> String\n * @param {Number} offset\n * @param {*} list\n * @return {*}\n * @example\n *\n *      var list = ['foo', 'bar', 'baz', 'quux'];\n *      R.nth(1, list); //=> 'bar'\n *      R.nth(-1, list); //=> 'quux'\n *      R.nth(-99, list); //=> undefined\n *\n *      R.nth(2, 'abc'); //=> 'c'\n *      R.nth(3, 'abc'); //=> ''\n * @symb R.nth(-1, [a, b, c]) = c\n * @symb R.nth(0, [a, b, c]) = a\n * @symb R.nth(1, [a, b, c]) = b\n */\nmodule.exports = _curry2(function nth(offset, list) {\n  var idx = offset < 0 ? list.length + offset : offset;\n  return _isString(list) ? list.charAt(idx) : list[idx];\n});\n","var _curry1 = require('./internal/_curry1');\nvar _isString = require('./internal/_isString');\n\n\n/**\n * Returns a new list or string with the elements or characters in reverse\n * order.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig [a] -> [a]\n * @sig String -> String\n * @param {Array|String} list\n * @return {Array|String}\n * @example\n *\n *      R.reverse([1, 2, 3]);  //=> [3, 2, 1]\n *      R.reverse([1, 2]);     //=> [2, 1]\n *      R.reverse([1]);        //=> [1]\n *      R.reverse([]);         //=> []\n *\n *      R.reverse('abc');      //=> 'cba'\n *      R.reverse('ab');       //=> 'ba'\n *      R.reverse('a');        //=> 'a'\n *      R.reverse('');         //=> ''\n */\nmodule.exports = _curry1(function reverse(list) {\n  return _isString(list) ? list.split('').reverse().join('') :\n                           Array.prototype.slice.call(list, 0).reverse();\n});\n","var _arity = require('./internal/_arity');\nvar _pipeP = require('./internal/_pipeP');\nvar reduce = require('./reduce');\nvar tail = require('./tail');\n\n\n/**\n * Performs left-to-right composition of one or more Promise-returning\n * functions. The leftmost function may have any arity; the remaining functions\n * must be unary.\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category Function\n * @sig ((a -> Promise b), (b -> Promise c), ..., (y -> Promise z)) -> (a -> Promise z)\n * @param {...Function} functions\n * @return {Function}\n * @see R.composeP\n * @example\n *\n *      //  followersForUser :: String -> Promise [User]\n *      var followersForUser = R.pipeP(db.getUserById, db.getFollowers);\n */\nmodule.exports = function pipeP() {\n  if (arguments.length === 0) {\n    throw new Error('pipeP requires at least one argument');\n  }\n  return _arity(arguments[0].length,\n                reduce(_pipeP, arguments[0], tail(arguments)));\n};\n","var _curry1 = require('./internal/_curry1');\nvar _toString = require('./internal/_toString');\n\n\n/**\n * Returns the string representation of the given value. `eval`'ing the output\n * should result in a value equivalent to the input value. Many of the built-in\n * `toString` methods do not satisfy this requirement.\n *\n * If the given value is an `[object Object]` with a `toString` method other\n * than `Object.prototype.toString`, this method is invoked with no arguments\n * to produce the return value. This means user-defined constructor functions\n * can provide a suitable `toString` method. For example:\n *\n *     function Point(x, y) {\n *       this.x = x;\n *       this.y = y;\n *     }\n *\n *     Point.prototype.toString = function() {\n *       return 'new Point(' + this.x + ', ' + this.y + ')';\n *     };\n *\n *     R.toString(new Point(1, 2)); //=> 'new Point(1, 2)'\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category String\n * @sig * -> String\n * @param {*} val\n * @return {String}\n * @example\n *\n *      R.toString(42); //=> '42'\n *      R.toString('abc'); //=> '\"abc\"'\n *      R.toString([1, 2, 3]); //=> '[1, 2, 3]'\n *      R.toString({foo: 1, bar: 2, baz: 3}); //=> '{\"bar\": 2, \"baz\": 3, \"foo\": 1}'\n *      R.toString(new Date('2001-02-03T04:05:06Z')); //=> 'new Date(\"2001-02-03T04:05:06.000Z\")'\n */\nmodule.exports = _curry1(function toString(val) { return _toString(val, []); });\n","var multiply = require('./multiply');\nvar reduce = require('./reduce');\n\n\n/**\n * Multiplies together all the elements of a list.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Math\n * @sig [Number] -> Number\n * @param {Array} list An array of numbers\n * @return {Number} The product of all the numbers in the list.\n * @see R.reduce\n * @example\n *\n *      R.product([2,4,6,8,100,1]); //=> 38400\n */\nmodule.exports = reduce(multiply, 1);\n","var _curry2 = require('./internal/_curry2');\nvar _dispatchable = require('./internal/_dispatchable');\nvar _xany = require('./internal/_xany');\n\n\n/**\n * Returns `true` if at least one of elements of the list match the predicate,\n * `false` otherwise.\n *\n * Dispatches to the `any` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig (a -> Boolean) -> [a] -> Boolean\n * @param {Function} fn The predicate function.\n * @param {Array} list The array to consider.\n * @return {Boolean} `true` if the predicate is satisfied by at least one element, `false`\n *         otherwise.\n * @see R.all, R.none, R.transduce\n * @example\n *\n *      var lessThan0 = R.flip(R.lt)(0);\n *      var lessThan2 = R.flip(R.lt)(2);\n *      R.any(lessThan0)([1, 2]); //=> false\n *      R.any(lessThan2)([1, 2]); //=> true\n */\nmodule.exports = _curry2(_dispatchable(['any'], _xany, function any(fn, list) {\n  var idx = 0;\n  while (idx < list.length) {\n    if (fn(list[idx])) {\n      return true;\n    }\n    idx += 1;\n  }\n  return false;\n}));\n","var _curry3 = require('./internal/_curry3');\nvar concat = require('./concat');\nvar differenceWith = require('./differenceWith');\n\n\n/**\n * Finds the set (i.e. no duplicates) of all elements contained in the first or\n * second list, but not both. Duplication is determined according to the value\n * returned by applying the supplied predicate to two list elements.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category Relation\n * @sig ((a, a) -> Boolean) -> [a] -> [a] -> [a]\n * @param {Function} pred A predicate used to test whether two items are equal.\n * @param {Array} list1 The first list.\n * @param {Array} list2 The second list.\n * @return {Array} The elements in `list1` or `list2`, but not both.\n * @see R.symmetricDifference, R.difference, R.differenceWith\n * @example\n *\n *      var eqA = R.eqBy(R.prop('a'));\n *      var l1 = [{a: 1}, {a: 2}, {a: 3}, {a: 4}];\n *      var l2 = [{a: 3}, {a: 4}, {a: 5}, {a: 6}];\n *      R.symmetricDifferenceWith(eqA, l1, l2); //=> [{a: 1}, {a: 2}, {a: 5}, {a: 6}]\n */\nmodule.exports = _curry3(function symmetricDifferenceWith(pred, list1, list2) {\n  return concat(differenceWith(pred, list1, list2), differenceWith(pred, list2, list1));\n});\n","var _clone = require('./internal/_clone');\nvar _curry3 = require('./internal/_curry3');\nvar _isTransformer = require('./internal/_isTransformer');\nvar _reduce = require('./internal/_reduce');\nvar _stepCat = require('./internal/_stepCat');\n\n\n/**\n * Transforms the items of the list with the transducer and appends the\n * transformed items to the accumulator using an appropriate iterator function\n * based on the accumulator type.\n *\n * The accumulator can be an array, string, object or a transformer. Iterated\n * items will be appended to arrays and concatenated to strings. Objects will\n * be merged directly or 2-item arrays will be merged as key, value pairs.\n *\n * The accumulator can also be a transformer object that provides a 2-arity\n * reducing iterator function, step, 0-arity initial value function, init, and\n * 1-arity result extraction function result. The step function is used as the\n * iterator function in reduce. The result function is used to convert the\n * final accumulator into the return type and in most cases is R.identity. The\n * init function is used to provide the initial accumulator.\n *\n * The iteration is performed with [`R.reduce`](#reduce) after initializing the\n * transducer.\n *\n * @func\n * @memberOf R\n * @since v0.12.0\n * @category List\n * @sig a -> (b -> b) -> [c] -> a\n * @param {*} acc The initial accumulator value.\n * @param {Function} xf The transducer function. Receives a transformer and returns a transformer.\n * @param {Array} list The list to iterate over.\n * @return {*} The final, accumulated value.\n * @example\n *\n *      var numbers = [1, 2, 3, 4];\n *      var transducer = R.compose(R.map(R.add(1)), R.take(2));\n *\n *      R.into([], transducer, numbers); //=> [2, 3]\n *\n *      var intoArray = R.into([]);\n *      intoArray(transducer, numbers); //=> [2, 3]\n */\nmodule.exports = _curry3(function into(acc, xf, list) {\n  return _isTransformer(acc) ?\n    _reduce(xf(acc), acc['@@transducer/init'](), list) :\n    _reduce(xf(_stepCat(acc)), _clone(acc, [], [], false), list);\n});\n","var lift = require('./lift');\nvar not = require('./not');\n\n\n/**\n * Takes a function `f` and returns a function `g` such that if called with the same arguments\n * when `f` returns a \"truthy\" value, `g` returns `false` and when `f` returns a \"falsy\" value `g` returns `true`.\n *\n * `R.complement` may be applied to any functor\n *\n * @func\n * @memberOf R\n * @since v0.12.0\n * @category Logic\n * @sig (*... -> *) -> (*... -> Boolean)\n * @param {Function} f\n * @return {Function}\n * @see R.not\n * @example\n *\n *      var isNotNil = R.complement(R.isNil);\n *      isNil(null); //=> true\n *      isNotNil(null); //=> false\n *      isNil(7); //=> false\n *      isNotNil(7); //=> true\n */\nmodule.exports = lift(not);\n","var _contains = require('./internal/_contains');\nvar _curry2 = require('./internal/_curry2');\n\n\n/**\n * Finds the set (i.e. no duplicates) of all elements in the first list not\n * contained in the second list. Objects and Arrays are compared in terms of\n * value equality, not reference equality.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig [*] -> [*] -> [*]\n * @param {Array} list1 The first list.\n * @param {Array} list2 The second list.\n * @return {Array} The elements in `list1` that are not in `list2`.\n * @see R.differenceWith, R.symmetricDifference, R.symmetricDifferenceWith, R.without\n * @example\n *\n *      R.difference([1,2,3,4], [7,6,5,4,3]); //=> [1,2]\n *      R.difference([7,6,5,4,3], [1,2,3,4]); //=> [7,6,5]\n *      R.difference([{a: 1}, {b: 2}], [{a: 1}, {c: 3}]) //=> [{b: 2}]\n */\nmodule.exports = _curry2(function difference(first, second) {\n  var out = [];\n  var idx = 0;\n  var firstLen = first.length;\n  while (idx < firstLen) {\n    if (!_contains(first[idx], second) && !_contains(first[idx], out)) {\n      out[out.length] = first[idx];\n    }\n    idx += 1;\n  }\n  return out;\n});\n","var nth = require('./nth');\n\n\n/**\n * Returns the first element of the given list or string. In some libraries\n * this function is named `first`.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig [a] -> a | Undefined\n * @sig String -> String\n * @param {Array|String} list\n * @return {*}\n * @see R.tail, R.init, R.last\n * @example\n *\n *      R.head(['fi', 'fo', 'fum']); //=> 'fi'\n *      R.head([]); //=> undefined\n *\n *      R.head('abc'); //=> 'a'\n *      R.head(''); //=> ''\n */\nmodule.exports = nth(0);\n","var _curry3 = require('./internal/_curry3');\nvar _reduce = require('./internal/_reduce');\n\n\n/**\n * Returns a single item by iterating through the list, successively calling\n * the iterator function and passing it an accumulator value and the current\n * value from the array, and then passing the result to the next call.\n *\n * The iterator function receives two values: *(acc, value)*. It may use\n * [`R.reduced`](#reduced) to shortcut the iteration.\n *\n * The arguments' order of [`reduceRight`](#reduceRight)'s iterator function\n * is *(value, acc)*.\n *\n * Note: `R.reduce` does not skip deleted or unassigned indices (sparse\n * arrays), unlike the native `Array.prototype.reduce` method. For more details\n * on this behavior, see:\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce#Description\n *\n * Dispatches to the `reduce` method of the third argument, if present. When\n * doing so, it is up to the user to handle the [`R.reduced`](#reduced)\n * shortcuting, as this is not implemented by `reduce`.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig ((a, b) -> a) -> a -> [b] -> a\n * @param {Function} fn The iterator function. Receives two values, the accumulator and the\n *        current element from the array.\n * @param {*} acc The accumulator value.\n * @param {Array} list The list to iterate over.\n * @return {*} The final, accumulated value.\n * @see R.reduced, R.addIndex, R.reduceRight\n * @example\n *\n *      R.reduce(R.subtract, 0, [1, 2, 3, 4]) // => ((((0 - 1) - 2) - 3) - 4) = -10\n *                -               -10\n *               / \\              / \\\n *              -   4           -6   4\n *             / \\              / \\\n *            -   3   ==>     -3   3\n *           / \\              / \\\n *          -   2           -1   2\n *         / \\              / \\\n *        0   1            0   1\n *\n * @symb R.reduce(f, a, [b, c, d]) = f(f(f(a, b), c), d)\n */\nmodule.exports = _curry3(_reduce);\n","module.exports = {\n  F: require('./src/F'),\n  T: require('./src/T'),\n  __: require('./src/__'),\n  add: require('./src/add'),\n  addIndex: require('./src/addIndex'),\n  adjust: require('./src/adjust'),\n  all: require('./src/all'),\n  allPass: require('./src/allPass'),\n  always: require('./src/always'),\n  and: require('./src/and'),\n  any: require('./src/any'),\n  anyPass: require('./src/anyPass'),\n  ap: require('./src/ap'),\n  aperture: require('./src/aperture'),\n  append: require('./src/append'),\n  apply: require('./src/apply'),\n  applySpec: require('./src/applySpec'),\n  ascend: require('./src/ascend'),\n  assoc: require('./src/assoc'),\n  assocPath: require('./src/assocPath'),\n  binary: require('./src/binary'),\n  bind: require('./src/bind'),\n  both: require('./src/both'),\n  call: require('./src/call'),\n  chain: require('./src/chain'),\n  clamp: require('./src/clamp'),\n  clone: require('./src/clone'),\n  comparator: require('./src/comparator'),\n  complement: require('./src/complement'),\n  compose: require('./src/compose'),\n  composeK: require('./src/composeK'),\n  composeP: require('./src/composeP'),\n  concat: require('./src/concat'),\n  cond: require('./src/cond'),\n  construct: require('./src/construct'),\n  constructN: require('./src/constructN'),\n  contains: require('./src/contains'),\n  converge: require('./src/converge'),\n  countBy: require('./src/countBy'),\n  curry: require('./src/curry'),\n  curryN: require('./src/curryN'),\n  dec: require('./src/dec'),\n  defaultTo: require('./src/defaultTo'),\n  descend: require('./src/descend'),\n  difference: require('./src/difference'),\n  differenceWith: require('./src/differenceWith'),\n  dissoc: require('./src/dissoc'),\n  dissocPath: require('./src/dissocPath'),\n  divide: require('./src/divide'),\n  drop: require('./src/drop'),\n  dropLast: require('./src/dropLast'),\n  dropLastWhile: require('./src/dropLastWhile'),\n  dropRepeats: require('./src/dropRepeats'),\n  dropRepeatsWith: require('./src/dropRepeatsWith'),\n  dropWhile: require('./src/dropWhile'),\n  either: require('./src/either'),\n  empty: require('./src/empty'),\n  endsWith: require('./src/endsWith'),\n  eqBy: require('./src/eqBy'),\n  eqProps: require('./src/eqProps'),\n  equals: require('./src/equals'),\n  evolve: require('./src/evolve'),\n  filter: require('./src/filter'),\n  find: require('./src/find'),\n  findIndex: require('./src/findIndex'),\n  findLast: require('./src/findLast'),\n  findLastIndex: require('./src/findLastIndex'),\n  flatten: require('./src/flatten'),\n  flip: require('./src/flip'),\n  forEach: require('./src/forEach'),\n  forEachObjIndexed: require('./src/forEachObjIndexed'),\n  fromPairs: require('./src/fromPairs'),\n  groupBy: require('./src/groupBy'),\n  groupWith: require('./src/groupWith'),\n  gt: require('./src/gt'),\n  gte: require('./src/gte'),\n  has: require('./src/has'),\n  hasIn: require('./src/hasIn'),\n  head: require('./src/head'),\n  identical: require('./src/identical'),\n  identity: require('./src/identity'),\n  ifElse: require('./src/ifElse'),\n  inc: require('./src/inc'),\n  indexBy: require('./src/indexBy'),\n  indexOf: require('./src/indexOf'),\n  init: require('./src/init'),\n  innerJoin: require('./src/innerJoin'),\n  insert: require('./src/insert'),\n  insertAll: require('./src/insertAll'),\n  intersection: require('./src/intersection'),\n  intersectionWith: require('./src/intersectionWith'),\n  intersperse: require('./src/intersperse'),\n  into: require('./src/into'),\n  invert: require('./src/invert'),\n  invertObj: require('./src/invertObj'),\n  invoker: require('./src/invoker'),\n  is: require('./src/is'),\n  isEmpty: require('./src/isEmpty'),\n  isNil: require('./src/isNil'),\n  join: require('./src/join'),\n  juxt: require('./src/juxt'),\n  keys: require('./src/keys'),\n  keysIn: require('./src/keysIn'),\n  last: require('./src/last'),\n  lastIndexOf: require('./src/lastIndexOf'),\n  length: require('./src/length'),\n  lens: require('./src/lens'),\n  lensIndex: require('./src/lensIndex'),\n  lensPath: require('./src/lensPath'),\n  lensProp: require('./src/lensProp'),\n  lift: require('./src/lift'),\n  liftN: require('./src/liftN'),\n  lt: require('./src/lt'),\n  lte: require('./src/lte'),\n  map: require('./src/map'),\n  mapAccum: require('./src/mapAccum'),\n  mapAccumRight: require('./src/mapAccumRight'),\n  mapObjIndexed: require('./src/mapObjIndexed'),\n  match: require('./src/match'),\n  mathMod: require('./src/mathMod'),\n  max: require('./src/max'),\n  maxBy: require('./src/maxBy'),\n  mean: require('./src/mean'),\n  median: require('./src/median'),\n  memoize: require('./src/memoize'),\n  memoizeWith: require('./src/memoizeWith'),\n  merge: require('./src/merge'),\n  mergeAll: require('./src/mergeAll'),\n  mergeDeepLeft: require('./src/mergeDeepLeft'),\n  mergeDeepRight: require('./src/mergeDeepRight'),\n  mergeDeepWith: require('./src/mergeDeepWith'),\n  mergeDeepWithKey: require('./src/mergeDeepWithKey'),\n  mergeWith: require('./src/mergeWith'),\n  mergeWithKey: require('./src/mergeWithKey'),\n  min: require('./src/min'),\n  minBy: require('./src/minBy'),\n  modulo: require('./src/modulo'),\n  multiply: require('./src/multiply'),\n  nAry: require('./src/nAry'),\n  negate: require('./src/negate'),\n  none: require('./src/none'),\n  not: require('./src/not'),\n  nth: require('./src/nth'),\n  nthArg: require('./src/nthArg'),\n  o: require('./src/o'),\n  objOf: require('./src/objOf'),\n  of: require('./src/of'),\n  omit: require('./src/omit'),\n  once: require('./src/once'),\n  or: require('./src/or'),\n  over: require('./src/over'),\n  pair: require('./src/pair'),\n  partial: require('./src/partial'),\n  partialRight: require('./src/partialRight'),\n  partition: require('./src/partition'),\n  path: require('./src/path'),\n  pathEq: require('./src/pathEq'),\n  pathOr: require('./src/pathOr'),\n  pathSatisfies: require('./src/pathSatisfies'),\n  pick: require('./src/pick'),\n  pickAll: require('./src/pickAll'),\n  pickBy: require('./src/pickBy'),\n  pipe: require('./src/pipe'),\n  pipeK: require('./src/pipeK'),\n  pipeP: require('./src/pipeP'),\n  pluck: require('./src/pluck'),\n  prepend: require('./src/prepend'),\n  product: require('./src/product'),\n  project: require('./src/project'),\n  prop: require('./src/prop'),\n  propEq: require('./src/propEq'),\n  propIs: require('./src/propIs'),\n  propOr: require('./src/propOr'),\n  propSatisfies: require('./src/propSatisfies'),\n  props: require('./src/props'),\n  range: require('./src/range'),\n  reduce: require('./src/reduce'),\n  reduceBy: require('./src/reduceBy'),\n  reduceRight: require('./src/reduceRight'),\n  reduceWhile: require('./src/reduceWhile'),\n  reduced: require('./src/reduced'),\n  reject: require('./src/reject'),\n  remove: require('./src/remove'),\n  repeat: require('./src/repeat'),\n  replace: require('./src/replace'),\n  reverse: require('./src/reverse'),\n  scan: require('./src/scan'),\n  sequence: require('./src/sequence'),\n  set: require('./src/set'),\n  slice: require('./src/slice'),\n  sort: require('./src/sort'),\n  sortBy: require('./src/sortBy'),\n  sortWith: require('./src/sortWith'),\n  split: require('./src/split'),\n  splitAt: require('./src/splitAt'),\n  splitEvery: require('./src/splitEvery'),\n  splitWhen: require('./src/splitWhen'),\n  startsWith: require('./src/startsWith'),\n  subtract: require('./src/subtract'),\n  sum: require('./src/sum'),\n  symmetricDifference: require('./src/symmetricDifference'),\n  symmetricDifferenceWith: require('./src/symmetricDifferenceWith'),\n  tail: require('./src/tail'),\n  take: require('./src/take'),\n  takeLast: require('./src/takeLast'),\n  takeLastWhile: require('./src/takeLastWhile'),\n  takeWhile: require('./src/takeWhile'),\n  tap: require('./src/tap'),\n  test: require('./src/test'),\n  times: require('./src/times'),\n  toLower: require('./src/toLower'),\n  toPairs: require('./src/toPairs'),\n  toPairsIn: require('./src/toPairsIn'),\n  toString: require('./src/toString'),\n  toUpper: require('./src/toUpper'),\n  transduce: require('./src/transduce'),\n  transpose: require('./src/transpose'),\n  traverse: require('./src/traverse'),\n  trim: require('./src/trim'),\n  tryCatch: require('./src/tryCatch'),\n  type: require('./src/type'),\n  unapply: require('./src/unapply'),\n  unary: require('./src/unary'),\n  uncurryN: require('./src/uncurryN'),\n  unfold: require('./src/unfold'),\n  union: require('./src/union'),\n  unionWith: require('./src/unionWith'),\n  uniq: require('./src/uniq'),\n  uniqBy: require('./src/uniqBy'),\n  uniqWith: require('./src/uniqWith'),\n  unless: require('./src/unless'),\n  unnest: require('./src/unnest'),\n  until: require('./src/until'),\n  update: require('./src/update'),\n  useWith: require('./src/useWith'),\n  values: require('./src/values'),\n  valuesIn: require('./src/valuesIn'),\n  view: require('./src/view'),\n  when: require('./src/when'),\n  where: require('./src/where'),\n  whereEq: require('./src/whereEq'),\n  without: require('./src/without'),\n  xprod: require('./src/xprod'),\n  zip: require('./src/zip'),\n  zipObj: require('./src/zipObj'),\n  zipWith: require('./src/zipWith')\n};\n","var _curry2 = require('./internal/_curry2');\nvar _dispatchable = require('./internal/_dispatchable');\nvar _xdropRepeatsWith = require('./internal/_xdropRepeatsWith');\nvar last = require('./last');\n\n\n/**\n * Returns a new list without any consecutively repeating elements. Equality is\n * determined by applying the supplied predicate to each pair of consecutive elements. The\n * first element in a series of equal elements will be preserved.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category List\n * @sig (a, a -> Boolean) -> [a] -> [a]\n * @param {Function} pred A predicate used to test whether two items are equal.\n * @param {Array} list The array to consider.\n * @return {Array} `list` without repeating elements.\n * @see R.transduce\n * @example\n *\n *      var l = [1, -1, 1, 3, 4, -4, -4, -5, 5, 3, 3];\n *      R.dropRepeatsWith(R.eqBy(Math.abs), l); //=> [1, 3, 4, -5, 3]\n */\nmodule.exports = _curry2(_dispatchable([], _xdropRepeatsWith, function dropRepeatsWith(pred, list) {\n  var result = [];\n  var idx = 1;\n  var len = list.length;\n  if (len !== 0) {\n    result[0] = list[0];\n    while (idx < len) {\n      if (!pred(last(result), list[idx])) {\n        result[result.length] = list[idx];\n      }\n      idx += 1;\n    }\n  }\n  return result;\n}));\n\n","var pipe = require('./pipe');\nvar reverse = require('./reverse');\n\n\n/**\n * Performs right-to-left function composition. The rightmost function may have\n * any arity; the remaining functions must be unary.\n *\n * **Note:** The result of compose is not automatically curried.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig ((y -> z), (x -> y), ..., (o -> p), ((a, b, ..., n) -> o)) -> ((a, b, ..., n) -> z)\n * @param {...Function} ...functions The functions to compose\n * @return {Function}\n * @see R.pipe\n * @example\n *\n *      var classyGreeting = (firstName, lastName) => \"The name's \" + lastName + \", \" + firstName + \" \" + lastName\n *      var yellGreeting = R.compose(R.toUpper, classyGreeting);\n *      yellGreeting('James', 'Bond'); //=> \"THE NAME'S BOND, JAMES BOND\"\n *\n *      R.compose(Math.abs, R.add(1), R.multiply(2))(-4) //=> 7\n *\n * @symb R.compose(f, g, h)(a, b) = f(g(h(a, b)))\n */\nmodule.exports = function compose() {\n  if (arguments.length === 0) {\n    throw new Error('compose requires at least one argument');\n  }\n  return pipe.apply(this, reverse(arguments));\n};\n","var _curry2 = require('./internal/_curry2');\nvar ap = require('./ap');\nvar map = require('./map');\nvar prepend = require('./prepend');\nvar reduceRight = require('./reduceRight');\n\n\n/**\n * Transforms a [Traversable](https://github.com/fantasyland/fantasy-land#traversable)\n * of [Applicative](https://github.com/fantasyland/fantasy-land#applicative) into an\n * Applicative of Traversable.\n *\n * Dispatches to the `sequence` method of the second argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category List\n * @sig (Applicative f, Traversable t) => (a -> f a) -> t (f a) -> f (t a)\n * @param {Function} of\n * @param {*} traversable\n * @return {*}\n * @see R.traverse\n * @example\n *\n *      R.sequence(Maybe.of, [Just(1), Just(2), Just(3)]);   //=> Just([1, 2, 3])\n *      R.sequence(Maybe.of, [Just(1), Just(2), Nothing()]); //=> Nothing()\n *\n *      R.sequence(R.of, Just([1, 2, 3])); //=> [Just(1), Just(2), Just(3)]\n *      R.sequence(R.of, Nothing());       //=> [Nothing()]\n */\nmodule.exports = _curry2(function sequence(of, traversable) {\n  return typeof traversable.sequence === 'function' ?\n    traversable.sequence(of) :\n    reduceRight(function(x, acc) { return ap(map(prepend, x), acc); },\n                of([]),\n                traversable);\n});\n","var _aperture = require('./internal/_aperture');\nvar _curry2 = require('./internal/_curry2');\nvar _dispatchable = require('./internal/_dispatchable');\nvar _xaperture = require('./internal/_xaperture');\n\n\n/**\n * Returns a new list, composed of n-tuples of consecutive elements. If `n` is\n * greater than the length of the list, an empty list is returned.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.12.0\n * @category List\n * @sig Number -> [a] -> [[a]]\n * @param {Number} n The size of the tuples to create\n * @param {Array} list The list to split into `n`-length tuples\n * @return {Array} The resulting list of `n`-length tuples\n * @see R.transduce\n * @example\n *\n *      R.aperture(2, [1, 2, 3, 4, 5]); //=> [[1, 2], [2, 3], [3, 4], [4, 5]]\n *      R.aperture(3, [1, 2, 3, 4, 5]); //=> [[1, 2, 3], [2, 3, 4], [3, 4, 5]]\n *      R.aperture(7, [1, 2, 3, 4, 5]); //=> []\n */\nmodule.exports = _curry2(_dispatchable([], _xaperture, _aperture));\n","var _curry2 = require('./internal/_curry2');\nvar _dispatchable = require('./internal/_dispatchable');\nvar _filter = require('./internal/_filter');\nvar _isObject = require('./internal/_isObject');\nvar _reduce = require('./internal/_reduce');\nvar _xfilter = require('./internal/_xfilter');\nvar keys = require('./keys');\n\n\n/**\n * Takes a predicate and a `Filterable`, and returns a new filterable of the\n * same type containing the members of the given filterable which satisfy the\n * given predicate. Filterable objects include plain objects or any object\n * that has a filter method such as `Array`.\n *\n * Dispatches to the `filter` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Filterable f => (a -> Boolean) -> f a -> f a\n * @param {Function} pred\n * @param {Array} filterable\n * @return {Array} Filterable\n * @see R.reject, R.transduce, R.addIndex\n * @example\n *\n *      var isEven = n => n % 2 === 0;\n *\n *      R.filter(isEven, [1, 2, 3, 4]); //=> [2, 4]\n *\n *      R.filter(isEven, {a: 1, b: 2, c: 3, d: 4}); //=> {b: 2, d: 4}\n */\nmodule.exports = _curry2(_dispatchable(['filter'], _xfilter, function(pred, filterable) {\n  return (\n    _isObject(filterable) ?\n      _reduce(function(acc, key) {\n        if (pred(filterable[key])) {\n          acc[key] = filterable[key];\n        }\n        return acc;\n      }, {}, keys(filterable)) :\n    // else\n      _filter(pred, filterable)\n  );\n}));\n","var _curry2 = require('./_curry2');\nvar _reduced = require('./_reduced');\nvar _xfBase = require('./_xfBase');\n\nmodule.exports = (function() {\n  function XTake(n, xf) {\n    this.xf = xf;\n    this.n = n;\n    this.i = 0;\n  }\n  XTake.prototype['@@transducer/init'] = _xfBase.init;\n  XTake.prototype['@@transducer/result'] = _xfBase.result;\n  XTake.prototype['@@transducer/step'] = function(result, input) {\n    this.i += 1;\n    var ret = this.n === 0 ? result : this.xf['@@transducer/step'](result, input);\n    return this.n >= 0 && this.i >= this.n ? _reduced(ret) : ret;\n  };\n\n  return _curry2(function _xtake(n, xf) { return new XTake(n, xf); });\n}());\n","var _curry1 = require('./internal/_curry1');\nvar _identity = require('./internal/_identity');\n\n\n/**\n * A function that does nothing but return the parameter supplied to it. Good\n * as a default or placeholder function.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig a -> a\n * @param {*} x The value to return.\n * @return {*} The input value, `x`.\n * @example\n *\n *      R.identity(1); //=> 1\n *\n *      var obj = {};\n *      R.identity(obj) === obj; //=> true\n * @symb R.identity(a) = a\n */\nmodule.exports = _curry1(_identity);\n","var _arity = require('./internal/_arity');\nvar _curry1 = require('./internal/_curry1');\nvar map = require('./map');\nvar max = require('./max');\nvar reduce = require('./reduce');\n\n\n/**\n * Returns a function, `fn`, which encapsulates `if/else, if/else, ...` logic.\n * `R.cond` takes a list of [predicate, transformer] pairs. All of the arguments\n * to `fn` are applied to each of the predicates in turn until one returns a\n * \"truthy\" value, at which point `fn` returns the result of applying its\n * arguments to the corresponding transformer. If none of the predicates\n * matches, `fn` returns undefined.\n *\n * @func\n * @memberOf R\n * @since v0.6.0\n * @category Logic\n * @sig [[(*... -> Boolean),(*... -> *)]] -> (*... -> *)\n * @param {Array} pairs A list of [predicate, transformer]\n * @return {Function}\n * @example\n *\n *      var fn = R.cond([\n *        [R.equals(0),   R.always('water freezes at 0°C')],\n *        [R.equals(100), R.always('water boils at 100°C')],\n *        [R.T,           temp => 'nothing special happens at ' + temp + '°C']\n *      ]);\n *      fn(0); //=> 'water freezes at 0°C'\n *      fn(50); //=> 'nothing special happens at 50°C'\n *      fn(100); //=> 'water boils at 100°C'\n */\nmodule.exports = _curry1(function cond(pairs) {\n  var arity = reduce(max,\n                     0,\n                     map(function(pair) { return pair[0].length; }, pairs));\n  return _arity(arity, function() {\n    var idx = 0;\n    while (idx < pairs.length) {\n      if (pairs[idx][0].apply(this, arguments)) {\n        return pairs[idx][1].apply(this, arguments);\n      }\n      idx += 1;\n    }\n  });\n});\n","var _curry2 = require('./internal/_curry2');\nvar _dispatchable = require('./internal/_dispatchable');\nvar _dropLastWhile = require('./internal/_dropLastWhile');\nvar _xdropLastWhile = require('./internal/_xdropLastWhile');\n\n\n/**\n * Returns a new list excluding all the tailing elements of a given list which\n * satisfy the supplied predicate function. It passes each value from the right\n * to the supplied predicate function, skipping elements until the predicate\n * function returns a `falsy` value. The predicate function is applied to one argument:\n * *(value)*.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category List\n * @sig (a -> Boolean) -> [a] -> [a]\n * @param {Function} predicate The function to be called on each element\n * @param {Array} list The collection to iterate over.\n * @return {Array} A new array without any trailing elements that return `falsy` values from the `predicate`.\n * @see R.takeLastWhile, R.addIndex, R.drop, R.dropWhile\n * @example\n *\n *      var lteThree = x => x <= 3;\n *\n *      R.dropLastWhile(lteThree, [1, 2, 3, 4, 3, 2, 1]); //=> [1, 2, 3, 4]\n */\nmodule.exports = _curry2(_dispatchable([], _xdropLastWhile, _dropLastWhile));\n","var _curry2 = require('./internal/_curry2');\n\n\n/**\n * Returns a \"view\" of the given data structure, determined by the given lens.\n * The lens's focus determines which portion of the data structure is visible.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category Object\n * @typedefn Lens s a = Functor f => (a -> f a) -> s -> f s\n * @sig Lens s a -> s -> a\n * @param {Lens} lens\n * @param {*} x\n * @return {*}\n * @see R.prop, R.lensIndex, R.lensProp\n * @example\n *\n *      var xLens = R.lensProp('x');\n *\n *      R.view(xLens, {x: 1, y: 2});  //=> 1\n *      R.view(xLens, {x: 4, y: 2});  //=> 4\n */\nmodule.exports = (function() {\n  // `Const` is a functor that effectively ignores the function given to `map`.\n  var Const = function(x) {\n    return {value: x, 'fantasy-land/map': function() { return this; }};\n  };\n\n  return _curry2(function view(lens, x) {\n    // Using `Const` effectively ignores the setter function of the `lens`,\n    // leaving the value returned by the getter function unmodified.\n    return lens(Const)(x).value;\n  });\n}());\n","var _curry2 = require('./internal/_curry2');\nvar slice = require('./slice');\n\n\n/**\n * Splits a collection into slices of the specified length.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category List\n * @sig Number -> [a] -> [[a]]\n * @sig Number -> String -> [String]\n * @param {Number} n\n * @param {Array} list\n * @return {Array}\n * @example\n *\n *      R.splitEvery(3, [1, 2, 3, 4, 5, 6, 7]); //=> [[1, 2, 3], [4, 5, 6], [7]]\n *      R.splitEvery(3, 'foobarbaz'); //=> ['foo', 'bar', 'baz']\n */\nmodule.exports = _curry2(function splitEvery(n, list) {\n  if (n <= 0) {\n    throw new Error('First argument to splitEvery must be a positive integer');\n  }\n  var result = [];\n  var idx = 0;\n  while (idx < list.length) {\n    result.push(slice(idx, idx += n, list));\n  }\n  return result;\n});\n","var _curry2 = require('./internal/_curry2');\nvar drop = require('./drop');\n\n\n/**\n * Returns a new list containing the last `n` elements of the given list.\n * If `n > list.length`, returns a list of `list.length` elements.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category List\n * @sig Number -> [a] -> [a]\n * @sig Number -> String -> String\n * @param {Number} n The number of elements to return.\n * @param {Array} xs The collection to consider.\n * @return {Array}\n * @see R.dropLast\n * @example\n *\n *      R.takeLast(1, ['foo', 'bar', 'baz']); //=> ['baz']\n *      R.takeLast(2, ['foo', 'bar', 'baz']); //=> ['bar', 'baz']\n *      R.takeLast(3, ['foo', 'bar', 'baz']); //=> ['foo', 'bar', 'baz']\n *      R.takeLast(4, ['foo', 'bar', 'baz']); //=> ['foo', 'bar', 'baz']\n *      R.takeLast(3, 'ramda');               //=> 'mda'\n */\nmodule.exports = _curry2(function takeLast(n, xs) {\n  return drop(n >= 0 ? xs.length - n : 0, xs);\n});\n","var _curry2 = require('./internal/_curry2');\nvar _dispatchable = require('./internal/_dispatchable');\nvar _xdropWhile = require('./internal/_xdropWhile');\n\n\n/**\n * Returns a new list excluding the leading elements of a given list which\n * satisfy the supplied predicate function. It passes each value to the supplied\n * predicate function, skipping elements while the predicate function returns\n * `true`. The predicate function is applied to one argument: *(value)*.\n *\n * Dispatches to the `dropWhile` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category List\n * @sig (a -> Boolean) -> [a] -> [a]\n * @param {Function} fn The function called per iteration.\n * @param {Array} list The collection to iterate over.\n * @return {Array} A new array.\n * @see R.takeWhile, R.transduce, R.addIndex\n * @example\n *\n *      var lteTwo = x => x <= 2;\n *\n *      R.dropWhile(lteTwo, [1, 2, 3, 4, 3, 2, 1]); //=> [3, 4, 3, 2, 1]\n */\nmodule.exports = _curry2(_dispatchable(['dropWhile'], _xdropWhile, function dropWhile(pred, list) {\n  var idx = 0;\n  var len = list.length;\n  while (idx < len && pred(list[idx])) {\n    idx += 1;\n  }\n  return Array.prototype.slice.call(list, idx);\n}));\n","module.exports = function _map(fn, functor) {\n  var idx = 0;\n  var len = functor.length;\n  var result = Array(len);\n  while (idx < len) {\n    result[idx] = fn(functor[idx]);\n    idx += 1;\n  }\n  return result;\n};\n","var _curry2 = require('./internal/_curry2');\n\n\n/**\n * Returns a partial copy of an object containing only the keys specified. If\n * the key does not exist, the property is ignored.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig [k] -> {k: v} -> {k: v}\n * @param {Array} names an array of String property names to copy onto a new object\n * @param {Object} obj The object to copy from\n * @return {Object} A new object with only properties from `names` on it.\n * @see R.omit, R.props\n * @example\n *\n *      R.pick(['a', 'd'], {a: 1, b: 2, c: 3, d: 4}); //=> {a: 1, d: 4}\n *      R.pick(['a', 'e', 'f'], {a: 1, b: 2, c: 3, d: 4}); //=> {a: 1}\n */\nmodule.exports = _curry2(function pick(names, obj) {\n  var result = {};\n  var idx = 0;\n  while (idx < names.length) {\n    if (names[idx] in obj) {\n      result[names[idx]] = obj[names[idx]];\n    }\n    idx += 1;\n  }\n  return result;\n});\n","var pipeP = require('./pipeP');\nvar reverse = require('./reverse');\n\n\n/**\n * Performs right-to-left composition of one or more Promise-returning\n * functions. The rightmost function may have any arity; the remaining\n * functions must be unary.\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category Function\n * @sig ((y -> Promise z), (x -> Promise y), ..., (a -> Promise b)) -> (a -> Promise z)\n * @param {...Function} functions The functions to compose\n * @return {Function}\n * @see R.pipeP\n * @example\n *\n *      var db = {\n *        users: {\n *          JOE: {\n *            name: 'Joe',\n *            followers: ['STEVE', 'SUZY']\n *          }\n *        }\n *      }\n *\n *      // We'll pretend to do a db lookup which returns a promise\n *      var lookupUser = (userId) => Promise.resolve(db.users[userId])\n *      var lookupFollowers = (user) => Promise.resolve(user.followers)\n *      lookupUser('JOE').then(lookupFollowers)\n *\n *      //  followersForUser :: String -> Promise [UserId]\n *      var followersForUser = R.composeP(lookupFollowers, lookupUser);\n *      followersForUser('JOE').then(followers => console.log('Followers:', followers))\n *      // Followers: [\"STEVE\",\"SUZY\"]\n */\nmodule.exports = function composeP() {\n  if (arguments.length === 0) {\n    throw new Error('composeP requires at least one argument');\n  }\n  return pipeP.apply(this, reverse(arguments));\n};\n","var _curry2 = require('./internal/_curry2');\nvar _dispatchable = require('./internal/_dispatchable');\nvar _dropLast = require('./internal/_dropLast');\nvar _xdropLast = require('./internal/_xdropLast');\n\n\n/**\n * Returns a list containing all but the last `n` elements of the given `list`.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category List\n * @sig Number -> [a] -> [a]\n * @sig Number -> String -> String\n * @param {Number} n The number of elements of `list` to skip.\n * @param {Array} list The list of elements to consider.\n * @return {Array} A copy of the list with only the first `list.length - n` elements\n * @see R.takeLast, R.drop, R.dropWhile, R.dropLastWhile\n * @example\n *\n *      R.dropLast(1, ['foo', 'bar', 'baz']); //=> ['foo', 'bar']\n *      R.dropLast(2, ['foo', 'bar', 'baz']); //=> ['foo']\n *      R.dropLast(3, ['foo', 'bar', 'baz']); //=> []\n *      R.dropLast(4, ['foo', 'bar', 'baz']); //=> []\n *      R.dropLast(3, 'ramda');               //=> 'ra'\n */\nmodule.exports = _curry2(_dispatchable([], _xdropLast, _dropLast));\n","var _curry2 = require('./internal/_curry2');\n\n\n/**\n * Takes a list and a predicate and returns a pair of lists with the following properties:\n *\n *  - the result of concatenating the two output lists is equivalent to the input list;\n *  - none of the elements of the first output list satisfies the predicate; and\n *  - if the second output list is non-empty, its first element satisfies the predicate.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category List\n * @sig (a -> Boolean) -> [a] -> [[a], [a]]\n * @param {Function} pred The predicate that determines where the array is split.\n * @param {Array} list The array to be split.\n * @return {Array}\n * @example\n *\n *      R.splitWhen(R.equals(2), [1, 2, 3, 1, 2, 3]);   //=> [[1], [2, 3, 1, 2, 3]]\n */\nmodule.exports = _curry2(function splitWhen(pred, list) {\n  var idx = 0;\n  var len = list.length;\n  var prefix = [];\n\n  while (idx < len && !pred(list[idx])) {\n    prefix.push(list[idx]);\n    idx += 1;\n  }\n\n  return [prefix, Array.prototype.slice.call(list, idx)];\n});\n","var _curry1 = require('./internal/_curry1');\nvar curryN = require('./curryN');\n\n\n/**\n * Returns a curried equivalent of the provided function. The curried function\n * has two unusual capabilities. First, its arguments needn't be provided one\n * at a time. If `f` is a ternary function and `g` is `R.curry(f)`, the\n * following are equivalent:\n *\n *   - `g(1)(2)(3)`\n *   - `g(1)(2, 3)`\n *   - `g(1, 2)(3)`\n *   - `g(1, 2, 3)`\n *\n * Secondly, the special placeholder value [`R.__`](#__) may be used to specify\n * \"gaps\", allowing partial application of any combination of arguments,\n * regardless of their positions. If `g` is as above and `_` is [`R.__`](#__),\n * the following are equivalent:\n *\n *   - `g(1, 2, 3)`\n *   - `g(_, 2, 3)(1)`\n *   - `g(_, _, 3)(1)(2)`\n *   - `g(_, _, 3)(1, 2)`\n *   - `g(_, 2)(1)(3)`\n *   - `g(_, 2)(1, 3)`\n *   - `g(_, 2)(_, 3)(1)`\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig (* -> a) -> (* -> a)\n * @param {Function} fn The function to curry.\n * @return {Function} A new, curried function.\n * @see R.curryN\n * @example\n *\n *      var addFourNumbers = (a, b, c, d) => a + b + c + d;\n *\n *      var curriedAddFourNumbers = R.curry(addFourNumbers);\n *      var f = curriedAddFourNumbers(1, 2);\n *      var g = f(3);\n *      g(4); //=> 10\n */\nmodule.exports = _curry1(function curry(fn) {\n  return curryN(fn.length, fn);\n});\n","/**\n * Polyfill from <https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString>.\n */\nmodule.exports = (function() {\n  var pad = function pad(n) { return (n < 10 ? '0' : '') + n; };\n\n  return typeof Date.prototype.toISOString === 'function' ?\n    function _toISOString(d) {\n      return d.toISOString();\n    } :\n    function _toISOString(d) {\n      return (\n        d.getUTCFullYear() + '-' +\n        pad(d.getUTCMonth() + 1) + '-' +\n        pad(d.getUTCDate()) + 'T' +\n        pad(d.getUTCHours()) + ':' +\n        pad(d.getUTCMinutes()) + ':' +\n        pad(d.getUTCSeconds()) + '.' +\n        (d.getUTCMilliseconds() / 1000).toFixed(3).slice(2, 5) + 'Z'\n      );\n    };\n}());\n","module.exports = function _reduced(x) {\n  return x && x['@@transducer/reduced'] ? x :\n    {\n      '@@transducer/value': x,\n      '@@transducer/reduced': true\n    };\n};\n","var _curry3 = require('./internal/_curry3');\n\n\n/**\n * The `mapAccum` function behaves like a combination of map and reduce; it\n * applies a function to each element of a list, passing an accumulating\n * parameter from left to right, and returning a final value of this\n * accumulator together with the new list.\n *\n * The iterator function receives two arguments, *acc* and *value*, and should\n * return a tuple *[acc, value]*.\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category List\n * @sig (acc -> x -> (acc, y)) -> acc -> [x] -> (acc, [y])\n * @param {Function} fn The function to be called on every element of the input `list`.\n * @param {*} acc The accumulator value.\n * @param {Array} list The list to iterate over.\n * @return {*} The final, accumulated value.\n * @see R.addIndex, R.mapAccumRight\n * @example\n *\n *      var digits = ['1', '2', '3', '4'];\n *      var appender = (a, b) => [a + b, a + b];\n *\n *      R.mapAccum(appender, 0, digits); //=> ['01234', ['01', '012', '0123', '01234']]\n * @symb R.mapAccum(f, a, [b, c, d]) = [\n *   f(f(f(a, b)[0], c)[0], d)[0],\n *   [\n *     f(a, b)[1],\n *     f(f(a, b)[0], c)[1],\n *     f(f(f(a, b)[0], c)[0], d)[1]\n *   ]\n * ]\n */\nmodule.exports = _curry3(function mapAccum(fn, acc, list) {\n  var idx = 0;\n  var len = list.length;\n  var result = [];\n  var tuple = [acc];\n  while (idx < len) {\n    tuple = fn(tuple[0], list[idx]);\n    result[idx] = tuple[1];\n    idx += 1;\n  }\n  return [tuple[0], result];\n});\n","var _curry1 = require('./internal/_curry1');\nvar _has = require('./internal/_has');\n\n\n/**\n * Converts an object into an array of key, value arrays. Only the object's\n * own properties are used.\n * Note that the order of the output array is not guaranteed to be consistent\n * across different JS platforms.\n *\n * @func\n * @memberOf R\n * @since v0.4.0\n * @category Object\n * @sig {String: *} -> [[String,*]]\n * @param {Object} obj The object to extract from\n * @return {Array} An array of key, value arrays from the object's own properties.\n * @see R.fromPairs\n * @example\n *\n *      R.toPairs({a: 1, b: 2, c: 3}); //=> [['a', 1], ['b', 2], ['c', 3]]\n */\nmodule.exports = _curry1(function toPairs(obj) {\n  var pairs = [];\n  for (var prop in obj) {\n    if (_has(prop, obj)) {\n      pairs[pairs.length] = [prop, obj[prop]];\n    }\n  }\n  return pairs;\n});\n","var _curry1 = require('./internal/_curry1');\nvar curryN = require('./curryN');\nvar nth = require('./nth');\n\n\n/**\n * Returns a function which returns its nth argument.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Function\n * @sig Number -> *... -> *\n * @param {Number} n\n * @return {Function}\n * @example\n *\n *      R.nthArg(1)('a', 'b', 'c'); //=> 'b'\n *      R.nthArg(-1)('a', 'b', 'c'); //=> 'c'\n * @symb R.nthArg(-1)(a, b, c) = c\n * @symb R.nthArg(0)(a, b, c) = a\n * @symb R.nthArg(1)(a, b, c) = b\n */\nmodule.exports = _curry1(function nthArg(n) {\n  var arity = n < 0 ? 1 : n + 1;\n  return curryN(arity, function() {\n    return nth(n, arguments);\n  });\n});\n","var _curry3 = require('./internal/_curry3');\n\n\n/**\n * `o` is a curried composition function that returns a unary function.\n * Like [`compose`](#compose), `o` performs right-to-left function composition.\n * Unlike [`compose`](#compose), the rightmost function passed to `o` will be\n * invoked with only one argument.\n *\n * @func\n * @memberOf R\n * @since v0.24.0\n * @category Function\n * @sig (b -> c) -> (a -> b) -> a -> c\n * @param {Function} f\n * @param {Function} g\n * @return {Function}\n * @see R.compose, R.pipe\n * @example\n *\n *      var classyGreeting = name => \"The name's \" + name.last + \", \" + name.first + \" \" + lastName\n *      var yellGreeting = R.o(R.toUpper, classyGreeting);\n *      yellGreeting({first: 'James', last: 'Bond'}); //=> \"THE NAME'S BOND, JAMES BOND\"\n *\n *      R.o(R.multiply(10), R.add(10))(-4) //=> 60\n *\n * @symb R.o(f, g, x) = f(g(x))\n */\nmodule.exports = _curry3(function o(f, g, x) {\n  return f(g(x));\n});\n","var _concat = require('./internal/_concat');\nvar _createPartialApplicator = require('./internal/_createPartialApplicator');\nvar flip = require('./flip');\n\n\n/**\n * Takes a function `f` and a list of arguments, and returns a function `g`.\n * When applied, `g` returns the result of applying `f` to the arguments\n * provided to `g` followed by the arguments provided initially.\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category Function\n * @sig ((a, b, c, ..., n) -> x) -> [d, e, f, ..., n] -> ((a, b, c, ...) -> x)\n * @param {Function} f\n * @param {Array} args\n * @return {Function}\n * @see R.partial\n * @example\n *\n *      var greet = (salutation, title, firstName, lastName) =>\n *        salutation + ', ' + title + ' ' + firstName + ' ' + lastName + '!';\n *\n *      var greetMsJaneJones = R.partialRight(greet, ['Ms.', 'Jane', 'Jones']);\n *\n *      greetMsJaneJones('Hello'); //=> 'Hello, Ms. Jane Jones!'\n * @symb R.partialRight(f, [a, b])(c, d) = f(c, d, a, b)\n */\nmodule.exports = _createPartialApplicator(flip(_concat));\n","var _curry1 = require('./_curry1');\nvar _isPlaceholder = require('./_isPlaceholder');\n\n\n/**\n * Optimized internal two-arity curry function.\n *\n * @private\n * @category Function\n * @param {Function} fn The function to curry.\n * @return {Function} The curried function.\n */\nmodule.exports = function _curry2(fn) {\n  return function f2(a, b) {\n    switch (arguments.length) {\n      case 0:\n        return f2;\n      case 1:\n        return _isPlaceholder(a) ? f2\n             : _curry1(function(_b) { return fn(a, _b); });\n      default:\n        return _isPlaceholder(a) && _isPlaceholder(b) ? f2\n             : _isPlaceholder(a) ? _curry1(function(_a) { return fn(_a, b); })\n             : _isPlaceholder(b) ? _curry1(function(_b) { return fn(a, _b); })\n             : fn(a, b);\n    }\n  };\n};\n","var _arity = require('./internal/_arity');\nvar _concat = require('./internal/_concat');\nvar _curry2 = require('./internal/_curry2');\n\n\n/**\n * `tryCatch` takes two functions, a `tryer` and a `catcher`. The returned\n * function evaluates the `tryer`; if it does not throw, it simply returns the\n * result. If the `tryer` *does* throw, the returned function evaluates the\n * `catcher` function and returns its result. Note that for effective\n * composition with this function, both the `tryer` and `catcher` functions\n * must return the same type of results.\n *\n * @func\n * @memberOf R\n * @since v0.20.0\n * @category Function\n * @sig (...x -> a) -> ((e, ...x) -> a) -> (...x -> a)\n * @param {Function} tryer The function that may throw.\n * @param {Function} catcher The function that will be evaluated if `tryer` throws.\n * @return {Function} A new function that will catch exceptions and send then to the catcher.\n * @example\n *\n *      R.tryCatch(R.prop('x'), R.F)({x: true}); //=> true\n *      R.tryCatch(R.prop('x'), R.F)(null);      //=> false\n */\nmodule.exports = _curry2(function _tryCatch(tryer, catcher) {\n  return _arity(tryer.length, function() {\n    try {\n      return tryer.apply(this, arguments);\n    } catch (e) {\n      return catcher.apply(this, _concat([e], arguments));\n    }\n  });\n});\n","var _concat = require('./internal/_concat');\nvar _curry2 = require('./internal/_curry2');\n\n\n/**\n * Returns a new list containing the contents of the given list, followed by\n * the given element.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig a -> [a] -> [a]\n * @param {*} el The element to add to the end of the new list.\n * @param {Array} list The list of elements to add a new item to.\n *        list.\n * @return {Array} A new list containing the elements of the old list followed by `el`.\n * @see R.prepend\n * @example\n *\n *      R.append('tests', ['write', 'more']); //=> ['write', 'more', 'tests']\n *      R.append('tests', []); //=> ['tests']\n *      R.append(['tests'], ['write', 'more']); //=> ['write', 'more', ['tests']]\n */\nmodule.exports = _curry2(function append(el, list) {\n  return _concat(list, [el]);\n});\n","var _contains = require('./internal/_contains');\nvar _curry2 = require('./internal/_curry2');\n\n\n/**\n * Returns a partial copy of an object omitting the keys specified.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig [String] -> {String: *} -> {String: *}\n * @param {Array} names an array of String property names to omit from the new object\n * @param {Object} obj The object to copy from\n * @return {Object} A new object with properties from `names` not on it.\n * @see R.pick\n * @example\n *\n *      R.omit(['a', 'd'], {a: 1, b: 2, c: 3, d: 4}); //=> {b: 2, c: 3}\n */\nmodule.exports = _curry2(function omit(names, obj) {\n  var result = {};\n  for (var prop in obj) {\n    if (!_contains(prop, names)) {\n      result[prop] = obj[prop];\n    }\n  }\n  return result;\n});\n","var _curry3 = require('./internal/_curry3');\n\n\n/**\n * Replace a substring or regex match in a string with a replacement.\n *\n * @func\n * @memberOf R\n * @since v0.7.0\n * @category String\n * @sig RegExp|String -> String -> String -> String\n * @param {RegExp|String} pattern A regular expression or a substring to match.\n * @param {String} replacement The string to replace the matches with.\n * @param {String} str The String to do the search and replacement in.\n * @return {String} The result.\n * @example\n *\n *      R.replace('foo', 'bar', 'foo foo foo'); //=> 'bar foo foo'\n *      R.replace(/foo/, 'bar', 'foo foo foo'); //=> 'bar foo foo'\n *\n *      // Use the \"g\" (global) flag to replace all occurrences:\n *      R.replace(/foo/g, 'bar', 'foo foo foo'); //=> 'bar bar bar'\n */\nmodule.exports = _curry3(function replace(regex, replacement, str) {\n  return str.replace(regex, replacement);\n});\n","var _curry2 = require('./internal/_curry2');\nvar _dispatchable = require('./internal/_dispatchable');\nvar _xfindIndex = require('./internal/_xfindIndex');\n\n\n/**\n * Returns the index of the first element of the list which matches the\n * predicate, or `-1` if no element matches.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.1\n * @category List\n * @sig (a -> Boolean) -> [a] -> Number\n * @param {Function} fn The predicate function used to determine if the element is the\n * desired one.\n * @param {Array} list The array to consider.\n * @return {Number} The index of the element found, or `-1`.\n * @see R.transduce\n * @example\n *\n *      var xs = [{a: 1}, {a: 2}, {a: 3}];\n *      R.findIndex(R.propEq('a', 2))(xs); //=> 1\n *      R.findIndex(R.propEq('a', 4))(xs); //=> -1\n */\nmodule.exports = _curry2(_dispatchable([], _xfindIndex, function findIndex(fn, list) {\n  var idx = 0;\n  var len = list.length;\n  while (idx < len) {\n    if (fn(list[idx])) {\n      return idx;\n    }\n    idx += 1;\n  }\n  return -1;\n}));\n","var _curry1 = require('./internal/_curry1');\nvar keys = require('./keys');\n\n\n/**\n * Returns a list of all the enumerable own properties of the supplied object.\n * Note that the order of the output array is not guaranteed across different\n * JS platforms.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig {k: v} -> [v]\n * @param {Object} obj The object to extract values from\n * @return {Array} An array of the values of the object's own properties.\n * @see R.valuesIn, R.keys\n * @example\n *\n *      R.values({a: 1, b: 2, c: 3}); //=> [1, 2, 3]\n */\nmodule.exports = _curry1(function values(obj) {\n  var props = keys(obj);\n  var len = props.length;\n  var vals = [];\n  var idx = 0;\n  while (idx < len) {\n    vals[idx] = obj[props[idx]];\n    idx += 1;\n  }\n  return vals;\n});\n","var _curry2 = require('./_curry2');\nvar _reduced = require('./_reduced');\nvar _xfBase = require('./_xfBase');\n\n\nmodule.exports = (function() {\n  function XAll(f, xf) {\n    this.xf = xf;\n    this.f = f;\n    this.all = true;\n  }\n  XAll.prototype['@@transducer/init'] = _xfBase.init;\n  XAll.prototype['@@transducer/result'] = function(result) {\n    if (this.all) {\n      result = this.xf['@@transducer/step'](result, true);\n    }\n    return this.xf['@@transducer/result'](result);\n  };\n  XAll.prototype['@@transducer/step'] = function(result, input) {\n    if (!this.f(input)) {\n      this.all = false;\n      result = _reduced(this.xf['@@transducer/step'](result, false));\n    }\n    return result;\n  };\n\n  return _curry2(function _xall(f, xf) { return new XAll(f, xf); });\n}());\n","var _curry3 = require('./internal/_curry3');\nvar adjust = require('./adjust');\nvar always = require('./always');\n\n\n/**\n * Returns a new copy of the array with the element at the provided index\n * replaced with the given value.\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category List\n * @sig Number -> a -> [a] -> [a]\n * @param {Number} idx The index to update.\n * @param {*} x The value to exist at the given index of the returned array.\n * @param {Array|Arguments} list The source array-like object to be updated.\n * @return {Array} A copy of `list` with the value at index `idx` replaced with `x`.\n * @see R.adjust\n * @example\n *\n *      R.update(1, 11, [0, 1, 2]);     //=> [0, 11, 2]\n *      R.update(1)(11)([0, 1, 2]);     //=> [0, 11, 2]\n * @symb R.update(-1, a, [b, c]) = [b, a]\n * @symb R.update(0, a, [b, c]) = [a, c]\n * @symb R.update(1, a, [b, c]) = [b, a]\n */\nmodule.exports = _curry3(function update(idx, x, list) {\n  return adjust(always(x), idx, list);\n});\n","var _curry2 = require('./internal/_curry2');\nvar _dispatchable = require('./internal/_dispatchable');\nvar _xfind = require('./internal/_xfind');\n\n\n/**\n * Returns the first element of the list which matches the predicate, or\n * `undefined` if no element matches.\n *\n * Dispatches to the `find` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig (a -> Boolean) -> [a] -> a | undefined\n * @param {Function} fn The predicate function used to determine if the element is the\n *        desired one.\n * @param {Array} list The array to consider.\n * @return {Object} The element found, or `undefined`.\n * @see R.transduce\n * @example\n *\n *      var xs = [{a: 1}, {a: 2}, {a: 3}];\n *      R.find(R.propEq('a', 2))(xs); //=> {a: 2}\n *      R.find(R.propEq('a', 4))(xs); //=> undefined\n */\nmodule.exports = _curry2(_dispatchable(['find'], _xfind, function find(fn, list) {\n  var idx = 0;\n  var len = list.length;\n  while (idx < len) {\n    if (fn(list[idx])) {\n      return list[idx];\n    }\n    idx += 1;\n  }\n}));\n","var _containsWith = require('./internal/_containsWith');\nvar _curry3 = require('./internal/_curry3');\nvar _filter = require('./internal/_filter');\n\n\n/**\n * Takes a predicate `pred`, a list `xs`, and a list `ys`, and returns a list\n * `xs'` comprising each of the elements of `xs` which is equal to one or more\n * elements of `ys` according to `pred`.\n *\n * `pred` must be a binary function expecting an element from each list.\n *\n * `xs`, `ys`, and `xs'` are treated as sets, semantically, so ordering should\n * not be significant, but since `xs'` is ordered the implementation guarantees\n * that its values are in the same order as they appear in `xs`. Duplicates are\n * not removed, so `xs'` may contain duplicates if `xs` contains duplicates.\n *\n * @func\n * @memberOf R\n * @since v0.24.0\n * @category Relation\n * @sig (a -> b -> Boolean) -> [a] -> [b] -> [a]\n * @param {Function} pred\n * @param {Array} xs\n * @param {Array} ys\n * @return {Array}\n * @see R.intersection\n * @example\n *\n *      R.innerJoin(\n *        (record, id) => record.id === id,\n *        [{id: 824, name: 'Richie Furay'},\n *         {id: 956, name: 'Dewey Martin'},\n *         {id: 313, name: 'Bruce Palmer'},\n *         {id: 456, name: 'Stephen Stills'},\n *         {id: 177, name: 'Neil Young'}],\n *        [177, 456, 999]\n *      );\n *      //=> [{id: 456, name: 'Stephen Stills'}, {id: 177, name: 'Neil Young'}]\n */\nmodule.exports = _curry3(function innerJoin(pred, xs, ys) {\n  return _filter(function(x) { return _containsWith(pred, x, ys); }, xs);\n});\n","var _curry2 = require('./internal/_curry2');\n\n\n/**\n * Returns a function that when supplied an object returns the indicated\n * property of that object, if it exists.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig s -> {s: a} -> a | Undefined\n * @param {String} p The property name\n * @param {Object} obj The object to query\n * @return {*} The value at `obj.p`.\n * @see R.path\n * @example\n *\n *      R.prop('x', {x: 100}); //=> 100\n *      R.prop('x', {}); //=> undefined\n */\nmodule.exports = _curry2(function prop(p, obj) { return obj[p]; });\n","var _curry2 = require('./internal/_curry2');\nvar map = require('./map');\nvar prop = require('./prop');\n\n\n/**\n * Returns a new list by plucking the same named property off all objects in\n * the list supplied.\n *\n * `pluck` will work on\n * any [functor](https://github.com/fantasyland/fantasy-land#functor) in\n * addition to arrays, as it is equivalent to `R.map(R.prop(k), f)`.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Functor f => k -> f {k: v} -> f v\n * @param {Number|String} key The key name to pluck off of each object.\n * @param {Array} f The array or functor to consider.\n * @return {Array} The list of values for the given key.\n * @see R.props\n * @example\n *\n *      R.pluck('a')([{a: 1}, {a: 2}]); //=> [1, 2]\n *      R.pluck(0)([[1, 2], [3, 4]]);   //=> [1, 3]\n *      R.pluck('val', {a: {val: 3}, b: {val: 5}}); //=> {a: 3, b: 5}\n * @symb R.pluck('x', [{x: 1, y: 2}, {x: 3, y: 4}, {x: 5, y: 6}]) = [1, 3, 5]\n * @symb R.pluck(0, [[1, 2], [3, 4], [5, 6]]) = [1, 3, 5]\n */\nmodule.exports = _curry2(function pluck(p, list) {\n  return map(prop(p), list);\n});\n","var _arity = require('./internal/_arity');\nvar _curry1 = require('./internal/_curry1');\nvar _curry2 = require('./internal/_curry2');\nvar _curryN = require('./internal/_curryN');\n\n\n/**\n * Returns a curried equivalent of the provided function, with the specified\n * arity. The curried function has two unusual capabilities. First, its\n * arguments needn't be provided one at a time. If `g` is `R.curryN(3, f)`, the\n * following are equivalent:\n *\n *   - `g(1)(2)(3)`\n *   - `g(1)(2, 3)`\n *   - `g(1, 2)(3)`\n *   - `g(1, 2, 3)`\n *\n * Secondly, the special placeholder value [`R.__`](#__) may be used to specify\n * \"gaps\", allowing partial application of any combination of arguments,\n * regardless of their positions. If `g` is as above and `_` is [`R.__`](#__),\n * the following are equivalent:\n *\n *   - `g(1, 2, 3)`\n *   - `g(_, 2, 3)(1)`\n *   - `g(_, _, 3)(1)(2)`\n *   - `g(_, _, 3)(1, 2)`\n *   - `g(_, 2)(1)(3)`\n *   - `g(_, 2)(1, 3)`\n *   - `g(_, 2)(_, 3)(1)`\n *\n * @func\n * @memberOf R\n * @since v0.5.0\n * @category Function\n * @sig Number -> (* -> a) -> (* -> a)\n * @param {Number} length The arity for the returned function.\n * @param {Function} fn The function to curry.\n * @return {Function} A new, curried function.\n * @see R.curry\n * @example\n *\n *      var sumArgs = (...args) => R.sum(args);\n *\n *      var curriedAddFourNumbers = R.curryN(4, sumArgs);\n *      var f = curriedAddFourNumbers(1, 2);\n *      var g = f(3);\n *      g(4); //=> 10\n */\nmodule.exports = _curry2(function curryN(length, fn) {\n  if (length === 1) {\n    return _curry1(fn);\n  }\n  return _arity(length, _curryN(length, [], fn));\n});\n","var _concat = require('./internal/_concat');\nvar _curry2 = require('./internal/_curry2');\n\n\n/**\n * Returns a new list with the given element at the front, followed by the\n * contents of the list.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig a -> [a] -> [a]\n * @param {*} el The item to add to the head of the output list.\n * @param {Array} list The array to add to the tail of the output list.\n * @return {Array} A new array.\n * @see R.append\n * @example\n *\n *      R.prepend('fee', ['fi', 'fo', 'fum']); //=> ['fee', 'fi', 'fo', 'fum']\n */\nmodule.exports = _curry2(function prepend(el, list) {\n  return _concat([el], list);\n});\n","var _objectAssign = require('./_objectAssign');\n\nmodule.exports =\n  typeof Object.assign === 'function' ? Object.assign : _objectAssign;\n","var _assign = require('./_assign');\nvar _identity = require('./_identity');\nvar _isArrayLike = require('./_isArrayLike');\nvar _isTransformer = require('./_isTransformer');\nvar objOf = require('../objOf');\n\n\nmodule.exports = (function() {\n  var _stepCatArray = {\n    '@@transducer/init': Array,\n    '@@transducer/step': function(xs, x) {\n      xs.push(x);\n      return xs;\n    },\n    '@@transducer/result': _identity\n  };\n  var _stepCatString = {\n    '@@transducer/init': String,\n    '@@transducer/step': function(a, b) { return a + b; },\n    '@@transducer/result': _identity\n  };\n  var _stepCatObject = {\n    '@@transducer/init': Object,\n    '@@transducer/step': function(result, input) {\n      return _assign(\n        result,\n        _isArrayLike(input) ? objOf(input[0], input[1]) : input\n      );\n    },\n    '@@transducer/result': _identity\n  };\n\n  return function _stepCat(obj) {\n    if (_isTransformer(obj)) {\n      return obj;\n    }\n    if (_isArrayLike(obj)) {\n      return _stepCatArray;\n    }\n    if (typeof obj === 'string') {\n      return _stepCatString;\n    }\n    if (typeof obj === 'object') {\n      return _stepCatObject;\n    }\n    throw new Error('Cannot create transformer for ' + obj);\n  };\n}());\n","var _curry1 = require('./internal/_curry1');\nvar _isArguments = require('./internal/_isArguments');\nvar _isArray = require('./internal/_isArray');\nvar _isObject = require('./internal/_isObject');\nvar _isString = require('./internal/_isString');\n\n\n/**\n * Returns the empty value of its argument's type. Ramda defines the empty\n * value of Array (`[]`), Object (`{}`), String (`''`), and Arguments. Other\n * types are supported if they define `<Type>.empty` and/or\n * `<Type>.prototype.empty`.\n *\n * Dispatches to the `empty` method of the first argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category Function\n * @sig a -> a\n * @param {*} x\n * @return {*}\n * @example\n *\n *      R.empty(Just(42));      //=> Nothing()\n *      R.empty([1, 2, 3]);     //=> []\n *      R.empty('unicorns');    //=> ''\n *      R.empty({x: 1, y: 2});  //=> {}\n */\nmodule.exports = _curry1(function empty(x) {\n  return (\n    (x != null && typeof x['fantasy-land/empty'] === 'function') ?\n      x['fantasy-land/empty']() :\n    (x != null && x.constructor != null && typeof x.constructor['fantasy-land/empty'] === 'function') ?\n      x.constructor['fantasy-land/empty']() :\n    (x != null && typeof x.empty === 'function') ?\n      x.empty() :\n    (x != null && x.constructor != null && typeof x.constructor.empty === 'function') ?\n      x.constructor.empty() :\n    _isArray(x) ?\n      [] :\n    _isString(x) ?\n      '' :\n    _isObject(x) ?\n      {} :\n    _isArguments(x) ?\n      (function() { return arguments; }()) :\n    // else\n      void 0\n  );\n});\n","var _curry2 = require('./internal/_curry2');\nvar _has = require('./internal/_has');\n\n\n/**\n * Takes a spec object and a test object; returns true if the test satisfies\n * the spec. Each of the spec's own properties must be a predicate function.\n * Each predicate is applied to the value of the corresponding property of the\n * test object. `where` returns true if all the predicates return true, false\n * otherwise.\n *\n * `where` is well suited to declaratively expressing constraints for other\n * functions such as [`filter`](#filter) and [`find`](#find).\n *\n * @func\n * @memberOf R\n * @since v0.1.1\n * @category Object\n * @sig {String: (* -> Boolean)} -> {String: *} -> Boolean\n * @param {Object} spec\n * @param {Object} testObj\n * @return {Boolean}\n * @example\n *\n *      // pred :: Object -> Boolean\n *      var pred = R.where({\n *        a: R.equals('foo'),\n *        b: R.complement(R.equals('bar')),\n *        x: R.gt(R.__, 10),\n *        y: R.lt(R.__, 20)\n *      });\n *\n *      pred({a: 'foo', b: 'xxx', x: 11, y: 19}); //=> true\n *      pred({a: 'xxx', b: 'xxx', x: 11, y: 19}); //=> false\n *      pred({a: 'foo', b: 'bar', x: 11, y: 19}); //=> false\n *      pred({a: 'foo', b: 'xxx', x: 10, y: 19}); //=> false\n *      pred({a: 'foo', b: 'xxx', x: 11, y: 20}); //=> false\n */\nmodule.exports = _curry2(function where(spec, testObj) {\n  for (var prop in spec) {\n    if (_has(prop, spec) && !spec[prop](testObj[prop])) {\n      return false;\n    }\n  }\n  return true;\n});\n","/**\n * A special placeholder value used to specify \"gaps\" within curried functions,\n * allowing partial application of any combination of arguments, regardless of\n * their positions.\n *\n * If `g` is a curried ternary function and `_` is `R.__`, the following are\n * equivalent:\n *\n *   - `g(1, 2, 3)`\n *   - `g(_, 2, 3)(1)`\n *   - `g(_, _, 3)(1)(2)`\n *   - `g(_, _, 3)(1, 2)`\n *   - `g(_, 2, _)(1, 3)`\n *   - `g(_, 2)(1)(3)`\n *   - `g(_, 2)(1, 3)`\n *   - `g(_, 2)(_, 3)(1)`\n *\n * @constant\n * @memberOf R\n * @since v0.6.0\n * @category Function\n * @example\n *\n *      var greet = R.replace('{name}', R.__, 'Hello, {name}!');\n *      greet('Alice'); //=> 'Hello, Alice!'\n */\nmodule.exports = {'@@functional/placeholder': true};\n","var _checkForMethod = require('./internal/_checkForMethod');\nvar _curry3 = require('./internal/_curry3');\n\n\n/**\n * Returns the elements of the given list or string (or object with a `slice`\n * method) from `fromIndex` (inclusive) to `toIndex` (exclusive).\n *\n * Dispatches to the `slice` method of the third argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.1.4\n * @category List\n * @sig Number -> Number -> [a] -> [a]\n * @sig Number -> Number -> String -> String\n * @param {Number} fromIndex The start index (inclusive).\n * @param {Number} toIndex The end index (exclusive).\n * @param {*} list\n * @return {*}\n * @example\n *\n *      R.slice(1, 3, ['a', 'b', 'c', 'd']);        //=> ['b', 'c']\n *      R.slice(1, Infinity, ['a', 'b', 'c', 'd']); //=> ['b', 'c', 'd']\n *      R.slice(0, -1, ['a', 'b', 'c', 'd']);       //=> ['a', 'b', 'c']\n *      R.slice(-3, -1, ['a', 'b', 'c', 'd']);      //=> ['b', 'c']\n *      R.slice(0, 3, 'ramda');                     //=> 'ram'\n */\nmodule.exports = _curry3(_checkForMethod('slice', function slice(fromIndex, toIndex, list) {\n  return Array.prototype.slice.call(list, fromIndex, toIndex);\n}));\n","var _curry2 = require('./internal/_curry2');\nvar _indexOf = require('./internal/_indexOf');\nvar _isArray = require('./internal/_isArray');\n\n\n/**\n * Returns the position of the first occurrence of an item in an array, or -1\n * if the item is not included in the array. [`R.equals`](#equals) is used to\n * determine equality.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig a -> [a] -> Number\n * @param {*} target The item to find.\n * @param {Array} xs The array to search in.\n * @return {Number} the index of the target, or -1 if the target is not found.\n * @see R.lastIndexOf\n * @example\n *\n *      R.indexOf(3, [1,2,3,4]); //=> 2\n *      R.indexOf(10, [1,2,3,4]); //=> -1\n */\nmodule.exports = _curry2(function indexOf(target, xs) {\n  return typeof xs.indexOf === 'function' && !_isArray(xs) ?\n    xs.indexOf(target) :\n    _indexOf(xs, target, 0);\n});\n","module.exports = function _filter(fn, list) {\n  var idx = 0;\n  var len = list.length;\n  var result = [];\n\n  while (idx < len) {\n    if (fn(list[idx])) {\n      result[result.length] = list[idx];\n    }\n    idx += 1;\n  }\n  return result;\n};\n","var _curry2 = require('./internal/_curry2');\nvar equals = require('./equals');\nvar map = require('./map');\nvar where = require('./where');\n\n\n/**\n * Takes a spec object and a test object; returns true if the test satisfies\n * the spec, false otherwise. An object satisfies the spec if, for each of the\n * spec's own properties, accessing that property of the object gives the same\n * value (in [`R.equals`](#equals) terms) as accessing that property of the\n * spec.\n *\n * `whereEq` is a specialization of [`where`](#where).\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category Object\n * @sig {String: *} -> {String: *} -> Boolean\n * @param {Object} spec\n * @param {Object} testObj\n * @return {Boolean}\n * @see R.where\n * @example\n *\n *      // pred :: Object -> Boolean\n *      var pred = R.whereEq({a: 1, b: 2});\n *\n *      pred({a: 1});              //=> false\n *      pred({a: 1, b: 2});        //=> true\n *      pred({a: 1, b: 2, c: 3});  //=> true\n *      pred({a: 1, b: 1});        //=> false\n */\nmodule.exports = _curry2(function whereEq(spec, testObj) {\n  return where(map(equals, spec), testObj);\n});\n","var _curry3 = require('./internal/_curry3');\nvar _has = require('./internal/_has');\nvar _isArray = require('./internal/_isArray');\nvar _isInteger = require('./internal/_isInteger');\nvar assoc = require('./assoc');\nvar isNil = require('./isNil');\n\n\n/**\n * Makes a shallow clone of an object, setting or overriding the nodes required\n * to create the given path, and placing the specific value at the tail end of\n * that path. Note that this copies and flattens prototype properties onto the\n * new object as well. All non-primitive properties are copied by reference.\n *\n * @func\n * @memberOf R\n * @since v0.8.0\n * @category Object\n * @typedefn Idx = String | Int\n * @sig [Idx] -> a -> {a} -> {a}\n * @param {Array} path the path to set\n * @param {*} val The new value\n * @param {Object} obj The object to clone\n * @return {Object} A new object equivalent to the original except along the specified path.\n * @see R.dissocPath\n * @example\n *\n *      R.assocPath(['a', 'b', 'c'], 42, {a: {b: {c: 0}}}); //=> {a: {b: {c: 42}}}\n *\n *      // Any missing or non-object keys in path will be overridden\n *      R.assocPath(['a', 'b', 'c'], 42, {a: 5}); //=> {a: {b: {c: 42}}}\n */\nmodule.exports = _curry3(function assocPath(path, val, obj) {\n  if (path.length === 0) {\n    return val;\n  }\n  var idx = path[0];\n  if (path.length > 1) {\n    var nextObj = (!isNil(obj) && _has(idx, obj)) ? obj[idx] : _isInteger(path[1]) ? [] : {};\n    val = assocPath(Array.prototype.slice.call(path, 1), val, nextObj);\n  }\n  if (_isInteger(idx) && _isArray(obj)) {\n    var arr = [].concat(obj);\n    arr[idx] = val;\n    return arr;\n  } else {\n    return assoc(idx, val, obj);\n  }\n});\n","var _isPlaceholder = require('./_isPlaceholder');\n\n\n/**\n * Optimized internal one-arity curry function.\n *\n * @private\n * @category Function\n * @param {Function} fn The function to curry.\n * @return {Function} The curried function.\n */\nmodule.exports = function _curry1(fn) {\n  return function f1(a) {\n    if (arguments.length === 0 || _isPlaceholder(a)) {\n      return f1;\n    } else {\n      return fn.apply(this, arguments);\n    }\n  };\n};\n","var _curry2 = require('./internal/_curry2');\n\n\n/**\n * Returns whether or not an object or its prototype chain has a property with\n * the specified name\n *\n * @func\n * @memberOf R\n * @since v0.7.0\n * @category Object\n * @sig s -> {s: x} -> Boolean\n * @param {String} prop The name of the property to check for.\n * @param {Object} obj The object to query.\n * @return {Boolean} Whether the property exists.\n * @example\n *\n *      function Rectangle(width, height) {\n *        this.width = width;\n *        this.height = height;\n *      }\n *      Rectangle.prototype.area = function() {\n *        return this.width * this.height;\n *      };\n *\n *      var square = new Rectangle(2, 2);\n *      R.hasIn('width', square);  //=> true\n *      R.hasIn('area', square);  //=> true\n */\nmodule.exports = _curry2(function hasIn(prop, obj) {\n  return prop in obj;\n});\n","var curry = require('./curry');\n\n\n/**\n * Returns the result of calling its first argument with the remaining\n * arguments. This is occasionally useful as a converging function for\n * [`R.converge`](#converge): the first branch can produce a function while the\n * remaining branches produce values to be passed to that function as its\n * arguments.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Function\n * @sig (*... -> a),*... -> a\n * @param {Function} fn The function to apply to the remaining arguments.\n * @param {...*} args Any number of positional arguments.\n * @return {*}\n * @see R.apply\n * @example\n *\n *      R.call(R.add, 1, 2); //=> 3\n *\n *      var indentN = R.pipe(R.times(R.always(' ')),\n *                           R.join(''),\n *                           R.replace(/^(?!$)/gm));\n *\n *      var format = R.converge(R.call, [\n *                                  R.pipe(R.prop('indent'), indentN),\n *                                  R.prop('value')\n *                              ]);\n *\n *      format({indent: 2, value: 'foo\\nbar\\nbaz\\n'}); //=> '  foo\\n  bar\\n  baz\\n'\n * @symb R.call(f, a, b) = f(a, b)\n */\nmodule.exports = curry(function call(fn) {\n  return fn.apply(this, Array.prototype.slice.call(arguments, 1));\n});\n","var _curry1 = require('./internal/_curry1');\nvar curry = require('./curry');\n\n\n/**\n * Returns a new function much like the supplied one, except that the first two\n * arguments' order is reversed.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig (a -> b -> c -> ... -> z) -> (b -> a -> c -> ... -> z)\n * @param {Function} fn The function to invoke with its first two parameters reversed.\n * @return {*} The result of invoking `fn` with its first two parameters' order reversed.\n * @example\n *\n *      var mergeThree = (a, b, c) => [].concat(a, b, c);\n *\n *      mergeThree(1, 2, 3); //=> [1, 2, 3]\n *\n *      R.flip(mergeThree)(1, 2, 3); //=> [2, 1, 3]\n * @symb R.flip(f)(a, b, c) = f(b, a, c)\n */\nmodule.exports = _curry1(function flip(fn) {\n  return curry(function(a, b) {\n    var args = Array.prototype.slice.call(arguments, 0);\n    args[0] = b;\n    args[1] = a;\n    return fn.apply(this, args);\n  });\n});\n","/**\n * Determine if the passed argument is an integer.\n *\n * @private\n * @param {*} n\n * @category Type\n * @return {Boolean}\n */\nmodule.exports = Number.isInteger || function _isInteger(n) {\n  return (n << 0) === n;\n};\n","import mod from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/lib/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./DisplayBeers.vue?vue&type=style&index=0&lang=css\"; export default mod; export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/lib/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./DisplayBeers.vue?vue&type=style&index=0&lang=css\"","var _curry2 = require('./internal/_curry2');\n\n\n/**\n * Returns the smaller of its two arguments.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig Ord a => a -> a -> a\n * @param {*} a\n * @param {*} b\n * @return {*}\n * @see R.minBy, R.max\n * @example\n *\n *      R.min(789, 123); //=> 123\n *      R.min('a', 'b'); //=> 'a'\n */\nmodule.exports = _curry2(function min(a, b) { return b < a ? b : a; });\n","var _isArrayLike = require('./_isArrayLike');\n\n\n/**\n * `_makeFlat` is a helper function that returns a one-level or fully recursive\n * function based on the flag passed in.\n *\n * @private\n */\nmodule.exports = function _makeFlat(recursive) {\n  return function flatt(list) {\n    var value, jlen, j;\n    var result = [];\n    var idx = 0;\n    var ilen = list.length;\n\n    while (idx < ilen) {\n      if (_isArrayLike(list[idx])) {\n        value = recursive ? flatt(list[idx]) : list[idx];\n        j = 0;\n        jlen = value.length;\n        while (j < jlen) {\n          result[result.length] = value[j];\n          j += 1;\n        }\n      } else {\n        result[result.length] = list[idx];\n      }\n      idx += 1;\n    }\n    return result;\n  };\n};\n","var _curry2 = require('./internal/_curry2');\n\n\n/**\n * Multiplies two numbers. Equivalent to `a * b` but curried.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Math\n * @sig Number -> Number -> Number\n * @param {Number} a The first value.\n * @param {Number} b The second value.\n * @return {Number} The result of `a * b`.\n * @see R.divide\n * @example\n *\n *      var double = R.multiply(2);\n *      var triple = R.multiply(3);\n *      double(3);       //=>  6\n *      triple(4);       //=> 12\n *      R.multiply(2, 5);  //=> 10\n */\nmodule.exports = _curry2(function multiply(a, b) { return a * b; });\n","var _curry2 = require('./internal/_curry2');\n\n\n/**\n * Returns the larger of its two arguments.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig Ord a => a -> a -> a\n * @param {*} a\n * @param {*} b\n * @return {*}\n * @see R.maxBy, R.min\n * @example\n *\n *      R.max(789, 123); //=> 789\n *      R.max('a', 'b'); //=> 'b'\n */\nmodule.exports = _curry2(function max(a, b) { return b > a ? b : a; });\n","var _concat = require('./_concat');\nvar _curry2 = require('./_curry2');\nvar _xfBase = require('./_xfBase');\n\n\nmodule.exports = (function() {\n  function XAperture(n, xf) {\n    this.xf = xf;\n    this.pos = 0;\n    this.full = false;\n    this.acc = new Array(n);\n  }\n  XAperture.prototype['@@transducer/init'] = _xfBase.init;\n  XAperture.prototype['@@transducer/result'] = function(result) {\n    this.acc = null;\n    return this.xf['@@transducer/result'](result);\n  };\n  XAperture.prototype['@@transducer/step'] = function(result, input) {\n    this.store(input);\n    return this.full ? this.xf['@@transducer/step'](result, this.getCopy()) : result;\n  };\n  XAperture.prototype.store = function(input) {\n    this.acc[this.pos] = input;\n    this.pos += 1;\n    if (this.pos === this.acc.length) {\n      this.pos = 0;\n      this.full = true;\n    }\n  };\n  XAperture.prototype.getCopy = function() {\n    return _concat(Array.prototype.slice.call(this.acc, this.pos),\n                   Array.prototype.slice.call(this.acc, 0, this.pos));\n  };\n\n  return _curry2(function _xaperture(n, xf) { return new XAperture(n, xf); });\n}());\n","var _curry3 = require('./internal/_curry3');\nvar mergeWithKey = require('./mergeWithKey');\n\n\n/**\n * Creates a new object with the own properties of the two provided objects. If\n * a key exists in both objects, the provided function is applied to the values\n * associated with the key in each object, with the result being used as the\n * value associated with the key in the returned object.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category Object\n * @sig (a -> a -> a) -> {a} -> {a} -> {a}\n * @param {Function} fn\n * @param {Object} l\n * @param {Object} r\n * @return {Object}\n * @see R.mergeDeepWith, R.merge, R.mergeWithKey\n * @example\n *\n *      R.mergeWith(R.concat,\n *                  { a: true, values: [10, 20] },\n *                  { b: true, values: [15, 35] });\n *      //=> { a: true, b: true, values: [10, 20, 15, 35] }\n */\nmodule.exports = _curry3(function mergeWith(fn, l, r) {\n  return mergeWithKey(function(_, _l, _r) {\n    return fn(_l, _r);\n  }, l, r);\n});\n","var _curry1 = require('./internal/_curry1');\nvar curryN = require('./curryN');\nvar max = require('./max');\nvar pluck = require('./pluck');\nvar reduce = require('./reduce');\n\n\n/**\n * Takes a list of predicates and returns a predicate that returns true for a\n * given list of arguments if at least one of the provided predicates is\n * satisfied by those arguments.\n *\n * The function returned is a curried function whose arity matches that of the\n * highest-arity predicate.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Logic\n * @sig [(*... -> Boolean)] -> (*... -> Boolean)\n * @param {Array} predicates An array of predicates to check\n * @return {Function} The combined predicate\n * @see R.allPass\n * @example\n *\n *      var isClub = R.propEq('suit', '♣');\n *      var isSpade = R.propEq('suit', '♠');\n *      var isBlackCard = R.anyPass([isClub, isSpade]);\n *\n *      isBlackCard({rank: '10', suit: '♣'}); //=> true\n *      isBlackCard({rank: 'Q', suit: '♠'}); //=> true\n *      isBlackCard({rank: 'Q', suit: '♦'}); //=> false\n */\nmodule.exports = _curry1(function anyPass(preds) {\n  return curryN(reduce(max, 0, pluck('length', preds)), function() {\n    var idx = 0;\n    var len = preds.length;\n    while (idx < len) {\n      if (preds[idx].apply(this, arguments)) {\n        return true;\n      }\n      idx += 1;\n    }\n    return false;\n  });\n});\n","var _checkForMethod = require('./internal/_checkForMethod');\nvar _curry2 = require('./internal/_curry2');\n\n\n/**\n * Creates a new list with the separator interposed between elements.\n *\n * Dispatches to the `intersperse` method of the second argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category List\n * @sig a -> [a] -> [a]\n * @param {*} separator The element to add to the list.\n * @param {Array} list The list to be interposed.\n * @return {Array} The new list.\n * @example\n *\n *      R.intersperse('n', ['ba', 'a', 'a']); //=> ['ba', 'n', 'a', 'n', 'a']\n */\nmodule.exports = _curry2(_checkForMethod('intersperse', function intersperse(separator, list) {\n  var out = [];\n  var idx = 0;\n  var length = list.length;\n  while (idx < length) {\n    if (idx === length - 1) {\n      out.push(list[idx]);\n    } else {\n      out.push(list[idx], separator);\n    }\n    idx += 1;\n  }\n  return out;\n}));\n","var invoker = require('./invoker');\n\n\n/**\n * Returns a string made by inserting the `separator` between each element and\n * concatenating all the elements into a single string.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig String -> [a] -> String\n * @param {Number|String} separator The string used to separate the elements.\n * @param {Array} xs The elements to join into a string.\n * @return {String} str The string made by concatenating `xs` with `separator`.\n * @see R.split\n * @example\n *\n *      var spacer = R.join(' ');\n *      spacer(['a', 2, 3.4]);   //=> 'a 2 3.4'\n *      R.join('|', [1, 2, 3]);    //=> '1|2|3'\n */\nmodule.exports = invoker(1, 'join');\n","var _curry2 = require('./internal/_curry2');\n\n\n/**\n * Sorts the list according to the supplied function.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig Ord b => (a -> b) -> [a] -> [a]\n * @param {Function} fn\n * @param {Array} list The list to sort.\n * @return {Array} A new list sorted by the keys generated by `fn`.\n * @example\n *\n *      var sortByFirstItem = R.sortBy(R.prop(0));\n *      var sortByNameCaseInsensitive = R.sortBy(R.compose(R.toLower, R.prop('name')));\n *      var pairs = [[-1, 1], [-2, 2], [-3, 3]];\n *      sortByFirstItem(pairs); //=> [[-3, 3], [-2, 2], [-1, 1]]\n *      var alice = {\n *        name: 'ALICE',\n *        age: 101\n *      };\n *      var bob = {\n *        name: 'Bob',\n *        age: -10\n *      };\n *      var clara = {\n *        name: 'clara',\n *        age: 314.159\n *      };\n *      var people = [clara, bob, alice];\n *      sortByNameCaseInsensitive(people); //=> [alice, bob, clara]\n */\nmodule.exports = _curry2(function sortBy(fn, list) {\n  return Array.prototype.slice.call(list, 0).sort(function(a, b) {\n    var aa = fn(a);\n    var bb = fn(b);\n    return aa < bb ? -1 : aa > bb ? 1 : 0;\n  });\n});\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('ul',[_c('li',[_c('router-link',{attrs:{\"to\":{ name: 'login', params: { login: true } }}},[_vm._v(\"Sign In\")])],1),_c('li',[_c('router-link',{attrs:{\"to\":\"/login\"}},[_vm._v(\"Register\")])],1)]),_c('last-beers')],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render, staticRenderFns\nimport script from \"./DisplayBeers.vue?vue&type=script&lang=js\"\nexport * from \"./DisplayBeers.vue?vue&type=script&lang=js\"\nimport style0 from \"./DisplayBeers.vue?vue&type=style&index=0&lang=css\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('checkins-provider',{attrs:{\"onlyBeers\":true,\"limit\":12},scopedSlots:_vm._u([{key:\"default\",fn:function(slotProps){return [_c('display-beers',{attrs:{\"beers\":slotProps.beers}})]}}])})}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[(_vm.onlyBeers)?_vm._t(\"default\",null,{test:\"test\",beers:_vm.beers}):_vm._t(\"default\",null,{checkins:_vm.checkins})],2)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n    <div>\n        <slot test=\"test\" v-if=\"onlyBeers\" :beers=\"beers\"  />\n        <slot v-else :checkins=\"checkins\" />\n    </div>\n</template>\n\n<script>\nimport {\n  getLatestCheckIns,\n  checkinSubscription,\n} from '../../database/queries.js'\nimport { map, prop, dropLast } from 'ramda'\nimport gql from 'graphql-tag'\n\nconst dropTail = dropLast(1)\n\nexport default {\n  data() {\n    return {\n      checkins: [],\n    }\n  },\n  apollo: {\n    checkins: {\n      query: getLatestCheckIns,\n      fetchPolicy: 'cache-and-network',\n      variables() {\n        return {\n          limit: this.limit,\n          onlyBeers: this.onlyBeers,\n        }\n      },\n      error(err) {\n        console.log(err)\n      },\n      subscribeToMore: {\n        document: checkinSubscription,\n        updateQuery: (\n          { checkins },\n          { subscriptionData: { data: { checkinAdded } } }\n        ) => ({\n          checkins: [checkinAdded, ...dropTail(checkins)],\n        }),\n        variables() {\n          return {\n            onlyBeers: this.onlyBeers,\n          }\n        },\n        error(err) {\n          console.log(err)\n        },\n      },\n    },\n  },\n  computed: {\n    beers() {\n      return map(prop('beer'))(this.checkins)\n    },\n  },\n  props: {\n    limit: {\n      type: Number,\n      required: false,\n      default: Number.MAX_SAFE_INTEGER,\n    },\n    onlyBeers: {\n      type: Boolean,\n      required: false,\n      default: false,\n    },\n  },\n}\n</script>\n\n<style>\n</style>\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./CheckinsProvider.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./CheckinsProvider.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./CheckinsProvider.vue?vue&type=template&id=7bf3628e\"\nimport script from \"./CheckinsProvider.vue?vue&type=script&lang=js\"\nexport * from \"./CheckinsProvider.vue?vue&type=script&lang=js\"\nimport style0 from \"./CheckinsProvider.vue?vue&type=style&index=0&lang=css\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","<script>\nimport BeerItem from '../dumb/BeerItem.vue'\n\nexport default {\n  functional: true,\n  props: {\n    beers: {\n      type: Array,\n      required: true,\n    },\n  },\n  render(h, { props: { beers } }) {\n    return beers.map(beer => <BeerItem beer={beer} />)\n  },\n}\n</script>\n\n<style>\n</style>\n\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./DisplayBeers.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./DisplayBeers.vue?vue&type=script&lang=js\"","<template>\n        <checkins-provider :onlyBeers=\"true\" :limit=\"12\" >\n            <template slot-scope=\"slotProps\">\n                <display-beers :beers=\"slotProps.beers\" />\n            </template>\n        </checkins-provider>\n</template>\n\n<script>\nimport CheckinsProvider from '../providers/CheckinsProvider.vue'\nimport DisplayBeers from '../containers/DisplayBeers.vue'\n\nexport default {\n  components: {\n    CheckinsProvider,\n    DisplayBeers,\n  },\n}\n</script>\n\n<style scoped>\n</style>\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./LastBeers.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./LastBeers.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./LastBeers.vue?vue&type=template&id=614407ab&scoped=true\"\nimport script from \"./LastBeers.vue?vue&type=script&lang=js\"\nexport * from \"./LastBeers.vue?vue&type=script&lang=js\"\nimport style0 from \"./LastBeers.vue?vue&type=style&index=0&id=614407ab&scoped=true&lang=css\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"614407ab\",\n  null\n  \n)\n\nexport default component.exports","<template>\n    <div>\n        <ul>\n            <li>\n                <router-link :to=\"{ name: 'login', params: { login: true } }\" >Sign In</router-link>\n            </li>\n            <li>\n                <router-link to=\"/login\">Register</router-link>\n            </li>\n        </ul>\n    <last-beers />\n    </div>\n</template>\n\n<script>\nimport LastBeers from '../containers/LastBeers'\n\nexport default {\n  components: {\n    LastBeers,\n  },\n}\n</script>\n\n<style scoped>\na {\n  text-decoration: none;\n}\n\nli {\n  display: inline-block;\n}\n\nul {\n  float: right;\n}\n\nli {\n  border: solid 2px black;\n  padding: 15px 20px;\n  margin-right: 15px;\n}\n</style>\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Home.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Home.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./Home.vue?vue&type=template&id=18d27954&scoped=true\"\nimport script from \"./Home.vue?vue&type=script&lang=js\"\nexport * from \"./Home.vue?vue&type=script&lang=js\"\nimport style0 from \"./Home.vue?vue&type=style&index=0&id=18d27954&scoped=true&lang=css\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"18d27954\",\n  null\n  \n)\n\nexport default component.exports","var _curry1 = require('./internal/_curry1');\nvar sum = require('./sum');\n\n\n/**\n * Returns the mean of the given list of numbers.\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category Math\n * @sig [Number] -> Number\n * @param {Array} list\n * @return {Number}\n * @see R.median\n * @example\n *\n *      R.mean([2, 7, 9]); //=> 6\n *      R.mean([]); //=> NaN\n */\nmodule.exports = _curry1(function mean(list) {\n  return sum(list) / list.length;\n});\n","// 20.1.2.6 Number.MAX_SAFE_INTEGER\nvar $export = require('./_export');\n\n$export($export.S, 'Number', { MAX_SAFE_INTEGER: 0x1fffffffffffff });\n","/**\n * Tests whether or not an object is an array.\n *\n * @private\n * @param {*} val The object to test.\n * @return {Boolean} `true` if `val` is an array, `false` otherwise.\n * @example\n *\n *      _isArray([]); //=> true\n *      _isArray(null); //=> false\n *      _isArray({}); //=> false\n */\nmodule.exports = Array.isArray || function _isArray(val) {\n  return (val != null &&\n          val.length >= 0 &&\n          Object.prototype.toString.call(val) === '[object Array]');\n};\n","var _curry3 = require('./internal/_curry3');\nvar always = require('./always');\nvar over = require('./over');\n\n\n/**\n * Returns the result of \"setting\" the portion of the given data structure\n * focused by the given lens to the given value.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category Object\n * @typedefn Lens s a = Functor f => (a -> f a) -> s -> f s\n * @sig Lens s a -> a -> s -> s\n * @param {Lens} lens\n * @param {*} v\n * @param {*} x\n * @return {*}\n * @see R.prop, R.lensIndex, R.lensProp\n * @example\n *\n *      var xLens = R.lensProp('x');\n *\n *      R.set(xLens, 4, {x: 1, y: 2});  //=> {x: 4, y: 2}\n *      R.set(xLens, 8, {x: 1, y: 2});  //=> {x: 8, y: 2}\n */\nmodule.exports = _curry3(function set(lens, v, x) {\n  return over(lens, always(v), x);\n});\n","var _curry2 = require('./internal/_curry2');\nvar _has = require('./internal/_has');\n\n\n/**\n * Returns whether or not an object has an own property with the specified name\n *\n * @func\n * @memberOf R\n * @since v0.7.0\n * @category Object\n * @sig s -> {s: x} -> Boolean\n * @param {String} prop The name of the property to check for.\n * @param {Object} obj The object to query.\n * @return {Boolean} Whether the property exists.\n * @example\n *\n *      var hasName = R.has('name');\n *      hasName({name: 'alice'});   //=> true\n *      hasName({name: 'bob'});     //=> true\n *      hasName({});                //=> false\n *\n *      var point = {x: 0, y: 0};\n *      var pointHas = R.has(R.__, point);\n *      pointHas('x');  //=> true\n *      pointHas('y');  //=> true\n *      pointHas('z');  //=> false\n */\nmodule.exports = _curry2(_has);\n","var _curry2 = require('./internal/_curry2');\nvar equals = require('./equals');\nvar takeLast = require('./takeLast');\n\n/**\n * Checks if a list ends with the provided values\n *\n * @func\n * @memberOf R\n * @since v0.24.0\n * @category List\n * @sig [a] -> Boolean\n * @sig String -> Boolean\n * @param {*} suffix\n * @param {*} list\n * @return {Boolean}\n * @example\n *\n *      R.endsWith('c', 'abc')                //=> true\n *      R.endsWith('b', 'abc')                //=> false\n *      R.endsWith(['c'], ['a', 'b', 'c'])    //=> true\n *      R.endsWith(['b'], ['a', 'b', 'c'])    //=> false\n */\nmodule.exports = _curry2(function(suffix, list) {\n  return equals(takeLast(suffix.length, list), suffix);\n});\n","var _curry2 = require('./internal/_curry2');\n\n\n/**\n * Calls an input function `n` times, returning an array containing the results\n * of those function calls.\n *\n * `fn` is passed one argument: The current value of `n`, which begins at `0`\n * and is gradually incremented to `n - 1`.\n *\n * @func\n * @memberOf R\n * @since v0.2.3\n * @category List\n * @sig (Number -> a) -> Number -> [a]\n * @param {Function} fn The function to invoke. Passed one argument, the current value of `n`.\n * @param {Number} n A value between `0` and `n - 1`. Increments after each function call.\n * @return {Array} An array containing the return values of all calls to `fn`.\n * @see R.repeat\n * @example\n *\n *      R.times(R.identity, 5); //=> [0, 1, 2, 3, 4]\n * @symb R.times(f, 0) = []\n * @symb R.times(f, 1) = [f(0)]\n * @symb R.times(f, 2) = [f(0), f(1)]\n */\nmodule.exports = _curry2(function times(fn, n) {\n  var len = Number(n);\n  var idx = 0;\n  var list;\n\n  if (len < 0 || isNaN(len)) {\n    throw new RangeError('n must be a non-negative number');\n  }\n  list = new Array(len);\n  while (idx < len) {\n    list[idx] = fn(idx);\n    idx += 1;\n  }\n  return list;\n});\n","var _curry2 = require('./internal/_curry2');\n\n\n/**\n * Returns true if its arguments are identical, false otherwise. Values are\n * identical if they reference the same memory. `NaN` is identical to `NaN`;\n * `0` and `-0` are not identical.\n *\n * @func\n * @memberOf R\n * @since v0.15.0\n * @category Relation\n * @sig a -> a -> Boolean\n * @param {*} a\n * @param {*} b\n * @return {Boolean}\n * @example\n *\n *      var o = {};\n *      R.identical(o, o); //=> true\n *      R.identical(1, 1); //=> true\n *      R.identical(1, '1'); //=> false\n *      R.identical([], []); //=> false\n *      R.identical(0, -0); //=> false\n *      R.identical(NaN, NaN); //=> true\n */\nmodule.exports = _curry2(function identical(a, b) {\n  // SameValue algorithm\n  if (a === b) { // Steps 1-5, 7-10\n    // Steps 6.b-6.e: +0 != -0\n    return a !== 0 || 1 / a === 1 / b;\n  } else {\n    // Step 6.a: NaN == NaN\n    return a !== a && b !== b;\n  }\n});\n","var _curry2 = require('./_curry2');\nvar _reduce = require('./_reduce');\nvar _xfBase = require('./_xfBase');\n\nmodule.exports = (function() {\n  function XDropLastWhile(fn, xf) {\n    this.f = fn;\n    this.retained = [];\n    this.xf = xf;\n  }\n  XDropLastWhile.prototype['@@transducer/init'] = _xfBase.init;\n  XDropLastWhile.prototype['@@transducer/result'] = function(result) {\n    this.retained = null;\n    return this.xf['@@transducer/result'](result);\n  };\n  XDropLastWhile.prototype['@@transducer/step'] = function(result, input) {\n    return this.f(input) ? this.retain(result, input)\n                         : this.flush(result, input);\n  };\n  XDropLastWhile.prototype.flush = function(result, input) {\n    result = _reduce(\n      this.xf['@@transducer/step'],\n      result,\n      this.retained\n    );\n    this.retained = [];\n    return this.xf['@@transducer/step'](result, input);\n  };\n  XDropLastWhile.prototype.retain = function(result, input) {\n    this.retained.push(input);\n    return result;\n  };\n\n  return _curry2(function _xdropLastWhile(fn, xf) { return new XDropLastWhile(fn, xf); });\n}());\n","var reduceBy = require('./reduceBy');\n\n\n/**\n * Given a function that generates a key, turns a list of objects into an\n * object indexing the objects by the given key. Note that if multiple\n * objects generate the same value for the indexing key only the last value\n * will be included in the generated object.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category List\n * @sig (a -> String) -> [{k: v}] -> {k: {k: v}}\n * @param {Function} fn Function :: a -> String\n * @param {Array} array The array of objects to index\n * @return {Object} An object indexing each array element by the given property.\n * @example\n *\n *      var list = [{id: 'xyz', title: 'A'}, {id: 'abc', title: 'B'}];\n *      R.indexBy(R.prop('id'), list);\n *      //=> {abc: {id: 'abc', title: 'B'}, xyz: {id: 'xyz', title: 'A'}}\n */\nmodule.exports = reduceBy(function(acc, elem) { return elem; }, null);\n","var _curry2 = require('./internal/_curry2');\n\n\n/**\n * Divides two numbers. Equivalent to `a / b`.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Math\n * @sig Number -> Number -> Number\n * @param {Number} a The first value.\n * @param {Number} b The second value.\n * @return {Number} The result of `a / b`.\n * @see R.multiply\n * @example\n *\n *      R.divide(71, 100); //=> 0.71\n *\n *      var half = R.divide(R.__, 2);\n *      half(42); //=> 21\n *\n *      var reciprocal = R.divide(1);\n *      reciprocal(4);   //=> 0.25\n */\nmodule.exports = _curry2(function divide(a, b) { return a / b; });\n","var _clone = require('./internal/_clone');\nvar _curry1 = require('./internal/_curry1');\n\n\n/**\n * Creates a deep copy of the value which may contain (nested) `Array`s and\n * `Object`s, `Number`s, `String`s, `Boolean`s and `Date`s. `Function`s are\n * assigned by reference rather than copied\n *\n * Dispatches to a `clone` method if present.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig {*} -> {*}\n * @param {*} value The object or array to clone\n * @return {*} A deeply cloned copy of `val`\n * @example\n *\n *      var objects = [{}, {}, {}];\n *      var objectsClone = R.clone(objects);\n *      objects === objectsClone; //=> false\n *      objects[0] === objectsClone[0]; //=> false\n */\nmodule.exports = _curry1(function clone(value) {\n  return value != null && typeof value.clone === 'function' ?\n    value.clone() :\n    _clone(value, [], [], true);\n});\n","var _curry2 = require('./internal/_curry2');\nvar _reduce = require('./internal/_reduce');\nvar keys = require('./keys');\n\n\n/**\n * An Object-specific version of [`map`](#map). The function is applied to three\n * arguments: *(value, key, obj)*. If only the value is significant, use\n * [`map`](#map) instead.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Object\n * @sig ((*, String, Object) -> *) -> Object -> Object\n * @param {Function} fn\n * @param {Object} obj\n * @return {Object}\n * @see R.map\n * @example\n *\n *      var values = { x: 1, y: 2, z: 3 };\n *      var prependKeyAndDouble = (num, key, obj) => key + (num * 2);\n *\n *      R.mapObjIndexed(prependKeyAndDouble, values); //=> { x: 'x2', y: 'y4', z: 'z6' }\n */\nmodule.exports = _curry2(function mapObjIndexed(fn, obj) {\n  return _reduce(function(acc, key) {\n    acc[key] = fn(obj[key], key, obj);\n    return acc;\n  }, {}, keys(obj));\n});\n","var _curry1 = require('./internal/_curry1');\n\n\n/**\n * Returns a function that always returns the given value. Note that for\n * non-primitives the value returned is a reference to the original value.\n *\n * This function is known as `const`, `constant`, or `K` (for K combinator) in\n * other languages and libraries.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig a -> (* -> a)\n * @param {*} val The value to wrap in a function\n * @return {Function} A Function :: * -> val.\n * @example\n *\n *      var t = R.always('Tee');\n *      t(); //=> 'Tee'\n */\nmodule.exports = _curry1(function always(val) {\n  return function() {\n    return val;\n  };\n});\n","var _curry2 = require('./internal/_curry2');\nvar always = require('./always');\nvar times = require('./times');\n\n\n/**\n * Returns a fixed list of size `n` containing a specified identical value.\n *\n * @func\n * @memberOf R\n * @since v0.1.1\n * @category List\n * @sig a -> n -> [a]\n * @param {*} value The value to repeat.\n * @param {Number} n The desired size of the output list.\n * @return {Array} A new array containing `n` `value`s.\n * @see R.times\n * @example\n *\n *      R.repeat('hi', 5); //=> ['hi', 'hi', 'hi', 'hi', 'hi']\n *\n *      var obj = {};\n *      var repeatedObjs = R.repeat(obj, 5); //=> [{}, {}, {}, {}, {}]\n *      repeatedObjs[0] === repeatedObjs[1]; //=> true\n * @symb R.repeat(a, 0) = []\n * @symb R.repeat(a, 1) = [a]\n * @symb R.repeat(a, 2) = [a, a]\n */\nmodule.exports = _curry2(function repeat(value, n) {\n  return times(always(value), n);\n});\n","var _curry2 = require('./internal/_curry2');\n\n\n/**\n * Acts as multiple `prop`: array of keys in, array of values out. Preserves\n * order.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig [k] -> {k: v} -> [v]\n * @param {Array} ps The property names to fetch\n * @param {Object} obj The object to query\n * @return {Array} The corresponding values or partially applied function.\n * @example\n *\n *      R.props(['x', 'y'], {x: 1, y: 2}); //=> [1, 2]\n *      R.props(['c', 'a', 'b'], {b: 2, a: 1}); //=> [undefined, 1, 2]\n *\n *      var fullName = R.compose(R.join(' '), R.props(['first', 'last']));\n *      fullName({last: 'Bullet-Tooth', age: 33, first: 'Tony'}); //=> 'Tony Bullet-Tooth'\n */\nmodule.exports = _curry2(function props(ps, obj) {\n  var len = ps.length;\n  var out = [];\n  var idx = 0;\n\n  while (idx < len) {\n    out[idx] = obj[ps[idx]];\n    idx += 1;\n  }\n\n  return out;\n});\n","var add = require('./add');\n\n\n/**\n * Decrements its argument.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Math\n * @sig Number -> Number\n * @param {Number} n\n * @return {Number} n - 1\n * @see R.inc\n * @example\n *\n *      R.dec(42); //=> 41\n */\nmodule.exports = add(-1);\n","var _curry3 = require('./internal/_curry3');\nvar _has = require('./internal/_has');\n\n\n/**\n * If the given, non-null object has an own property with the specified name,\n * returns the value of that property. Otherwise returns the provided default\n * value.\n *\n * @func\n * @memberOf R\n * @since v0.6.0\n * @category Object\n * @sig a -> String -> Object -> a\n * @param {*} val The default value.\n * @param {String} p The name of the property to return.\n * @param {Object} obj The object to query.\n * @return {*} The value of given property of the supplied object or the default value.\n * @example\n *\n *      var alice = {\n *        name: 'ALICE',\n *        age: 101\n *      };\n *      var favorite = R.prop('favoriteLibrary');\n *      var favoriteWithDefault = R.propOr('Ramda', 'favoriteLibrary');\n *\n *      favorite(alice);  //=> undefined\n *      favoriteWithDefault(alice);  //=> 'Ramda'\n */\nmodule.exports = _curry3(function propOr(val, p, obj) {\n  return (obj != null && _has(p, obj)) ? obj[p] : val;\n});\n","var _curry3 = require('./internal/_curry3');\nvar equals = require('./equals');\nvar path = require('./path');\n\n\n/**\n * Determines whether a nested path on an object has a specific value, in\n * [`R.equals`](#equals) terms. Most likely used to filter a list.\n *\n * @func\n * @memberOf R\n * @since v0.7.0\n * @category Relation\n * @typedefn Idx = String | Int\n * @sig [Idx] -> a -> {a} -> Boolean\n * @param {Array} path The path of the nested property to use\n * @param {*} val The value to compare the nested property with\n * @param {Object} obj The object to check the nested property in\n * @return {Boolean} `true` if the value equals the nested object property,\n *         `false` otherwise.\n * @example\n *\n *      var user1 = { address: { zipCode: 90210 } };\n *      var user2 = { address: { zipCode: 55555 } };\n *      var user3 = { name: 'Bob' };\n *      var users = [ user1, user2, user3 ];\n *      var isFamous = R.pathEq(['address', 'zipCode'], 90210);\n *      R.filter(isFamous, users); //=> [ user1 ]\n */\nmodule.exports = _curry3(function pathEq(_path, val, obj) {\n  return equals(path(_path, obj), val);\n});\n","var _curry2 = require('./_curry2');\nvar _flatCat = require('./_flatCat');\nvar map = require('../map');\n\n\nmodule.exports = _curry2(function _xchain(f, xf) {\n  return map(f, _flatCat(xf));\n});\n","var _curry1 = require('./internal/_curry1');\n\n\n/**\n * Takes a function `fn`, which takes a single array argument, and returns a\n * function which:\n *\n *   - takes any number of positional arguments;\n *   - passes these arguments to `fn` as an array; and\n *   - returns the result.\n *\n * In other words, `R.unapply` derives a variadic function from a function which\n * takes an array. `R.unapply` is the inverse of [`R.apply`](#apply).\n *\n * @func\n * @memberOf R\n * @since v0.8.0\n * @category Function\n * @sig ([*...] -> a) -> (*... -> a)\n * @param {Function} fn\n * @return {Function}\n * @see R.apply\n * @example\n *\n *      R.unapply(JSON.stringify)(1, 2, 3); //=> '[1,2,3]'\n * @symb R.unapply(f)(a, b) = f([a, b])\n */\nmodule.exports = _curry1(function unapply(fn) {\n  return function() {\n    return fn(Array.prototype.slice.call(arguments, 0));\n  };\n});\n","var _curry2 = require('./_curry2');\nvar _xfBase = require('./_xfBase');\n\n\nmodule.exports = (function() {\n  function XDropRepeatsWith(pred, xf) {\n    this.xf = xf;\n    this.pred = pred;\n    this.lastValue = undefined;\n    this.seenFirstValue = false;\n  }\n\n  XDropRepeatsWith.prototype['@@transducer/init'] = _xfBase.init;\n  XDropRepeatsWith.prototype['@@transducer/result'] = _xfBase.result;\n  XDropRepeatsWith.prototype['@@transducer/step'] = function(result, input) {\n    var sameAsLast = false;\n    if (!this.seenFirstValue) {\n      this.seenFirstValue = true;\n    } else if (this.pred(this.lastValue, input)) {\n      sameAsLast = true;\n    }\n    this.lastValue = input;\n    return sameAsLast ? result : this.xf['@@transducer/step'](result, input);\n  };\n\n  return _curry2(function _xdropRepeatsWith(pred, xf) { return new XDropRepeatsWith(pred, xf); });\n}());\n","var _curry2 = require('./internal/_curry2');\n\n\n/**\n * Returns a copy of the list, sorted according to the comparator function,\n * which should accept two values at a time and return a negative number if the\n * first value is smaller, a positive number if it's larger, and zero if they\n * are equal. Please note that this is a **copy** of the list. It does not\n * modify the original.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig (a,a -> Number) -> [a] -> [a]\n * @param {Function} comparator A sorting function :: a -> b -> Int\n * @param {Array} list The list to sort\n * @return {Array} a new array with its elements sorted by the comparator function.\n * @example\n *\n *      var diff = function(a, b) { return a - b; };\n *      R.sort(diff, [4,2,7,5]); //=> [2, 4, 5, 7]\n */\nmodule.exports = _curry2(function sort(comparator, list) {\n  return Array.prototype.slice.call(list, 0).sort(comparator);\n});\n","var _curry2 = require('./_curry2');\nvar _xfBase = require('./_xfBase');\n\n\nmodule.exports = (function() {\n  function XFindLast(f, xf) {\n    this.xf = xf;\n    this.f = f;\n  }\n  XFindLast.prototype['@@transducer/init'] = _xfBase.init;\n  XFindLast.prototype['@@transducer/result'] = function(result) {\n    return this.xf['@@transducer/result'](this.xf['@@transducer/step'](result, this.last));\n  };\n  XFindLast.prototype['@@transducer/step'] = function(result, input) {\n    if (this.f(input)) {\n      this.last = input;\n    }\n    return result;\n  };\n\n  return _curry2(function _xfindLast(f, xf) { return new XFindLast(f, xf); });\n}());\n","var _reduce = require('./internal/_reduce');\nvar _xwrap = require('./internal/_xwrap');\nvar curryN = require('./curryN');\n\n\n/**\n * Initializes a transducer using supplied iterator function. Returns a single\n * item by iterating through the list, successively calling the transformed\n * iterator function and passing it an accumulator value and the current value\n * from the array, and then passing the result to the next call.\n *\n * The iterator function receives two values: *(acc, value)*. It will be\n * wrapped as a transformer to initialize the transducer. A transformer can be\n * passed directly in place of an iterator function. In both cases, iteration\n * may be stopped early with the [`R.reduced`](#reduced) function.\n *\n * A transducer is a function that accepts a transformer and returns a\n * transformer and can be composed directly.\n *\n * A transformer is an an object that provides a 2-arity reducing iterator\n * function, step, 0-arity initial value function, init, and 1-arity result\n * extraction function, result. The step function is used as the iterator\n * function in reduce. The result function is used to convert the final\n * accumulator into the return type and in most cases is\n * [`R.identity`](#identity). The init function can be used to provide an\n * initial accumulator, but is ignored by transduce.\n *\n * The iteration is performed with [`R.reduce`](#reduce) after initializing the transducer.\n *\n * @func\n * @memberOf R\n * @since v0.12.0\n * @category List\n * @sig (c -> c) -> ((a, b) -> a) -> a -> [b] -> a\n * @param {Function} xf The transducer function. Receives a transformer and returns a transformer.\n * @param {Function} fn The iterator function. Receives two values, the accumulator and the\n *        current element from the array. Wrapped as transformer, if necessary, and used to\n *        initialize the transducer\n * @param {*} acc The initial accumulator value.\n * @param {Array} list The list to iterate over.\n * @return {*} The final, accumulated value.\n * @see R.reduce, R.reduced, R.into\n * @example\n *\n *      var numbers = [1, 2, 3, 4];\n *      var transducer = R.compose(R.map(R.add(1)), R.take(2));\n *      R.transduce(transducer, R.flip(R.append), [], numbers); //=> [2, 3]\n *\n *      var isOdd = (x) => x % 2 === 1;\n *      var firstOddTransducer = R.compose(R.filter(isOdd), R.take(1));\n *      R.transduce(firstOddTransducer, R.flip(R.append), [], R.range(0, 100)); //=> [1]\n */\nmodule.exports = curryN(4, function transduce(xf, fn, acc, list) {\n  return _reduce(xf(typeof fn === 'function' ? _xwrap(fn) : fn), acc, list);\n});\n","var _curry1 = require('./_curry1');\nvar _isArray = require('./_isArray');\nvar _isString = require('./_isString');\n\n\n/**\n * Tests whether or not an object is similar to an array.\n *\n * @private\n * @category Type\n * @category List\n * @sig * -> Boolean\n * @param {*} x The object to test.\n * @return {Boolean} `true` if `x` has a numeric length property and extreme indices defined; `false` otherwise.\n * @example\n *\n *      _isArrayLike([]); //=> true\n *      _isArrayLike(true); //=> false\n *      _isArrayLike({}); //=> false\n *      _isArrayLike({length: 10}); //=> false\n *      _isArrayLike({0: 'zero', 9: 'nine', length: 10}); //=> true\n */\nmodule.exports = _curry1(function isArrayLike(x) {\n  if (_isArray(x)) { return true; }\n  if (!x) { return false; }\n  if (typeof x !== 'object') { return false; }\n  if (_isString(x)) { return false; }\n  if (x.nodeType === 1) { return !!x.length; }\n  if (x.length === 0) { return true; }\n  if (x.length > 0) {\n    return x.hasOwnProperty(0) && x.hasOwnProperty(x.length - 1);\n  }\n  return false;\n});\n","var _has = require('./_has');\n\n\nmodule.exports = (function() {\n  var toString = Object.prototype.toString;\n  return toString.call(arguments) === '[object Arguments]' ?\n    function _isArguments(x) { return toString.call(x) === '[object Arguments]'; } :\n    function _isArguments(x) { return _has('callee', x); };\n}());\n","var _curry1 = require('./internal/_curry1');\nvar liftN = require('./liftN');\n\n\n/**\n * \"lifts\" a function of arity > 1 so that it may \"map over\" a list, Function or other\n * object that satisfies the [FantasyLand Apply spec](https://github.com/fantasyland/fantasy-land#apply).\n *\n * @func\n * @memberOf R\n * @since v0.7.0\n * @category Function\n * @sig (*... -> *) -> ([*]... -> [*])\n * @param {Function} fn The function to lift into higher context\n * @return {Function} The lifted function.\n * @see R.liftN\n * @example\n *\n *      var madd3 = R.lift((a, b, c) => a + b + c);\n *\n *      madd3([1,2,3], [1,2,3], [1]); //=> [3, 4, 5, 4, 5, 6, 5, 6, 7]\n *\n *      var madd5 = R.lift((a, b, c, d, e) => a + b + c + d + e);\n *\n *      madd5([1,2], [3], [4, 5], [6], [7, 8]); //=> [21, 22, 22, 23, 22, 23, 23, 24]\n */\nmodule.exports = _curry1(function lift(fn) {\n  return liftN(fn.length, fn);\n});\n","import mod from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/lib/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./LastBeers.vue?vue&type=style&index=0&id=614407ab&scoped=true&lang=css\"; export default mod; export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/lib/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./LastBeers.vue?vue&type=style&index=0&id=614407ab&scoped=true&lang=css\"","var always = require('./always');\n\n\n/**\n * A function that always returns `true`. Any passed in parameters are ignored.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Function\n * @sig * -> Boolean\n * @param {*}\n * @return {Boolean}\n * @see R.always, R.F\n * @example\n *\n *      R.T(); //=> true\n */\nmodule.exports = always(true);\n","var _curry1 = require('./internal/_curry1');\nvar _isNumber = require('./internal/_isNumber');\n\n\n/**\n * Returns the number of elements in the array by returning `list.length`.\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category List\n * @sig [a] -> Number\n * @param {Array} list The array to inspect.\n * @return {Number} The length of the array.\n * @example\n *\n *      R.length([]); //=> 0\n *      R.length([1, 2, 3]); //=> 3\n */\nmodule.exports = _curry1(function length(list) {\n  return list != null && _isNumber(list.length) ? list.length : NaN;\n});\n","var _concat = require('./internal/_concat');\nvar _curry2 = require('./internal/_curry2');\nvar _reduce = require('./internal/_reduce');\nvar map = require('./map');\n\n\n/**\n * ap applies a list of functions to a list of values.\n *\n * Dispatches to the `ap` method of the second argument, if present. Also\n * treats curried functions as applicatives.\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category Function\n * @sig [a -> b] -> [a] -> [b]\n * @sig Apply f => f (a -> b) -> f a -> f b\n * @param {*} applyF\n * @param {*} applyX\n * @return {*}\n * @example\n *\n *      R.ap([R.multiply(2), R.add(3)], [1,2,3]); //=> [2, 4, 6, 4, 5, 6]\n *      R.ap([R.concat('tasty '), R.toUpper], ['pizza', 'salad']); //=> [\"tasty pizza\", \"tasty salad\", \"PIZZA\", \"SALAD\"]\n * @symb R.ap([f, g], [a, b]) = [f(a), f(b), g(a), g(b)]\n */\nmodule.exports = _curry2(function ap(applyF, applyX) {\n  return (\n    typeof applyX['fantasy-land/ap'] === 'function' ?\n      applyX['fantasy-land/ap'](applyF) :\n    typeof applyF.ap === 'function' ?\n      applyF.ap(applyX) :\n    typeof applyF === 'function' ?\n      function(x) { return applyF(x)(applyX(x)); } :\n    // else\n      _reduce(function(acc, f) { return _concat(acc, map(f, applyX)); }, [], applyF)\n  );\n});\n","var _curry3 = require('./internal/_curry3');\nvar equals = require('./equals');\n\n\n/**\n * Takes a function and two values in its domain and returns `true` if the\n * values map to the same value in the codomain; `false` otherwise.\n *\n * @func\n * @memberOf R\n * @since v0.18.0\n * @category Relation\n * @sig (a -> b) -> a -> a -> Boolean\n * @param {Function} f\n * @param {*} x\n * @param {*} y\n * @return {Boolean}\n * @example\n *\n *      R.eqBy(Math.abs, 5, -5); //=> true\n */\nmodule.exports = _curry3(function eqBy(f, x, y) {\n  return equals(f(x), f(y));\n});\n","var _curry2 = require('./_curry2');\nvar _xfBase = require('./_xfBase');\n\n\nmodule.exports = (function() {\n  function XDrop(n, xf) {\n    this.xf = xf;\n    this.n = n;\n  }\n  XDrop.prototype['@@transducer/init'] = _xfBase.init;\n  XDrop.prototype['@@transducer/result'] = _xfBase.result;\n  XDrop.prototype['@@transducer/step'] = function(result, input) {\n    if (this.n > 0) {\n      this.n -= 1;\n      return result;\n    }\n    return this.xf['@@transducer/step'](result, input);\n  };\n\n  return _curry2(function _xdrop(n, xf) { return new XDrop(n, xf); });\n}());\n","var _assign = require('./internal/_assign');\nvar _curry2 = require('./internal/_curry2');\n\n\n/**\n * Create a new object with the own properties of the first object merged with\n * the own properties of the second object. If a key exists in both objects,\n * the value from the second object will be used.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig {k: v} -> {k: v} -> {k: v}\n * @param {Object} l\n * @param {Object} r\n * @return {Object}\n * @see R.mergeDeepRight, R.mergeWith, R.mergeWithKey\n * @example\n *\n *      R.merge({ 'name': 'fred', 'age': 10 }, { 'age': 40 });\n *      //=> { 'name': 'fred', 'age': 40 }\n *\n *      var resetToDefault = R.merge(R.__, {x: 0});\n *      resetToDefault({x: 5, y: 2}); //=> {x: 0, y: 2}\n * @symb R.merge({ x: 1, y: 2 }, { y: 5, z: 3 }) = { x: 1, y: 5, z: 3 }\n */\nmodule.exports = _curry2(function merge(l, r) {\n  return _assign({}, l, r);\n});\n","var _curry2 = require('./internal/_curry2');\nvar _isNumber = require('./internal/_isNumber');\n\n\n/**\n * Returns a list of numbers from `from` (inclusive) to `to` (exclusive).\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Number -> Number -> [Number]\n * @param {Number} from The first number in the list.\n * @param {Number} to One more than the last number in the list.\n * @return {Array} The list of numbers in tthe set `[a, b)`.\n * @example\n *\n *      R.range(1, 5);    //=> [1, 2, 3, 4]\n *      R.range(50, 53);  //=> [50, 51, 52]\n */\nmodule.exports = _curry2(function range(from, to) {\n  if (!(_isNumber(from) && _isNumber(to))) {\n    throw new TypeError('Both arguments to range must be numbers');\n  }\n  var result = [];\n  var n = from;\n  while (n < to) {\n    result.push(n);\n    n += 1;\n  }\n  return result;\n});\n","var slice = require('./slice');\n\n\n/**\n * Returns all but the last element of the given list or string.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category List\n * @sig [a] -> [a]\n * @sig String -> String\n * @param {*} list\n * @return {*}\n * @see R.last, R.head, R.tail\n * @example\n *\n *      R.init([1, 2, 3]);  //=> [1, 2]\n *      R.init([1, 2]);     //=> [1]\n *      R.init([1]);        //=> []\n *      R.init([]);         //=> []\n *\n *      R.init('abc');  //=> 'ab'\n *      R.init('ab');   //=> 'a'\n *      R.init('a');    //=> ''\n *      R.init('');     //=> ''\n */\nmodule.exports = slice(0, -1);\n","var _curry2 = require('./internal/_curry2');\n\n\n/**\n * Returns `true` if the first argument is less than or equal to the second;\n * `false` otherwise.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig Ord a => a -> a -> Boolean\n * @param {Number} a\n * @param {Number} b\n * @return {Boolean}\n * @see R.gte\n * @example\n *\n *      R.lte(2, 1); //=> false\n *      R.lte(2, 2); //=> true\n *      R.lte(2, 3); //=> true\n *      R.lte('a', 'z'); //=> true\n *      R.lte('z', 'a'); //=> false\n */\nmodule.exports = _curry2(function lte(a, b) { return a <= b; });\n","var _curry2 = require('./internal/_curry2');\nvar _isArray = require('./internal/_isArray');\nvar equals = require('./equals');\n\n\n/**\n * Returns the position of the last occurrence of an item in an array, or -1 if\n * the item is not included in the array. [`R.equals`](#equals) is used to\n * determine equality.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig a -> [a] -> Number\n * @param {*} target The item to find.\n * @param {Array} xs The array to search in.\n * @return {Number} the index of the target, or -1 if the target is not found.\n * @see R.indexOf\n * @example\n *\n *      R.lastIndexOf(3, [-1,3,3,0,1,2,3,4]); //=> 6\n *      R.lastIndexOf(10, [1,2,3,4]); //=> -1\n */\nmodule.exports = _curry2(function lastIndexOf(target, xs) {\n  if (typeof xs.lastIndexOf === 'function' && !_isArray(xs)) {\n    return xs.lastIndexOf(target);\n  } else {\n    var idx = xs.length - 1;\n    while (idx >= 0) {\n      if (equals(xs[idx], target)) {\n        return idx;\n      }\n      idx -= 1;\n    }\n    return -1;\n  }\n});\n","var _curry1 = require('./internal/_curry1');\nvar _of = require('./internal/_of');\n\n\n/**\n * Returns a singleton array containing the value provided.\n *\n * Note this `of` is different from the ES6 `of`; See\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/of\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category Function\n * @sig a -> [a]\n * @param {*} x any value\n * @return {Array} An array wrapping `x`.\n * @example\n *\n *      R.of(null); //=> [null]\n *      R.of([42]); //=> [[42]]\n */\nmodule.exports = _curry1(_of);\n","var _curry1 = require('./internal/_curry1');\nvar converge = require('./converge');\n\n\n/**\n * juxt applies a list of functions to a list of values.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category Function\n * @sig [(a, b, ..., m) -> n] -> ((a, b, ..., m) -> [n])\n * @param {Array} fns An array of functions\n * @return {Function} A function that returns a list of values after applying each of the original `fns` to its parameters.\n * @see R.applySpec\n * @example\n *\n *      var getRange = R.juxt([Math.min, Math.max]);\n *      getRange(3, 4, 9, -3); //=> [-3, 9]\n * @symb R.juxt([f, g, h])(a, b) = [f(a, b), g(a, b), h(a, b)]\n */\nmodule.exports = _curry1(function juxt(fns) {\n  return converge(function() { return Array.prototype.slice.call(arguments, 0); }, fns);\n});\n","var _contains = require('./internal/_contains');\nvar _curry2 = require('./internal/_curry2');\nvar flip = require('./flip');\nvar reject = require('./reject');\n\n\n/**\n * Returns a new list without values in the first argument.\n * [`R.equals`](#equals) is used to determine equality.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category List\n * @sig [a] -> [a] -> [a]\n * @param {Array} list1 The values to be removed from `list2`.\n * @param {Array} list2 The array to remove values from.\n * @return {Array} The new array without values in `list1`.\n * @see R.transduce, R.difference\n * @example\n *\n *      R.without([1, 2], [1, 2, 1, 3, 4]); //=> [3, 4]\n */\nmodule.exports = _curry2(function(xs, list) {\n  return reject(flip(_contains)(xs), list);\n});\n","var _curry2 = require('./internal/_curry2');\n\n\n/**\n * Similar to `pick` except that this one includes a `key: undefined` pair for\n * properties that don't exist.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig [k] -> {k: v} -> {k: v}\n * @param {Array} names an array of String property names to copy onto a new object\n * @param {Object} obj The object to copy from\n * @return {Object} A new object with only properties from `names` on it.\n * @see R.pick\n * @example\n *\n *      R.pickAll(['a', 'd'], {a: 1, b: 2, c: 3, d: 4}); //=> {a: 1, d: 4}\n *      R.pickAll(['a', 'e', 'f'], {a: 1, b: 2, c: 3, d: 4}); //=> {a: 1, e: undefined, f: undefined}\n */\nmodule.exports = _curry2(function pickAll(names, obj) {\n  var result = {};\n  var idx = 0;\n  var len = names.length;\n  while (idx < len) {\n    var name = names[idx];\n    result[name] = obj[name];\n    idx += 1;\n  }\n  return result;\n});\n","var _curry3 = require('./internal/_curry3');\nvar map = require('./map');\nvar sequence = require('./sequence');\n\n\n/**\n * Maps an [Applicative](https://github.com/fantasyland/fantasy-land#applicative)-returning\n * function over a [Traversable](https://github.com/fantasyland/fantasy-land#traversable),\n * then uses [`sequence`](#sequence) to transform the resulting Traversable of Applicative\n * into an Applicative of Traversable.\n *\n * Dispatches to the `sequence` method of the third argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category List\n * @sig (Applicative f, Traversable t) => (a -> f a) -> (a -> f b) -> t a -> f (t b)\n * @param {Function} of\n * @param {Function} f\n * @param {*} traversable\n * @return {*}\n * @see R.sequence\n * @example\n *\n *      // Returns `Nothing` if the given divisor is `0`\n *      safeDiv = n => d => d === 0 ? Nothing() : Just(n / d)\n *\n *      R.traverse(Maybe.of, safeDiv(10), [2, 4, 5]); //=> Just([5, 2.5, 2])\n *      R.traverse(Maybe.of, safeDiv(10), [2, 0, 5]); //=> Nothing\n */\nmodule.exports = _curry3(function traverse(of, f, traversable) {\n  return typeof traversable['fantasy-land/traverse'] === 'function' ?\n    traversable['fantasy-land/traverse'](f, of) :\n    sequence(of, map(f, traversable));\n});\n","var _curry3 = require('./internal/_curry3');\n\n\n/**\n * Removes the sub-list of `list` starting at index `start` and containing\n * `count` elements. _Note that this is not destructive_: it returns a copy of\n * the list with the changes.\n * <small>No lists have been harmed in the application of this function.</small>\n *\n * @func\n * @memberOf R\n * @since v0.2.2\n * @category List\n * @sig Number -> Number -> [a] -> [a]\n * @param {Number} start The position to start removing elements\n * @param {Number} count The number of elements to remove\n * @param {Array} list The list to remove from\n * @return {Array} A new Array with `count` elements from `start` removed.\n * @example\n *\n *      R.remove(2, 3, [1,2,3,4,5,6,7,8]); //=> [1,2,6,7,8]\n */\nmodule.exports = _curry3(function remove(start, count, list) {\n  var result = Array.prototype.slice.call(list, 0);\n  result.splice(start, count);\n  return result;\n});\n","import mod from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/lib/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Home.vue?vue&type=style&index=0&id=18d27954&scoped=true&lang=css\"; export default mod; export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/lib/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Home.vue?vue&type=style&index=0&id=18d27954&scoped=true&lang=css\"","var _complement = require('./internal/_complement');\nvar _curry2 = require('./internal/_curry2');\nvar _dispatchable = require('./internal/_dispatchable');\nvar _xany = require('./internal/_xany');\nvar any = require('./any');\n\n\n/**\n * Returns `true` if no elements of the list match the predicate, `false`\n * otherwise.\n *\n * Dispatches to the `any` method of the second argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.12.0\n * @category List\n * @sig (a -> Boolean) -> [a] -> Boolean\n * @param {Function} fn The predicate function.\n * @param {Array} list The array to consider.\n * @return {Boolean} `true` if the predicate is not satisfied by every element, `false` otherwise.\n * @see R.all, R.any\n * @example\n *\n *      var isEven = n => n % 2 === 0;\n *\n *      R.none(isEven, [1, 3, 5, 7, 9, 11]); //=> true\n *      R.none(isEven, [1, 3, 5, 7, 8, 11]); //=> false\n */\nmodule.exports = _curry2(_complement(_dispatchable(['any'], _xany, any)));\n","var _curry2 = require('./_curry2');\nvar _xfBase = require('./_xfBase');\n\n\nmodule.exports = (function() {\n  function XMap(f, xf) {\n    this.xf = xf;\n    this.f = f;\n  }\n  XMap.prototype['@@transducer/init'] = _xfBase.init;\n  XMap.prototype['@@transducer/result'] = _xfBase.result;\n  XMap.prototype['@@transducer/step'] = function(result, input) {\n    return this.xf['@@transducer/step'](result, this.f(input));\n  };\n\n  return _curry2(function _xmap(f, xf) { return new XMap(f, xf); });\n}());\n","import mod from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/lib/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./CheckinsProvider.vue?vue&type=style&index=0&lang=css\"; export default mod; export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/lib/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./CheckinsProvider.vue?vue&type=style&index=0&lang=css\"","var _curry3 = require('./internal/_curry3');\n\n\n/**\n * Makes an ascending comparator function out of a function that returns a value\n * that can be compared with `<` and `>`.\n *\n * @func\n * @memberOf R\n * @since v0.23.0\n * @category Function\n * @sig Ord b => (a -> b) -> a -> a -> Number\n * @param {Function} fn A function of arity one that returns a value that can be compared\n * @param {*} a The first item to be compared.\n * @param {*} b The second item to be compared.\n * @return {Number} `-1` if fn(a) < fn(b), `1` if fn(b) < fn(a), otherwise `0`\n * @see R.descend\n * @example\n *\n *      var byAge = R.ascend(R.prop('age'));\n *      var people = [\n *        // ...\n *      ];\n *      var peopleByYoungestFirst = R.sort(byAge, people);\n */\nmodule.exports = _curry3(function ascend(fn, a, b) {\n  var aa = fn(a);\n  var bb = fn(b);\n  return aa < bb ? -1 : aa > bb ? 1 : 0;\n});\n","var _contains = require('./internal/_contains');\nvar _curry2 = require('./internal/_curry2');\nvar _filter = require('./internal/_filter');\nvar flip = require('./flip');\nvar uniq = require('./uniq');\n\n\n/**\n * Combines two lists into a set (i.e. no duplicates) composed of those\n * elements common to both lists.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig [*] -> [*] -> [*]\n * @param {Array} list1 The first list.\n * @param {Array} list2 The second list.\n * @return {Array} The list of elements found in both `list1` and `list2`.\n * @see R.innerJoin\n * @example\n *\n *      R.intersection([1,2,3,4], [7,6,5,4,3]); //=> [4, 3]\n */\nmodule.exports = _curry2(function intersection(list1, list2) {\n  var lookupList, filteredList;\n  if (list1.length > list2.length) {\n    lookupList = list1;\n    filteredList = list2;\n  } else {\n    lookupList = list2;\n    filteredList = list1;\n  }\n  return uniq(_filter(flip(_contains)(lookupList), filteredList));\n});\n","var _curry2 = require('./internal/_curry2');\nvar _reduce = require('./internal/_reduce');\nvar ap = require('./ap');\nvar curryN = require('./curryN');\nvar map = require('./map');\n\n\n/**\n * \"lifts\" a function to be the specified arity, so that it may \"map over\" that\n * many lists, Functions or other objects that satisfy the [FantasyLand Apply spec](https://github.com/fantasyland/fantasy-land#apply).\n *\n * @func\n * @memberOf R\n * @since v0.7.0\n * @category Function\n * @sig Number -> (*... -> *) -> ([*]... -> [*])\n * @param {Function} fn The function to lift into higher context\n * @return {Function} The lifted function.\n * @see R.lift, R.ap\n * @example\n *\n *      var madd3 = R.liftN(3, (...args) => R.sum(args));\n *      madd3([1,2,3], [1,2,3], [1]); //=> [3, 4, 5, 4, 5, 6, 5, 6, 7]\n */\nmodule.exports = _curry2(function liftN(arity, fn) {\n  var lifted = curryN(arity, fn);\n  return curryN(arity, function() {\n    return _reduce(ap, map(lifted, arguments[0]), Array.prototype.slice.call(arguments, 1));\n  });\n});\n","var _curry2 = require('./_curry2');\nvar _xfBase = require('./_xfBase');\n\n\nmodule.exports = (function() {\n  function XDropLast(n, xf) {\n    this.xf = xf;\n    this.pos = 0;\n    this.full = false;\n    this.acc = new Array(n);\n  }\n  XDropLast.prototype['@@transducer/init'] = _xfBase.init;\n  XDropLast.prototype['@@transducer/result'] =  function(result) {\n    this.acc = null;\n    return this.xf['@@transducer/result'](result);\n  };\n  XDropLast.prototype['@@transducer/step'] = function(result, input) {\n    if (this.full) {\n      result = this.xf['@@transducer/step'](result, this.acc[this.pos]);\n    }\n    this.store(input);\n    return result;\n  };\n  XDropLast.prototype.store = function(input) {\n    this.acc[this.pos] = input;\n    this.pos += 1;\n    if (this.pos === this.acc.length) {\n      this.pos = 0;\n      this.full = true;\n    }\n  };\n\n  return _curry2(function _xdropLast(n, xf) { return new XDropLast(n, xf); });\n}());\n","var _curry3 = require('./internal/_curry3');\n\n\n/**\n * Inserts the sub-list into the list, at the specified `index`. _Note that this is not\n * destructive_: it returns a copy of the list with the changes.\n * <small>No lists have been harmed in the application of this function.</small>\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category List\n * @sig Number -> [a] -> [a] -> [a]\n * @param {Number} index The position to insert the sub-list\n * @param {Array} elts The sub-list to insert into the Array\n * @param {Array} list The list to insert the sub-list into\n * @return {Array} A new Array with `elts` inserted starting at `index`.\n * @example\n *\n *      R.insertAll(2, ['x','y','z'], [1,2,3,4]); //=> [1,2,'x','y','z',3,4]\n */\nmodule.exports = _curry3(function insertAll(idx, elts, list) {\n  idx = idx < list.length && idx >= 0 ? idx : list.length;\n  return [].concat(Array.prototype.slice.call(list, 0, idx),\n                   elts,\n                   Array.prototype.slice.call(list, idx));\n});\n","var memoizeWith = require('./memoizeWith');\nvar toString = require('./toString');\n\n\n/**\n * Creates a new function that, when invoked, caches the result of calling `fn`\n * for a given argument set and returns the result. Subsequent calls to the\n * memoized `fn` with the same argument set will not result in an additional\n * call to `fn`; instead, the cached result for that set of arguments will be\n * returned.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig (*... -> a) -> (*... -> a)\n * @param {Function} fn The function to memoize.\n * @return {Function} Memoized version of `fn`.\n * @see R.memoizeWith\n * @example\n *\n *      let count = 0;\n *      const factorial = R.memoize(n => {\n *        count += 1;\n *        return R.product(R.range(1, n + 1));\n *      });\n *      factorial(5); //=> 120\n *      factorial(5); //=> 120\n *      factorial(5); //=> 120\n *      count; //=> 1\n */\nmodule.exports = memoizeWith(function() {\n  return toString(arguments);\n});\n","var _curry3 = require('./internal/_curry3');\n\n\n/**\n * Tests the final argument by passing it to the given predicate function. If\n * the predicate is not satisfied, the function will return the result of\n * calling the `whenFalseFn` function with the same argument. If the predicate\n * is satisfied, the argument is returned as is.\n *\n * @func\n * @memberOf R\n * @since v0.18.0\n * @category Logic\n * @sig (a -> Boolean) -> (a -> a) -> a -> a\n * @param {Function} pred        A predicate function\n * @param {Function} whenFalseFn A function to invoke when the `pred` evaluates\n *                               to a falsy value.\n * @param {*}        x           An object to test with the `pred` function and\n *                               pass to `whenFalseFn` if necessary.\n * @return {*} Either `x` or the result of applying `x` to `whenFalseFn`.\n * @see R.ifElse, R.when\n * @example\n *\n *      let safeInc = R.unless(R.isNil, R.inc);\n *      safeInc(null); //=> null\n *      safeInc(1); //=> 2\n */\nmodule.exports = _curry3(function unless(pred, whenFalseFn, x) {\n  return pred(x) ? x : whenFalseFn(x);\n});\n","var always = require('./always');\n\n\n/**\n * A function that always returns `false`. Any passed in parameters are ignored.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Function\n * @sig * -> Boolean\n * @param {*}\n * @return {Boolean}\n * @see R.always, R.T\n * @example\n *\n *      R.F(); //=> false\n */\nmodule.exports = always(false);\n","var _curry1 = require('./internal/_curry1');\n\n\n/**\n * Returns a list of all the properties, including prototype properties, of the\n * supplied object.\n * Note that the order of the output array is not guaranteed to be consistent\n * across different JS platforms.\n *\n * @func\n * @memberOf R\n * @since v0.2.0\n * @category Object\n * @sig {k: v} -> [v]\n * @param {Object} obj The object to extract values from\n * @return {Array} An array of the values of the object's own and prototype properties.\n * @see R.values, R.keysIn\n * @example\n *\n *      var F = function() { this.x = 'X'; };\n *      F.prototype.y = 'Y';\n *      var f = new F();\n *      R.valuesIn(f); //=> ['X', 'Y']\n */\nmodule.exports = _curry1(function valuesIn(obj) {\n  var prop;\n  var vs = [];\n  for (prop in obj) {\n    vs[vs.length] = obj[prop];\n  }\n  return vs;\n});\n","var _indexOf = require('./_indexOf');\n\n\nmodule.exports = function _contains(a, list) {\n  return _indexOf(list, a, 0) >= 0;\n};\n","var _curry1 = require('./internal/_curry1');\n\n\n/**\n * Negates its argument.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Math\n * @sig Number -> Number\n * @param {Number} n\n * @return {Number}\n * @example\n *\n *      R.negate(42); //=> -42\n */\nmodule.exports = _curry1(function negate(n) { return -n; });\n","var _arity = require('./_arity');\nvar _isPlaceholder = require('./_isPlaceholder');\n\n\n/**\n * Internal curryN function.\n *\n * @private\n * @category Function\n * @param {Number} length The arity of the curried function.\n * @param {Array} received An array of arguments received thus far.\n * @param {Function} fn The function to curry.\n * @return {Function} The curried function.\n */\nmodule.exports = function _curryN(length, received, fn) {\n  return function() {\n    var combined = [];\n    var argsIdx = 0;\n    var left = length;\n    var combinedIdx = 0;\n    while (combinedIdx < received.length || argsIdx < arguments.length) {\n      var result;\n      if (combinedIdx < received.length &&\n          (!_isPlaceholder(received[combinedIdx]) ||\n           argsIdx >= arguments.length)) {\n        result = received[combinedIdx];\n      } else {\n        result = arguments[argsIdx];\n        argsIdx += 1;\n      }\n      combined[combinedIdx] = result;\n      if (!_isPlaceholder(result)) {\n        left -= 1;\n      }\n      combinedIdx += 1;\n    }\n    return left <= 0 ? fn.apply(this, combined)\n                     : _arity(left, _curryN(length, combined, fn));\n  };\n};\n","module.exports = {\n  init: function() {\n    return this.xf['@@transducer/init']();\n  },\n  result: function(result) {\n    return this.xf['@@transducer/result'](result);\n  }\n};\n","var _contains = require('./internal/_contains');\nvar _curry2 = require('./internal/_curry2');\n\n\n/**\n * Returns `true` if the specified value is equal, in [`R.equals`](#equals)\n * terms, to at least one element of the given list; `false` otherwise.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig a -> [a] -> Boolean\n * @param {Object} a The item to compare against.\n * @param {Array} list The array to consider.\n * @return {Boolean} `true` if an equivalent item is in the list, `false` otherwise.\n * @see R.any\n * @example\n *\n *      R.contains(3, [1, 2, 3]); //=> true\n *      R.contains(4, [1, 2, 3]); //=> false\n *      R.contains({ name: 'Fred' }, [{ name: 'Fred' }]); //=> true\n *      R.contains([42], [[42]]); //=> true\n */\nmodule.exports = _curry2(_contains);\n","var _checkForMethod = require('./internal/_checkForMethod');\nvar _curry1 = require('./internal/_curry1');\nvar slice = require('./slice');\n\n\n/**\n * Returns all but the first element of the given list or string (or object\n * with a `tail` method).\n *\n * Dispatches to the `slice` method of the first argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig [a] -> [a]\n * @sig String -> String\n * @param {*} list\n * @return {*}\n * @see R.head, R.init, R.last\n * @example\n *\n *      R.tail([1, 2, 3]);  //=> [2, 3]\n *      R.tail([1, 2]);     //=> [2]\n *      R.tail([1]);        //=> []\n *      R.tail([]);         //=> []\n *\n *      R.tail('abc');  //=> 'bc'\n *      R.tail('ab');   //=> 'b'\n *      R.tail('a');    //=> ''\n *      R.tail('');     //=> ''\n */\nmodule.exports = _curry1(_checkForMethod('tail', slice(1, Infinity)));\n","var _curry2 = require('./internal/_curry2');\n\n\n/**\n * Returns `true` if both arguments are `true`; `false` otherwise.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Logic\n * @sig a -> b -> a | b\n * @param {Any} a\n * @param {Any} b\n * @return {Any} the first argument if it is falsy, otherwise the second argument.\n * @see R.both\n * @example\n *\n *      R.and(true, true); //=> true\n *      R.and(true, false); //=> false\n *      R.and(false, true); //=> false\n *      R.and(false, false); //=> false\n */\nmodule.exports = _curry2(function and(a, b) {\n  return a && b;\n});\n","var _curry2 = require('./internal/_curry2');\n\n\n/**\n * Returns `true` if the first argument is greater than or equal to the second;\n * `false` otherwise.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig Ord a => a -> a -> Boolean\n * @param {Number} a\n * @param {Number} b\n * @return {Boolean}\n * @see R.lte\n * @example\n *\n *      R.gte(2, 1); //=> true\n *      R.gte(2, 2); //=> true\n *      R.gte(2, 3); //=> false\n *      R.gte('a', 'z'); //=> false\n *      R.gte('z', 'a'); //=> true\n */\nmodule.exports = _curry2(function gte(a, b) { return a >= b; });\n","var _concat = require('./internal/_concat');\nvar _curry1 = require('./internal/_curry1');\nvar curryN = require('./curryN');\n\n\n/**\n * Creates a new list iteration function from an existing one by adding two new\n * parameters to its callback function: the current index, and the entire list.\n *\n * This would turn, for instance, [`R.map`](#map) function into one that\n * more closely resembles `Array.prototype.map`. Note that this will only work\n * for functions in which the iteration callback function is the first\n * parameter, and where the list is the last parameter. (This latter might be\n * unimportant if the list parameter is not used.)\n *\n * @func\n * @memberOf R\n * @since v0.15.0\n * @category Function\n * @category List\n * @sig ((a ... -> b) ... -> [a] -> *) -> (a ..., Int, [a] -> b) ... -> [a] -> *)\n * @param {Function} fn A list iteration function that does not pass index or list to its callback\n * @return {Function} An altered list iteration function that passes (item, index, list) to its callback\n * @example\n *\n *      var mapIndexed = R.addIndex(R.map);\n *      mapIndexed((val, idx) => idx + '-' + val, ['f', 'o', 'o', 'b', 'a', 'r']);\n *      //=> ['0-f', '1-o', '2-o', '3-b', '4-a', '5-r']\n */\nmodule.exports = _curry1(function addIndex(fn) {\n  return curryN(fn.length, function() {\n    var idx = 0;\n    var origFn = arguments[0];\n    var list = arguments[arguments.length - 1];\n    var args = Array.prototype.slice.call(arguments, 0);\n    args[0] = function() {\n      var result = origFn.apply(this, _concat(arguments, [idx, list]));\n      idx += 1;\n      return result;\n    };\n    return fn.apply(this, args);\n  });\n});\n","var identity = require('./identity');\nvar uniqBy = require('./uniqBy');\n\n\n/**\n * Returns a new list containing only one copy of each element in the original\n * list. [`R.equals`](#equals) is used to determine equality.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig [a] -> [a]\n * @param {Array} list The array to consider.\n * @return {Array} The list of unique items.\n * @example\n *\n *      R.uniq([1, 1, 2, 1]); //=> [1, 2]\n *      R.uniq([1, '1']);     //=> [1, '1']\n *      R.uniq([[42], [42]]); //=> [[42]]\n */\nmodule.exports = uniqBy(identity);\n","var _curry1 = require('./internal/_curry1');\nvar keys = require('./keys');\n\n\n/**\n * Returns a new object with the keys of the given object as values, and the\n * values of the given object, which are coerced to strings, as keys. Note\n * that the last key found is preferred when handling the same value.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Object\n * @sig {s: x} -> {x: s}\n * @param {Object} obj The object or array to invert\n * @return {Object} out A new object\n * @see R.invert\n * @example\n *\n *      var raceResults = {\n *        first: 'alice',\n *        second: 'jake'\n *      };\n *      R.invertObj(raceResults);\n *      //=> { 'alice': 'first', 'jake':'second' }\n *\n *      // Alternatively:\n *      var raceResults = ['alice', 'jake'];\n *      R.invertObj(raceResults);\n *      //=> { 'alice': '0', 'jake':'1' }\n */\nmodule.exports = _curry1(function invertObj(obj) {\n  var props = keys(obj);\n  var len = props.length;\n  var idx = 0;\n  var out = {};\n\n  while (idx < len) {\n    var key = props[idx];\n    out[obj[key]] = key;\n    idx += 1;\n  }\n  return out;\n});\n","module.exports = function _complement(f) {\n  return function() {\n    return !f.apply(this, arguments);\n  };\n};\n","var _curry2 = require('./internal/_curry2');\n\n\n/**\n * Builds a list from a seed value. Accepts an iterator function, which returns\n * either false to stop iteration or an array of length 2 containing the value\n * to add to the resulting list and the seed to be used in the next call to the\n * iterator function.\n *\n * The iterator function receives one argument: *(seed)*.\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category List\n * @sig (a -> [b]) -> * -> [b]\n * @param {Function} fn The iterator function. receives one argument, `seed`, and returns\n *        either false to quit iteration or an array of length two to proceed. The element\n *        at index 0 of this array will be added to the resulting array, and the element\n *        at index 1 will be passed to the next call to `fn`.\n * @param {*} seed The seed value.\n * @return {Array} The final list.\n * @example\n *\n *      var f = n => n > 50 ? false : [-n, n + 10];\n *      R.unfold(f, 10); //=> [-10, -20, -30, -40, -50]\n * @symb R.unfold(f, x) = [f(x)[0], f(f(x)[1])[0], f(f(f(x)[1])[1])[0], ...]\n */\nmodule.exports = _curry2(function unfold(fn, seed) {\n  var pair = fn(seed);\n  var result = [];\n  while (pair && pair.length) {\n    result[result.length] = pair[0];\n    pair = fn(pair[1]);\n  }\n  return result;\n});\n","var _curry2 = require('./internal/_curry2');\n\n\n/**\n * Runs the given function with the supplied object, then returns the object.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig (a -> *) -> a -> a\n * @param {Function} fn The function to call with `x`. The return value of `fn` will be thrown away.\n * @param {*} x\n * @return {*} `x`.\n * @example\n *\n *      var sayX = x => console.log('x is ' + x);\n *      R.tap(sayX, 100); //=> 100\n *      // logs 'x is 100'\n * @symb R.tap(f, a) = a\n */\nmodule.exports = _curry2(function tap(fn, x) {\n  fn(x);\n  return x;\n});\n","var _curry3 = require('./internal/_curry3');\n\n\n/**\n * Returns a single item by iterating through the list, successively calling\n * the iterator function and passing it an accumulator value and the current\n * value from the array, and then passing the result to the next call.\n *\n * Similar to [`reduce`](#reduce), except moves through the input list from the\n * right to the left.\n *\n * The iterator function receives two values: *(value, acc)*, while the arguments'\n * order of `reduce`'s iterator function is *(acc, value)*.\n *\n * Note: `R.reduceRight` does not skip deleted or unassigned indices (sparse\n * arrays), unlike the native `Array.prototype.reduceRight` method. For more details\n * on this behavior, see:\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduceRight#Description\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig (a, b -> b) -> b -> [a] -> b\n * @param {Function} fn The iterator function. Receives two values, the current element from the array\n *        and the accumulator.\n * @param {*} acc The accumulator value.\n * @param {Array} list The list to iterate over.\n * @return {*} The final, accumulated value.\n * @see R.reduce, R.addIndex\n * @example\n *\n *      R.reduceRight(R.subtract, 0, [1, 2, 3, 4]) // => (1 - (2 - (3 - (4 - 0)))) = -2\n *          -               -2\n *         / \\              / \\\n *        1   -            1   3\n *           / \\              / \\\n *          2   -     ==>    2  -1\n *             / \\              / \\\n *            3   -            3   4\n *               / \\              / \\\n *              4   0            4   0\n *\n * @symb R.reduceRight(f, a, [b, c, d]) = f(b, f(c, f(d, a)))\n */\nmodule.exports = _curry3(function reduceRight(fn, acc, list) {\n  var idx = list.length - 1;\n  while (idx >= 0) {\n    acc = fn(list[idx], acc);\n    idx -= 1;\n  }\n  return acc;\n});\n","var add = require('./add');\nvar reduce = require('./reduce');\n\n\n/**\n * Adds together all the elements of a list.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Math\n * @sig [Number] -> Number\n * @param {Array} list An array of numbers\n * @return {Number} The sum of all the numbers in the list.\n * @see R.reduce\n * @example\n *\n *      R.sum([2,4,6,8,100,1]); //=> 121\n */\nmodule.exports = reduce(add, 0);\n","var _curry2 = require('./internal/_curry2');\nvar curry = require('./curry');\nvar nAry = require('./nAry');\n\n\n/**\n * Wraps a constructor function inside a curried function that can be called\n * with the same arguments and returns the same type. The arity of the function\n * returned is specified to allow using variadic constructor functions.\n *\n * @func\n * @memberOf R\n * @since v0.4.0\n * @category Function\n * @sig Number -> (* -> {*}) -> (* -> {*})\n * @param {Number} n The arity of the constructor function.\n * @param {Function} Fn The constructor function to wrap.\n * @return {Function} A wrapped, curried constructor function.\n * @example\n *\n *      // Variadic Constructor function\n *      function Salad() {\n *        this.ingredients = arguments;\n *      };\n *      Salad.prototype.recipe = function() {\n *        var instructions = R.map((ingredient) => (\n *          'Add a whollop of ' + ingredient, this.ingredients)\n *        )\n *        return R.join('\\n', instructions)\n *      }\n *\n *      var ThreeLayerSalad = R.constructN(3, Salad)\n *\n *      // Notice we no longer need the 'new' keyword, and the constructor is curried for 3 arguments.\n *      var salad = ThreeLayerSalad('Mayonnaise')('Potato Chips')('Ketchup')\n *      console.log(salad.recipe());\n *      // Add a whollop of Mayonnaise\n *      // Add a whollop of Potato Chips\n *      // Add a whollop of Potato Ketchup\n */\nmodule.exports = _curry2(function constructN(n, Fn) {\n  if (n > 10) {\n    throw new Error('Constructor with greater than ten arguments');\n  }\n  if (n === 0) {\n    return function() { return new Fn(); };\n  }\n  return curry(nAry(n, function($0, $1, $2, $3, $4, $5, $6, $7, $8, $9) {\n    switch (arguments.length) {\n      case  1: return new Fn($0);\n      case  2: return new Fn($0, $1);\n      case  3: return new Fn($0, $1, $2);\n      case  4: return new Fn($0, $1, $2, $3);\n      case  5: return new Fn($0, $1, $2, $3, $4);\n      case  6: return new Fn($0, $1, $2, $3, $4, $5);\n      case  7: return new Fn($0, $1, $2, $3, $4, $5, $6);\n      case  8: return new Fn($0, $1, $2, $3, $4, $5, $6, $7);\n      case  9: return new Fn($0, $1, $2, $3, $4, $5, $6, $7, $8);\n      case 10: return new Fn($0, $1, $2, $3, $4, $5, $6, $7, $8, $9);\n    }\n  }));\n});\n","var _curry2 = require('./internal/_curry2');\nvar keys = require('./keys');\n\n\n/**\n * Iterate over an input `object`, calling a provided function `fn` for each\n * key and value in the object.\n *\n * `fn` receives three argument: *(value, key, obj)*.\n *\n * @func\n * @memberOf R\n * @since v0.23.0\n * @category Object\n * @sig ((a, String, StrMap a) -> Any) -> StrMap a -> StrMap a\n * @param {Function} fn The function to invoke. Receives three argument, `value`, `key`, `obj`.\n * @param {Object} obj The object to iterate over.\n * @return {Object} The original object.\n * @example\n *\n *      var printKeyConcatValue = (value, key) => console.log(key + ':' + value);\n *      R.forEachObjIndexed(printKeyConcatValue, {x: 1, y: 2}); //=> {x: 1, y: 2}\n *      // logs x:1\n *      // logs y:2\n * @symb R.forEachObjIndexed(f, {x: a, y: b}) = {x: a, y: b}\n */\nmodule.exports = _curry2(function forEachObjIndexed(fn, obj) {\n  var keyList = keys(obj);\n  var idx = 0;\n  while (idx < keyList.length) {\n    var key = keyList[idx];\n    fn(obj[key], key, obj);\n    idx += 1;\n  }\n  return obj;\n});\n","var composeK = require('./composeK');\nvar reverse = require('./reverse');\n\n/**\n * Returns the left-to-right Kleisli composition of the provided functions,\n * each of which must return a value of a type supported by [`chain`](#chain).\n *\n * `R.pipeK(f, g, h)` is equivalent to `R.pipe(R.chain(f), R.chain(g), R.chain(h))`.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category Function\n * @sig Chain m => ((a -> m b), (b -> m c), ..., (y -> m z)) -> (a -> m z)\n * @param {...Function}\n * @return {Function}\n * @see R.composeK\n * @example\n *\n *      //  parseJson :: String -> Maybe *\n *      //  get :: String -> Object -> Maybe *\n *\n *      //  getStateCode :: Maybe String -> Maybe String\n *      var getStateCode = R.pipeK(\n *        parseJson,\n *        get('user'),\n *        get('address'),\n *        get('state'),\n *        R.compose(Maybe.of, R.toUpper)\n *      );\n *\n *      getStateCode('{\"user\":{\"address\":{\"state\":\"ny\"}}}');\n *      //=> Just('NY')\n *      getStateCode('[Invalid JSON]');\n *      //=> Nothing()\n * @symb R.pipeK(f, g, h)(a) = R.chain(h, R.chain(g, f(a)))\n */\nmodule.exports = function pipeK() {\n  if (arguments.length === 0) {\n    throw new Error('pipeK requires at least one argument');\n  }\n  return composeK.apply(this, reverse(arguments));\n};\n","var _isArrayLike = require('./_isArrayLike');\nvar _xwrap = require('./_xwrap');\nvar bind = require('../bind');\n\n\nmodule.exports = (function() {\n  function _arrayReduce(xf, acc, list) {\n    var idx = 0;\n    var len = list.length;\n    while (idx < len) {\n      acc = xf['@@transducer/step'](acc, list[idx]);\n      if (acc && acc['@@transducer/reduced']) {\n        acc = acc['@@transducer/value'];\n        break;\n      }\n      idx += 1;\n    }\n    return xf['@@transducer/result'](acc);\n  }\n\n  function _iterableReduce(xf, acc, iter) {\n    var step = iter.next();\n    while (!step.done) {\n      acc = xf['@@transducer/step'](acc, step.value);\n      if (acc && acc['@@transducer/reduced']) {\n        acc = acc['@@transducer/value'];\n        break;\n      }\n      step = iter.next();\n    }\n    return xf['@@transducer/result'](acc);\n  }\n\n  function _methodReduce(xf, acc, obj, methodName) {\n    return xf['@@transducer/result'](obj[methodName](bind(xf['@@transducer/step'], xf), acc));\n  }\n\n  var symIterator = (typeof Symbol !== 'undefined') ? Symbol.iterator : '@@iterator';\n  return function _reduce(fn, acc, list) {\n    if (typeof fn === 'function') {\n      fn = _xwrap(fn);\n    }\n    if (_isArrayLike(list)) {\n      return _arrayReduce(fn, acc, list);\n    }\n    if (typeof list['fantasy-land/reduce'] === 'function') {\n      return _methodReduce(fn, acc, list, 'fantasy-land/reduce');\n    }\n    if (list[symIterator] != null) {\n      return _iterableReduce(fn, acc, list[symIterator]());\n    }\n    if (typeof list.next === 'function') {\n      return _iterableReduce(fn, acc, list);\n    }\n    if (typeof list.reduce === 'function') {\n      return _methodReduce(fn, acc, list, 'reduce');\n    }\n\n    throw new TypeError('reduce: list must be array or iterable');\n  };\n}());\n","var _curryN = require('./_curryN');\nvar _has = require('./_has');\nvar _xfBase = require('./_xfBase');\n\n\nmodule.exports = (function() {\n  function XReduceBy(valueFn, valueAcc, keyFn, xf) {\n    this.valueFn = valueFn;\n    this.valueAcc = valueAcc;\n    this.keyFn = keyFn;\n    this.xf = xf;\n    this.inputs = {};\n  }\n  XReduceBy.prototype['@@transducer/init'] = _xfBase.init;\n  XReduceBy.prototype['@@transducer/result'] = function(result) {\n    var key;\n    for (key in this.inputs) {\n      if (_has(key, this.inputs)) {\n        result = this.xf['@@transducer/step'](result, this.inputs[key]);\n        if (result['@@transducer/reduced']) {\n          result = result['@@transducer/value'];\n          break;\n        }\n      }\n    }\n    this.inputs = null;\n    return this.xf['@@transducer/result'](result);\n  };\n  XReduceBy.prototype['@@transducer/step'] = function(result, input) {\n    var key = this.keyFn(input);\n    this.inputs[key] = this.inputs[key] || [key, this.valueAcc];\n    this.inputs[key][1] = this.valueFn(this.inputs[key][1], input);\n    return result;\n  };\n\n  return _curryN(4, [],\n                 function _xreduceBy(valueFn, valueAcc, keyFn, xf) {\n                   return new XReduceBy(valueFn, valueAcc, keyFn, xf);\n                 });\n}());\n","var _curry2 = require('./internal/_curry2');\nvar _isFunction = require('./internal/_isFunction');\nvar curryN = require('./curryN');\nvar toString = require('./toString');\n\n\n/**\n * Turns a named method with a specified arity into a function that can be\n * called directly supplied with arguments and a target object.\n *\n * The returned function is curried and accepts `arity + 1` parameters where\n * the final parameter is the target object.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig Number -> String -> (a -> b -> ... -> n -> Object -> *)\n * @param {Number} arity Number of arguments the returned function should take\n *        before the target object.\n * @param {String} method Name of the method to call.\n * @return {Function} A new curried function.\n * @see R.construct\n * @example\n *\n *      var sliceFrom = R.invoker(1, 'slice');\n *      sliceFrom(6, 'abcdefghijklm'); //=> 'ghijklm'\n *      var sliceFrom6 = R.invoker(2, 'slice')(6);\n *      sliceFrom6(8, 'abcdefghijklm'); //=> 'gh'\n * @symb R.invoker(0, 'method')(o) = o['method']()\n * @symb R.invoker(1, 'method')(a, o) = o['method'](a)\n * @symb R.invoker(2, 'method')(a, b, o) = o['method'](a, b)\n */\nmodule.exports = _curry2(function invoker(arity, method) {\n  return curryN(arity + 1, function() {\n    var target = arguments[arity];\n    if (target != null && _isFunction(target[method])) {\n      return target[method].apply(target, Array.prototype.slice.call(arguments, 0, arity));\n    }\n    throw new TypeError(toString(target) + ' does not have a method named \"' + method + '\"');\n  });\n});\n","var _curry2 = require('./internal/_curry2');\n\n\n/**\n * Divides the first parameter by the second and returns the remainder. Note\n * that this function preserves the JavaScript-style behavior for modulo. For\n * mathematical modulo see [`mathMod`](#mathMod).\n *\n * @func\n * @memberOf R\n * @since v0.1.1\n * @category Math\n * @sig Number -> Number -> Number\n * @param {Number} a The value to the divide.\n * @param {Number} b The pseudo-modulus\n * @return {Number} The result of `b % a`.\n * @see R.mathMod\n * @example\n *\n *      R.modulo(17, 3); //=> 2\n *      // JS behavior:\n *      R.modulo(-17, 3); //=> -2\n *      R.modulo(17, -3); //=> 2\n *\n *      var isOdd = R.modulo(R.__, 2);\n *      isOdd(42); //=> 0\n *      isOdd(21); //=> 1\n */\nmodule.exports = _curry2(function modulo(a, b) { return a % b; });\n","var _curry3 = require('./internal/_curry3');\nvar equals = require('./equals');\n\n\n/**\n * Returns `true` if the specified object property is equal, in\n * [`R.equals`](#equals) terms, to the given value; `false` otherwise.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig String -> a -> Object -> Boolean\n * @param {String} name\n * @param {*} val\n * @param {*} obj\n * @return {Boolean}\n * @see R.equals, R.propSatisfies\n * @example\n *\n *      var abby = {name: 'Abby', age: 7, hair: 'blond'};\n *      var fred = {name: 'Fred', age: 12, hair: 'brown'};\n *      var rusty = {name: 'Rusty', age: 10, hair: 'brown'};\n *      var alois = {name: 'Alois', age: 15, disposition: 'surly'};\n *      var kids = [abby, fred, rusty, alois];\n *      var hasBrownHair = R.propEq('hair', 'brown');\n *      R.filter(hasBrownHair, kids); //=> [fred, rusty]\n */\nmodule.exports = _curry3(function propEq(name, val, obj) {\n  return equals(val, obj[name]);\n});\n","var _curry3 = require('./internal/_curry3');\nvar is = require('./is');\n\n\n/**\n * Returns `true` if the specified object property is of the given type;\n * `false` otherwise.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category Type\n * @sig Type -> String -> Object -> Boolean\n * @param {Function} type\n * @param {String} name\n * @param {*} obj\n * @return {Boolean}\n * @see R.is, R.propSatisfies\n * @example\n *\n *      R.propIs(Number, 'x', {x: 1, y: 2});  //=> true\n *      R.propIs(Number, 'x', {x: 'foo'});    //=> false\n *      R.propIs(Number, 'x', {});            //=> false\n */\nmodule.exports = _curry3(function propIs(type, name, obj) {\n  return is(type, obj[name]);\n});\n","var _containsWith = require('./internal/_containsWith');\nvar _curry3 = require('./internal/_curry3');\n\n\n/**\n * Finds the set (i.e. no duplicates) of all elements in the first list not\n * contained in the second list. Duplication is determined according to the\n * value returned by applying the supplied predicate to two list elements.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig ((a, a) -> Boolean) -> [a] -> [a] -> [a]\n * @param {Function} pred A predicate used to test whether two items are equal.\n * @param {Array} list1 The first list.\n * @param {Array} list2 The second list.\n * @return {Array} The elements in `list1` that are not in `list2`.\n * @see R.difference, R.symmetricDifference, R.symmetricDifferenceWith\n * @example\n *\n *      var cmp = (x, y) => x.a === y.a;\n *      var l1 = [{a: 1}, {a: 2}, {a: 3}];\n *      var l2 = [{a: 3}, {a: 4}];\n *      R.differenceWith(cmp, l1, l2); //=> [{a: 1}, {a: 2}]\n */\nmodule.exports = _curry3(function differenceWith(pred, first, second) {\n  var out = [];\n  var idx = 0;\n  var firstLen = first.length;\n  while (idx < firstLen) {\n    if (!_containsWith(pred, first[idx], second) &&\n        !_containsWith(pred, first[idx], out)) {\n      out.push(first[idx]);\n    }\n    idx += 1;\n  }\n  return out;\n});\n","var _curry1 = require('./internal/_curry1');\n\n\n/**\n * A function that returns the `!` of its argument. It will return `true` when\n * passed false-y value, and `false` when passed a truth-y one.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Logic\n * @sig * -> Boolean\n * @param {*} a any value\n * @return {Boolean} the logical inverse of passed argument.\n * @see R.complement\n * @example\n *\n *      R.not(true); //=> false\n *      R.not(false); //=> true\n *      R.not(0); //=> true\n *      R.not(1); //=> false\n */\nmodule.exports = _curry1(function not(a) {\n  return !a;\n});\n","module.exports = function _aperture(n, list) {\n  var idx = 0;\n  var limit = list.length - (n - 1);\n  var acc = new Array(limit >= 0 ? limit : 0);\n  while (idx < limit) {\n    acc[idx] = Array.prototype.slice.call(list, idx, idx + n);\n    idx += 1;\n  }\n  return acc;\n};\n","var _curry2 = require('./internal/_curry2');\nvar length = require('./length');\nvar slice = require('./slice');\n\n\n/**\n * Splits a given list or string at a given index.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category List\n * @sig Number -> [a] -> [[a], [a]]\n * @sig Number -> String -> [String, String]\n * @param {Number} index The index where the array/string is split.\n * @param {Array|String} array The array/string to be split.\n * @return {Array}\n * @example\n *\n *      R.splitAt(1, [1, 2, 3]);          //=> [[1], [2, 3]]\n *      R.splitAt(5, 'hello world');      //=> ['hello', ' world']\n *      R.splitAt(-1, 'foobar');          //=> ['fooba', 'r']\n */\nmodule.exports = _curry2(function splitAt(index, array) {\n  return [slice(0, index, array), slice(index, length(array), array)];\n});\n","var _curry3 = require('./internal/_curry3');\n\n\n/**\n * The `mapAccumRight` function behaves like a combination of map and reduce; it\n * applies a function to each element of a list, passing an accumulating\n * parameter from right to left, and returning a final value of this\n * accumulator together with the new list.\n *\n * Similar to [`mapAccum`](#mapAccum), except moves through the input list from\n * the right to the left.\n *\n * The iterator function receives two arguments, *value* and *acc*, and should\n * return a tuple *[value, acc]*.\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category List\n * @sig (x-> acc -> (y, acc)) -> acc -> [x] -> ([y], acc)\n * @param {Function} fn The function to be called on every element of the input `list`.\n * @param {*} acc The accumulator value.\n * @param {Array} list The list to iterate over.\n * @return {*} The final, accumulated value.\n * @see R.addIndex, R.mapAccum\n * @example\n *\n *      var digits = ['1', '2', '3', '4'];\n *      var append = (a, b) => [a + b, a + b];\n *\n *      R.mapAccumRight(append, 5, digits); //=> [['12345', '2345', '345', '45'], '12345']\n * @symb R.mapAccumRight(f, a, [b, c, d]) = [\n *   [\n *     f(b, f(c, f(d, a)[0])[0])[1],\n *     f(c, f(d, a)[0])[1],\n *     f(d, a)[1],\n *   ]\n *   f(b, f(c, f(d, a)[0])[0])[0],\n * ]\n */\nmodule.exports = _curry3(function mapAccumRight(fn, acc, list) {\n  var idx = list.length - 1;\n  var result = [];\n  var tuple = [acc];\n  while (idx >= 0) {\n    tuple = fn(list[idx], tuple[0]);\n    result[idx] = tuple[1];\n    idx -= 1;\n  }\n  return [result, tuple[0]];\n});\n","var _arrayFromIterator = require('./_arrayFromIterator');\nvar _functionName = require('./_functionName');\nvar _has = require('./_has');\nvar identical = require('../identical');\nvar keys = require('../keys');\nvar type = require('../type');\n\n\nmodule.exports = function _equals(a, b, stackA, stackB) {\n  if (identical(a, b)) {\n    return true;\n  }\n\n  if (type(a) !== type(b)) {\n    return false;\n  }\n\n  if (a == null || b == null) {\n    return false;\n  }\n\n  if (typeof a['fantasy-land/equals'] === 'function' || typeof b['fantasy-land/equals'] === 'function') {\n    return typeof a['fantasy-land/equals'] === 'function' && a['fantasy-land/equals'](b) &&\n           typeof b['fantasy-land/equals'] === 'function' && b['fantasy-land/equals'](a);\n  }\n\n  if (typeof a.equals === 'function' || typeof b.equals === 'function') {\n    return typeof a.equals === 'function' && a.equals(b) &&\n           typeof b.equals === 'function' && b.equals(a);\n  }\n\n  switch (type(a)) {\n    case 'Arguments':\n    case 'Array':\n    case 'Object':\n      if (typeof a.constructor === 'function' &&\n          _functionName(a.constructor) === 'Promise') {\n        return a === b;\n      }\n      break;\n    case 'Boolean':\n    case 'Number':\n    case 'String':\n      if (!(typeof a === typeof b && identical(a.valueOf(), b.valueOf()))) {\n        return false;\n      }\n      break;\n    case 'Date':\n      if (!identical(a.valueOf(), b.valueOf())) {\n        return false;\n      }\n      break;\n    case 'Error':\n      return a.name === b.name && a.message === b.message;\n    case 'RegExp':\n      if (!(a.source === b.source &&\n            a.global === b.global &&\n            a.ignoreCase === b.ignoreCase &&\n            a.multiline === b.multiline &&\n            a.sticky === b.sticky &&\n            a.unicode === b.unicode)) {\n        return false;\n      }\n      break;\n    case 'Map':\n    case 'Set':\n      if (!_equals(_arrayFromIterator(a.entries()), _arrayFromIterator(b.entries()), stackA, stackB)) {\n        return false;\n      }\n      break;\n    case 'Int8Array':\n    case 'Uint8Array':\n    case 'Uint8ClampedArray':\n    case 'Int16Array':\n    case 'Uint16Array':\n    case 'Int32Array':\n    case 'Uint32Array':\n    case 'Float32Array':\n    case 'Float64Array':\n      break;\n    case 'ArrayBuffer':\n      break;\n    default:\n      // Values of other types are only equal if identical.\n      return false;\n  }\n\n  var keysA = keys(a);\n  if (keysA.length !== keys(b).length) {\n    return false;\n  }\n\n  var idx = stackA.length - 1;\n  while (idx >= 0) {\n    if (stackA[idx] === a) {\n      return stackB[idx] === b;\n    }\n    idx -= 1;\n  }\n\n  stackA.push(a);\n  stackB.push(b);\n  idx = keysA.length - 1;\n  while (idx >= 0) {\n    var key = keysA[idx];\n    if (!(_has(key, b) && _equals(b[key], a[key], stackA, stackB))) {\n      return false;\n    }\n    idx -= 1;\n  }\n  stackA.pop();\n  stackB.pop();\n  return true;\n};\n","module.exports = function _arrayFromIterator(iter) {\n  var list = [];\n  var next;\n  while (!(next = iter.next()).done) {\n    list.push(next.value);\n  }\n  return list;\n};\n"],"sourceRoot":""}